<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>HTML5+CSS3小实例：Css图片响应悬停效果</title>
      <link href="/2022/04/24/css-css-an-li-css-tu-pian-xiang-ying-xuan-ting-xiao-guo/"/>
      <url>/2022/04/24/css-css-an-li-css-tu-pian-xiang-ying-xuan-ting-xiao-guo/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML5-CSS3小实例：Css图片响应悬停效果"><a href="#HTML5-CSS3小实例：Css图片响应悬停效果" class="headerlink" title="HTML5+CSS3小实例：Css图片响应悬停效果"></a>HTML5+CSS3小实例：Css图片响应悬停效果</h1><p>布局:<img src="http://deadlykui.github.io/medias/images/Css_case/thePictureRespondsToTheHoverEffect/01.jpg"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>photo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./img/wallhaven-6o517l.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>文字文字文字文字文文字文文字文文字文字文字文字文字文字文字文字文字文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>photo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./img/wallhaven-6o517l.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>文字文字文字文字文文字文文字文文字文字文字文字文字文字文字文字文字文字文字文文字文文字文字文字文字文字文字文字文字文字文字文字文文字文文字文字文字文字文字文字文字文字文字文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>photo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./img/wallhaven-6o517l.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>文字文字文字文字文文字文文字文文字文字文字文字文字文字文字文字文字文字文字文字文字文字文文字文文字文文字文字文字文字文字文字文字文字文字文字文字文字文字文字文文字文文字文文字文字文字文字文字文字文字文字文字文字文字文字文字文字文文字文文字文文字文字文字文字文字文字文字文字文字文字文字文字文字文字文文字文文字文文字文字文字文字文字文字文字文字文字文字文字文字文字文字文文字文文字文文字文字文字文字文字文字文字文字文字文字文字文字文字文字文文文字文字文字文字文文字文文字文文字文字文字文字文字文字文字文字文字文字文字文字文字文字文文字文文字文文字文字文字文字文字文字文字文字文字文字文字文字文字文字文文字文文字文文字文字文字文字文字文字文字文字文字文字文字文字文字文字文文字文文字文文字文字文字文字文字文字文字文字文字文字文字文字文字文字文文字文文字文文字文字文字文字文字文字文字文字文字文字文字文字文字文字文文字文文字文文字文字文字文字文字文字文字文字文字文字文字文字文字文字文文字文文字文文字文字文字文字文字文字文字文字文字文字文字文字文字文字文文字文文字文文字文字文字文字文字文字文字文字文字文字字文文字文文字文字文字文字文字文字文字文字文字文字文字文字文字文字文文字文文字文文字文字文字文字文字文字文字文字文字文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">*</span><span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'Poppins'</span><span class="token punctuation">,</span>sans-serif<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">body</span><span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>     <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right<span class="token punctuation">,</span> #a8caba 0%<span class="token punctuation">,</span> #5d4157 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.wrap</span><span class="token punctuation">&#123;</span>    <span class="token comment">/* position: relative; */</span>    <span class="token property">width</span><span class="token punctuation">:</span> 1100px<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">flex-flow</span><span class="token punctuation">:</span> row wrap<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.wrap .item</span><span class="token punctuation">&#123;</span>   <span class="token comment">/*  position: relative; */</span>    <span class="token property">max-width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 215px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 30px 10px<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 20px 15px<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 5px 20px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0.5<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> 0.3s ease-in-out<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.wrap .item:hover</span><span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 420px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.wrap .item .photo</span><span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 260px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 241px<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> -60px<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 5px 20px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0.2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.wrap .item .photo img</span><span class="token punctuation">&#123;</span>     <span class="token property">max-width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.wrap .item .content</span><span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>   <span class="token comment">/*  width: 100%;    height: 100px; */</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> -140px<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 10px 15px<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #111<span class="token punctuation">;</span>    <span class="token property">visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> 0.3s ease-in-out<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.wrap .item:hover .content</span><span class="token punctuation">&#123;</span>    <span class="token property">visibility</span><span class="token punctuation">:</span> visible<span class="token punctuation">;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 3<span class="token punctuation">;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> -40px<span class="token punctuation">;</span>    <span class="token property">transition-delay</span><span class="token punctuation">:</span> 0.3s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果:<img src="http://deadlykui.github.io/medias/images/Css_case/thePictureRespondsToTheHoverEffect/animation.gif"></p><h3 id="提问：文字超出范围，如何隐藏？"><a href="#提问：文字超出范围，如何隐藏？" class="headerlink" title="提问：文字超出范围，如何隐藏？"></a>提问：文字超出范围，如何隐藏？</h3><p>摘录：<a href="https://www.tutorialspoint.com/tutorialslibrary.htm">Free Online Tutorials and Courses (tutorialspoint.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> HTML+CSS案例 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> CSS3 </tag>
            
            <tag> 案例 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Css基础 - 单选框与复选框伪类的应用</title>
      <link href="/2022/04/17/css-css-ji-chu-an-li-dan-xuan-kuang-he-fu-xuan-kuang-wei-lei-de-ying-yong/"/>
      <url>/2022/04/17/css-css-ji-chu-an-li-dan-xuan-kuang-he-fu-xuan-kuang-wei-lei-de-ying-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="Css基础-单选框与复选框伪类的应用"><a href="#Css基础-单选框与复选框伪类的应用" class="headerlink" title="Css基础 - 单选框与复选框伪类的应用"></a>Css基础 - 单选框与复选框伪类的应用</h1><p>宗旨是在不需要用到 js脚本 的情况下实现“点击”操作 (使用伪类操作获取理想效果)</p><h3 id="radio和checkbox的基本应用"><a href="#radio和checkbox的基本应用" class="headerlink" title="radio和checkbox的基本应用"></a>radio和checkbox的基本应用</h3><p><img src="http://deadlykui.github.io/medias/images/Css_case/ApplicationOfRadioBoxAndCheckboxPseudo-classes/animation1.gif"></p><blockquote><p>input里的 id 与label里的 for属性 相互绑定</p></blockquote><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- checked 默认选中 hidden 隐藏input --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>女<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span> <span class="token attr-name">hidden</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>for_one<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> 复选1        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>for_two<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> 复选2        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>for_one<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>我是文字复选 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>for_two<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>我是文字复选 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>根据上面基础加上<code>:checkbox</code>伪类 就能做到点击效果</p><h3 id="checkbox-理解及应用"><a href="#checkbox-理解及应用" class="headerlink" title=":checkbox 理解及应用"></a>:checkbox 理解及应用</h3><p><strong><code>:checked</code></strong> CSS 伪类选择器表示任何处于选中状态的<strong>radio</strong>(<code>&lt;input type=&quot;radio&quot;&gt;</code>), <strong>checkbox</strong> (<code>&lt;input type=&quot;checkbox&quot;&gt;</code>) 或(“select”) 元素中的<strong>option</strong> HTML元素(“option”)。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 匹配任意被勾选/选中的radio(单选按钮),checkbox(复选框),或者option(select中的一项) */</span><span class="token selector">:checked</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>  <span class="token property">margin-left</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>用户通过勾选&#x2F;选中元素或取消勾选&#x2F;取消选中，来改变该元素的 :checked 状态。</p><p><img src="http://deadlykui.github.io/medias/images/Css_case/ApplicationOfRadioBoxAndCheckboxPseudo-classes/animation2.gif"></p><h3 id="借用隐藏的checkbox来切换元素的样式（显示-x2F-隐藏"><a href="#借用隐藏的checkbox来切换元素的样式（显示-x2F-隐藏" class="headerlink" title="借用隐藏的checkbox来切换元素的样式（显示&#x2F;隐藏)"></a>借用隐藏的checkbox来切换元素的样式（显示&#x2F;隐藏)</h3><p>这个例子利用了<code>:checked</code>伪类，让用户基于复选框的状态切换内容，而无需使用JavaScript。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 点击圆圈充满整个屏幕 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>click_01<span class="token punctuation">"</span></span> <span class="token attr-name">hidden</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>click_01<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>start_btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>s_Btn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>click_01<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>end_btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>e_Btn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clickChange<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">&lt;style>        *</span><span class="token punctuation">&#123;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.container</span><span class="token punctuation">&#123;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 100vh<span class="token punctuation">;</span>            <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>            <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.clickChange</span><span class="token punctuation">&#123;</span>           <span class="token property">width</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>           <span class="token property">height</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>           <span class="token property">background-color</span><span class="token punctuation">:</span> aqua<span class="token punctuation">;</span>           <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>            <span class="token property">transition</span><span class="token punctuation">:</span> 0.5s<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 开始按钮 */</span>        <span class="token selector">.start_btn</span><span class="token punctuation">&#123;</span>            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> aquamarine<span class="token punctuation">;</span>            <span class="token property">transition</span><span class="token punctuation">:</span> 0.4s<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 结束按钮 */</span>        <span class="token selector">.end_btn</span><span class="token punctuation">&#123;</span>            <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>            <span class="token property">top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>            <span class="token property">left</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> aquamarine<span class="token punctuation">;</span>            <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token comment">/* ~ 通用兄弟选择器 */</span>         <span class="token selector">#click_01:checked ~ .clickChange</span><span class="token punctuation">&#123;</span>           <span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span>           <span class="token property">height</span><span class="token punctuation">:</span> 100vh<span class="token punctuation">;</span>           <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>           <span class="token property">border-radius</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span>        <span class="token selector">#click_01:checked ~ .start_btn</span><span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> aquamarine<span class="token punctuation">;</span>            <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>            <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">#click_01:checked ~ .end_btn</span><span class="token punctuation">&#123;</span>            <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    &lt;/style><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://deadlykui.github.io/medias/images/Css_case/ApplicationOfRadioBoxAndCheckboxPseudo-classes/animation3.gif"></p><h2 id="进阶案例-全屏搜索栏"><a href="#进阶案例-全屏搜索栏" class="headerlink" title="进阶案例 - 全屏搜索栏"></a>进阶案例 - 全屏搜索栏</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search_btn<span class="token punctuation">"</span></span> <span class="token attr-name">hidden</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search_btn<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search-btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-search<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search_btn<span class="token punctuation">"</span></span> <span class="token attr-name">hidden</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search_btn<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>close-btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-close<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-search<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">*</span><span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.wrap</span><span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100vh<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.search-btn</span><span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>    <span class="token comment">/* display: none; */</span><span class="token punctuation">&#125;</span><span class="token selector">.search-btn .fa</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 22px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 关闭按钮 */</span><span class="token selector">.close-btn</span><span class="token punctuation">&#123;</span>   <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>   <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>   <span class="token property">top</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>   <span class="token property">right</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>   <span class="token property">font-size</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>   <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>   <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>   <span class="token property">z-index</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.container</span><span class="token punctuation">&#123;</span>   <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>   <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>   <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>   <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>   <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>   <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>   <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>200deg<span class="token punctuation">,</span>#6e86ee<span class="token punctuation">,</span>#453c90<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">circle</span><span class="token punctuation">(</span>30px at 50% 50%<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">/* 设置过度 */</span>   <span class="token property">transition</span><span class="token punctuation">:</span> 0.4s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.search-box</span><span class="token punctuation">&#123;</span>    <span class="token comment">/* display: none; */</span>    <span class="token comment">/* width: 400px; */</span>    <span class="token comment">/* 默认宽度为0 隐藏*/</span>    <span class="token property">width</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span>space-between<span class="token punctuation">;</span>    <span class="token property">border-bottom</span><span class="token punctuation">:</span> 3px solid #fff<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> 0.3s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.search-box input</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 22px<span class="token punctuation">;</span>    <span class="token property">text-indent</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.search-box input::placeholder</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span><span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>0.7<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">.search-box .fa</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 22px<span class="token punctuation">;</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#search_btn:checked ~ .search-btn</span><span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#search_btn:checked ~ .close-btn</span><span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#search_btn:checked ~ .container</span><span class="token punctuation">&#123;</span>    <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">circle</span><span class="token punctuation">(</span>100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#search_btn:checked ~ .container .search-box</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://deadlykui.github.io/medias/images/Css_case/ApplicationOfRadioBoxAndCheckboxPseudo-classes/animation4.gif"></p><p>摘录：</p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:checked">:checked - CSS（层叠样式表） | MDN (mozilla.org)</a></p><p><a href="https://www.runoob.com/tags/tag-input.html">HTML input 标签 | 菜鸟教程 (runoob.com)</a></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/General_sibling_combinator">通用兄弟选择器 - CSS（层叠样式表） | MDN (mozilla.org)</a></p>]]></content>
      
      
      <categories>
          
          <category> 布局 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> CSS3 </tag>
            
            <tag> 案例 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Css基础 - CSS画基本图形</title>
      <link href="/2022/04/15/css-shi-yong-css-hua-yi-xie-ji-ben-de-tu-xing/"/>
      <url>/2022/04/15/css-shi-yong-css-hua-yi-xie-ji-ben-de-tu-xing/</url>
      
        <content type="html"><![CDATA[<h1 id="CSS画基本图形"><a href="#CSS画基本图形" class="headerlink" title="CSS画基本图形"></a>CSS画基本图形</h1><p>有时候我的内心会问，这些图形还不如直接用Ps或者svg等一些工具完成。可能是打过之后细节都在其中。</p><h3 id="1-使用-border-属性达到一系列基本图形效果"><a href="#1-使用-border-属性达到一系列基本图形效果" class="headerlink" title="1. 使用 border 属性达到一系列基本图形效果"></a>1. 使用 border 属性达到一系列基本图形效果</h3><p>主要运用的是  <code>transparent值</code> 达到透明的效果</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>circle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>圆形<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>triangle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>三角形<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>trapezium<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>等腰梯形<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hexagon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>六边形<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bottom<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.wrap</span><span class="token punctuation">&#123;</span>          <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>          <span class="token property">flex-flow</span><span class="token punctuation">:</span> row wrap<span class="token punctuation">;</span>          <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>          <span class="token property">align-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token selector">.circle</span><span class="token punctuation">&#123;</span>          <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>          <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>          <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 5<span class="token punctuation">,</span> 5<span class="token punctuation">,</span> 0.979<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token selector">.triangle</span><span class="token punctuation">&#123;</span>          <span class="token property">width</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>          <span class="token property">height</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>         <span class="token comment">/*  background: rgba(255, 5, 5, 0.979); */</span>          <span class="token property">border-top</span><span class="token punctuation">:</span> 50px solid transparent<span class="token punctuation">;</span>          <span class="token property">border-left</span><span class="token punctuation">:</span> 50px solid  transparent<span class="token punctuation">;</span>          <span class="token property">border-bottom</span><span class="token punctuation">:</span> 50px solid pink<span class="token punctuation">;</span>          <span class="token property">border-right</span><span class="token punctuation">:</span> 50px solid transparent<span class="token punctuation">;</span>          <span class="token comment">/* transparent 为透明色 */</span>      <span class="token punctuation">&#125;</span>      <span class="token selector">.trapezium</span><span class="token punctuation">&#123;</span>          <span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>          <span class="token property">height</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>          <span class="token property">border-top</span><span class="token punctuation">:</span> 50px solid transparent<span class="token punctuation">;</span>          <span class="token property">border-left</span><span class="token punctuation">:</span> 50px solid  transparent<span class="token punctuation">;</span>          <span class="token property">border-bottom</span><span class="token punctuation">:</span> 50px solid green<span class="token punctuation">;</span>          <span class="token property">border-right</span><span class="token punctuation">:</span> 50px solid transparent<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token selector">.hexagon .top</span><span class="token punctuation">&#123;</span>          <span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>          <span class="token property">border-top</span><span class="token punctuation">:</span> 50px solid transparent<span class="token punctuation">;</span>          <span class="token property">border-left</span><span class="token punctuation">:</span> 50px solid  transparent<span class="token punctuation">;</span>          <span class="token property">border-bottom</span><span class="token punctuation">:</span> 50px solid green<span class="token punctuation">;</span>          <span class="token property">border-right</span><span class="token punctuation">:</span> 50px solid transparent<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token selector">.hexagon .bottom</span><span class="token punctuation">&#123;</span>          <span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>             <span class="token property">border-top</span><span class="token punctuation">:</span> 50px solid green<span class="token punctuation">;</span>          <span class="token property">border-left</span><span class="token punctuation">:</span> 50px solid  transparent<span class="token punctuation">;</span>          <span class="token property">border-bottom</span><span class="token punctuation">:</span> 50px solid transparent<span class="token punctuation">;</span>          <span class="token property">border-right</span><span class="token punctuation">:</span> 50px solid transparent<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://deadlykui.github.io/medias/images/Css_case/BasicShapes/01.jpg"></p><h3 id="2-使用-clip-path-属性-裁剪得到基本图形效果"><a href="#2-使用-clip-path-属性-裁剪得到基本图形效果" class="headerlink" title="2. 使用 clip-path 属性 裁剪得到基本图形效果"></a>2. 使用 clip-path 属性 裁剪得到基本图形效果</h3><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p><code>clip-path</code> CSS 属性可以创建一个只有元素的部分区域可以显示的剪切区域。区域内的部分显示，区域外的隐藏。剪切区域是被引用内嵌的URL定义的路径或者外部<a href="https://so.csdn.net/so/search?q=svg&spm=1001.2101.3001.7020">svg</a>的路径，或者作为一个形状。clip-path属性代替了现在已经弃用的剪切 <code>clip</code>属性。</p><h4 id="兼容性"><a href="#兼容性" class="headerlink" title="兼容性"></a>兼容性</h4><p><a href="https://caniuse.com/#search=clip-path">点击查看</a></p><h4 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h4><p><code>clip-source</code> | <code>basic-shape</code> | <code>geometry-box</code>  | <code>none</code></p><p>属性说明</p><p><code>clip-source</code>  &#x3D;  <strong>url</strong><br><code>basic-shape</code>  &#x3D;  <strong>inset</strong> | <strong>circle</strong> | <strong>ellipse</strong> | <strong>polygon</strong><br><code>geometry-box</code>  &#x3D;  <strong>shape-box</strong> | <strong>fill-box</strong> | <strong>stroke-box</strong> | <strong>view-box</strong></p><h4 id="语法详解"><a href="#语法详解" class="headerlink" title="语法详解"></a>语法详解</h4><h5 id="基本图形：inset"><a href="#基本图形：inset" class="headerlink" title="基本图形：inset"></a>基本图形：inset</h5><blockquote><p><code>inset()</code> : 定义一个矩形 。注意，定义矩形不是<code>rect</code>，而是 **<code>inset</code>**。</p></blockquote><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;语法inset( &lt;length-percentage&gt;&#123;1,4&#125; [ round &lt;border-radius&gt; ]? )&#x2F;&#x2F;说明inset()可以传入5个参数，分别对应top,right,bottom,left的裁剪位置,round radius（可选，圆角）&#x2F;&#x2F;示例clip-path: inset(2em 3em 2em 1em round 2em);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="基本图形：circle"><a href="#基本图形：circle" class="headerlink" title="基本图形：circle"></a>基本图形：circle</h5><blockquote><p><code>circle()</code> : 定义一个圆 。</p></blockquote><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;语法circle( [ &lt;shape-radius&gt; ]? [ at &lt;position&gt; ]? )&#x2F;&#x2F;说明circle()可以传人2个可选参数；1. 圆的半径，默认元素宽高中短的那个为直径，支持百分比2. 圆心位置，默认为元素中心点&#x2F;&#x2F;示例clip-path: circle(30% at 150px 120px);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="基本图形：ellipse"><a href="#基本图形：ellipse" class="headerlink" title="基本图形：ellipse"></a>基本图形：ellipse</h5><blockquote><p><code>ellipse()</code> : 定义一个椭圆 。</p></blockquote><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;语法ellipse( [ &lt;shape-radius&gt;&#123;2&#125; ]? [ at &lt;position&gt; ]? )&#x2F;&#x2F;说明ellipse()可以传人3个可选参数；1. 椭圆的X轴半径，默认是宽度的一半，支持百分比2. 椭圆的Y轴半径，默认是高度的一半，支持百分比3. 椭圆中心位置，默认是元素的中心点&#x2F;&#x2F;示例clip-path: ellipse(45% 30% at 50% 50%);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="基本图形：polygon"><a href="#基本图形：polygon" class="headerlink" title="基本图形：polygon"></a>基本图形：polygon</h5><blockquote><p>polygon() : 定义一个多边形 。</p></blockquote><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;语法polygon( &lt;fill-rule&gt;? , [ &lt;length-percentage&gt; &lt;length-percentage&gt; ]# )&#x2F;&#x2F;说明&lt;fill-rule&gt;可选，表示填充规则用来确定该多边形的内部。可能的值有nonzero和evenodd,默认值是nonzero后面的每对参数表示多边形的顶点坐标（X,Y），也就是连接点&#x2F;&#x2F;示例clip-path: polygon(50% 0,100% 50%,0 100%);    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://deadlykui.github.io/medias/images/Css_case/BasicShapes/02.jpg" alt="说明讲解"></p><h4 id="使用实例"><a href="#使用实例" class="headerlink" title="使用实例"></a>使用实例</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- clip-path属性的应用  --></span>     <span class="token comment">&lt;!-- clip-path CSS 属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。--></span>   <span class="token comment">&lt;!-- 可以用table表格布局不过，懒直接flex算了 --></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>circle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>圆形<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ellipse<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>椭圆<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rectangle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>矩形<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>triangle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>三角形<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rhombus<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>菱形<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>trapezoidal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>梯形<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parallelogram<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>平行四边形<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pentagon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>五边形<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hexagon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>六边形<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>heptagon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>七边形<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>octagon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>八边形<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>obliqueAngle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>斜角<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>notch<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>槽口<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>leftArrow<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>左箭头<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>star<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>星星<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>crosses<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>十字架<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fork<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>叉号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dialogBox<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>对话框<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deformation<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>变形效果<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.wrap</span><span class="token punctuation">&#123;</span>            <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>            <span class="token property">flex-flow</span><span class="token punctuation">:</span> row wrap<span class="token punctuation">;</span>            <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>            <span class="token property">align-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.wrap div</span><span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 圆形裁剪 */</span>        <span class="token selector">.circle</span><span class="token punctuation">&#123;</span>            <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">circle</span><span class="token punctuation">(</span>50% at 50% 50%<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 椭圆裁剪 */</span>        <span class="token selector">.ellipse</span><span class="token punctuation">&#123;</span>            <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">ellipse</span><span class="token punctuation">(</span>25% 40% at 50% 50%<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 矩形裁剪 */</span>        <span class="token selector">.rectangle</span><span class="token punctuation">&#123;</span>            <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">inset</span><span class="token punctuation">(</span>5% 20% 15% 10%<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 多边形裁剪 - 三角形 */</span>        <span class="token selector">.triangle</span><span class="token punctuation">&#123;</span>            <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">polygon</span><span class="token punctuation">(</span>50% 0%<span class="token punctuation">,</span> 0% 100%<span class="token punctuation">,</span> 100% 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 多边形裁剪 - 菱形 */</span>        <span class="token selector">.rhombus</span><span class="token punctuation">&#123;</span>            <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">polygon</span><span class="token punctuation">(</span>50% 0%<span class="token punctuation">,</span> 100% 50%<span class="token punctuation">,</span> 50% 100%<span class="token punctuation">,</span> 0% 50%<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 多边形裁剪 - 梯形 */</span>        <span class="token selector">.trapezoidal</span><span class="token punctuation">&#123;</span>            <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">polygon</span><span class="token punctuation">(</span>25% 0%<span class="token punctuation">,</span>75% 0%<span class="token punctuation">,</span>100% 100%<span class="token punctuation">,</span>0% 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 多边形裁剪 - 平行四边形 */</span>        <span class="token selector">.parallelogram</span><span class="token punctuation">&#123;</span>            <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">polygon</span><span class="token punctuation">(</span>25% 0%<span class="token punctuation">,</span> 100% 0%<span class="token punctuation">,</span> 75% 100%<span class="token punctuation">,</span> 0% 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 多边形裁剪 - 五边形 */</span>        <span class="token selector">.pentagon</span><span class="token punctuation">&#123;</span>            <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">polygon</span><span class="token punctuation">(</span>50% 0%<span class="token punctuation">,</span> 100% 38%<span class="token punctuation">,</span> 82% 100%<span class="token punctuation">,</span> 18% 100%<span class="token punctuation">,</span> 0% 38%<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 多边形裁剪 - 六边形 */</span>        <span class="token selector">.hexagon</span><span class="token punctuation">&#123;</span>            <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">polygon</span><span class="token punctuation">(</span>50% 0%<span class="token punctuation">,</span> 100% 25%<span class="token punctuation">,</span> 100% 75%<span class="token punctuation">,</span> 50% 100%<span class="token punctuation">,</span> 0% 75%<span class="token punctuation">,</span> 0% 25%<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 多边形裁剪 - 七边形 */</span>        <span class="token selector">.heptagon</span><span class="token punctuation">&#123;</span>            <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">polygon</span><span class="token punctuation">(</span>50% 0%<span class="token punctuation">,</span> 90% 20%<span class="token punctuation">,</span> 100% 60%<span class="token punctuation">,</span> 75% 100%<span class="token punctuation">,</span> 25% 100%<span class="token punctuation">,</span> 0% 60%<span class="token punctuation">,</span> 10% 20%<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 多边形裁剪 - 八边形 */</span>        <span class="token selector">.octagon</span><span class="token punctuation">&#123;</span>            <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">polygon</span><span class="token punctuation">(</span>30% 0%<span class="token punctuation">,</span> 70% 0%<span class="token punctuation">,</span> 100% 30%<span class="token punctuation">,</span> 100% 70%<span class="token punctuation">,</span> 70% 100%<span class="token punctuation">,</span> 30% 100%<span class="token punctuation">,</span> 0% 70%<span class="token punctuation">,</span> 0% 30%<span class="token punctuation">)</span><span class="token punctuation">;</span>                      <span class="token punctuation">&#125;</span>        <span class="token comment">/* 多边形裁剪 - 斜角 */</span>        <span class="token selector">.obliqueAngle</span><span class="token punctuation">&#123;</span>            <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">polygon</span><span class="token punctuation">(</span>20% 0%<span class="token punctuation">,</span> 80% 0%<span class="token punctuation">,</span> 100% 20%<span class="token punctuation">,</span> 100% 80%<span class="token punctuation">,</span> 80% 100%<span class="token punctuation">,</span> 20% 100%<span class="token punctuation">,</span> 0% 80%<span class="token punctuation">,</span> 0% 20%<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 多边形裁剪 - 槽口 */</span>        <span class="token selector">.notch</span><span class="token punctuation">&#123;</span>            <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">polygon</span><span class="token punctuation">(</span>0% 15%<span class="token punctuation">,</span> 15% 15%<span class="token punctuation">,</span> 15% 0%<span class="token punctuation">,</span> 85% 0%<span class="token punctuation">,</span> 85% 15%<span class="token punctuation">,</span> 100% 15%<span class="token punctuation">,</span> 100% 85%<span class="token punctuation">,</span> 85% 85%<span class="token punctuation">,</span> 85% 100%<span class="token punctuation">,</span> 15% 100%<span class="token punctuation">,</span> 15% 85%<span class="token punctuation">,</span> 0% 85%<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 多边形裁剪 - 左箭头 */</span>        <span class="token selector">.leftArrow</span><span class="token punctuation">&#123;</span>            <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">polygon</span><span class="token punctuation">(</span>40% 0%<span class="token punctuation">,</span> 40% 20%<span class="token punctuation">,</span> 100% 20%<span class="token punctuation">,</span> 100% 80%<span class="token punctuation">,</span> 40% 80%<span class="token punctuation">,</span> 40% 100%<span class="token punctuation">,</span> 0% 50%<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 多边形裁剪 - 星星 */</span>        <span class="token selector">.star</span><span class="token punctuation">&#123;</span>            <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">polygon</span><span class="token punctuation">(</span>50% 0%<span class="token punctuation">,</span> 61% 35%<span class="token punctuation">,</span> 98% 35%<span class="token punctuation">,</span> 68% 57%<span class="token punctuation">,</span> 79% 91%<span class="token punctuation">,</span> 50% 70%<span class="token punctuation">,</span> 21% 91%<span class="token punctuation">,</span> 32% 57%<span class="token punctuation">,</span> 2% 35%<span class="token punctuation">,</span> 39% 35%<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 多边形裁剪 - 十字架 */</span>        <span class="token selector">.crosses</span><span class="token punctuation">&#123;</span>            <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">polygon</span><span class="token punctuation">(</span>10% 25%<span class="token punctuation">,</span> 35% 25%<span class="token punctuation">,</span> 35% 0%<span class="token punctuation">,</span> 65% 0%<span class="token punctuation">,</span> 65% 25%<span class="token punctuation">,</span> 90% 25%<span class="token punctuation">,</span> 90% 50%<span class="token punctuation">,</span> 65% 50%<span class="token punctuation">,</span> 65% 100%<span class="token punctuation">,</span> 35% 100%<span class="token punctuation">,</span> 35% 50%<span class="token punctuation">,</span> 10% 50%<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 多边形裁剪 - 叉号 */</span>        <span class="token selector">.fork</span><span class="token punctuation">&#123;</span>            <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">polygon</span><span class="token punctuation">(</span>20% 0%<span class="token punctuation">,</span> 0% 20%<span class="token punctuation">,</span> 30% 50%<span class="token punctuation">,</span> 0% 80%<span class="token punctuation">,</span> 20% 100%<span class="token punctuation">,</span> 50% 70%<span class="token punctuation">,</span> 80% 100%<span class="token punctuation">,</span> 100% 80%<span class="token punctuation">,</span> 70% 50%<span class="token punctuation">,</span> 100% 20%<span class="token punctuation">,</span> 80% 0%<span class="token punctuation">,</span> 50% 30%<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 多边形裁剪 - 对话框 */</span>        <span class="token selector">.dialogBox</span><span class="token punctuation">&#123;</span>            <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">polygon</span><span class="token punctuation">(</span>0% 0%<span class="token punctuation">,</span> 100% 0%<span class="token punctuation">,</span> 100% 75%<span class="token punctuation">,</span> 75% 75%<span class="token punctuation">,</span> 75% 100%<span class="token punctuation">,</span> 50% 75%<span class="token punctuation">,</span> 0% 75%<span class="token punctuation">)</span><span class="token punctuation">;</span>                       <span class="token punctuation">&#125;</span>        <span class="token comment">/* 变形效果 */</span>               <span class="token selector">.deformation</span><span class="token punctuation">&#123;</span>            <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">polygon</span><span class="token punctuation">(</span>20% 0%<span class="token punctuation">,</span> 80% 0%<span class="token punctuation">,</span> 100% 20%<span class="token punctuation">,</span> 100% 80%<span class="token punctuation">,</span> 80% 100%<span class="token punctuation">,</span> 20% 100%<span class="token punctuation">,</span> 0% 80%<span class="token punctuation">,</span> 0% 20%<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">transition</span><span class="token punctuation">:</span> 0.5s<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.deformation:hover</span><span class="token punctuation">&#123;</span>            <span class="token property">clip-path</span><span class="token punctuation">:</span><span class="token function">polygon</span><span class="token punctuation">(</span>0 0<span class="token punctuation">,</span>0 0<span class="token punctuation">,</span>100% 0<span class="token punctuation">,</span>100% 0<span class="token punctuation">,</span>100% 100%<span class="token punctuation">,</span>100% 100%<span class="token punctuation">,</span>0 100%<span class="token punctuation">,</span>0 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://deadlykui.github.io/medias/images/Css_case/BasicShapes/animation.gif" alt="效果"></p><p>英文：</p><p>shape n. 形状 | geometry n. 几何</p><p>摘录：</p><p><a href="https://www.bilibili.com/video/BV1M44y1T7SD?spm_id_from=333.1007.top_right_bar_window_default_collection.content.click">前端菌带你全面了解CSS高频面试题之用CSS画基本图形_哔哩哔哩_bilibili</a></p><p><a href="https://www.cnblogs.com/xiaohuochai/p/5285752.html">CSS裁剪clip - 小火柴的蓝色理想 - 博客园 (cnblogs.com)</a></p><p><a href="https://blog.csdn.net/weixin_44116302/article/details/98882841">clip-path介绍_定栓的博客-CSDN博客_clippath</a></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/clip-path#try_it">clip-path - CSS（层叠样式表） | MDN (mozilla.org)</a></p>]]></content>
      
      
      <categories>
          
          <category> CSS基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5+CSS3小实例：伸缩侧边栏</title>
      <link href="/2022/04/13/css-css-an-li-shen-suo-ce-bian-lan/"/>
      <url>/2022/04/13/css-css-an-li-shen-suo-ce-bian-lan/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML5-CSS3小实例：伸缩侧边栏"><a href="#HTML5-CSS3小实例：伸缩侧边栏" class="headerlink" title="HTML5+CSS3小实例：伸缩侧边栏"></a>HTML5+CSS3小实例：伸缩侧边栏</h1><h3 id="布局："><a href="#布局：" class="headerlink" title="布局："></a>布局：</h3><p><img src="http://deadlykui.github.io/medias/images/Css_case/RetractTheSidebar/layout.jpg"></p><h4 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码"></a>HTML代码</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./font-awesome-4.7.0/font-awesome-4.7.0/css/font-awesome.min.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./index.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>伸缩侧边栏<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nav<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>icon-img<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./box.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>icon-con<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Kui Gong<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>Hero Box<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- 创建第一个分割线和标题 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>line<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Menu 6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- 创建meun用来放上面的菜单 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menu<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>light<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>licon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-file-text-o<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>con<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>A<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ricon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-cogs<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>light<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>licon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-window-restore<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>con<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>B<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ricon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>light<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>licon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-id-card-o<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>con<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>C<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ricon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>light<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>licon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-meh-o<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>con<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Sales<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ricon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-id-card-o<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>light<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>licon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-question-circle-o<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>con<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Discount<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ricon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>light<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>licon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-folder-open-o<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>con<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Payouts<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ricon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- 创建第二个分割线和标题 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>line<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Server 6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>server<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>light<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>licon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-id-card-o<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>con<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Payouts<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ricon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-id-card-o<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>light<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>licon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-cogs<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>con<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Charset<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ricon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>light<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>licon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-search<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>con<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Payouts<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ricon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-mars<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>light<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>licon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-sliders<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>con<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Setting<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ricon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="CSS代码"><a href="#CSS代码" class="headerlink" title="CSS代码"></a>CSS代码</h4><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">*</span><span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token comment">/* 告诉浏览器：你想要设置的边框和内边距的值是包含在 width 内的。也就是说，如果你将一个元素的 width 设为 100px，那么这 100px 会包含它的 border 和 padding，内容区的实际宽度是 width 减 去(border + padding) 的值。大多数情况下，这使得我们更容易地设定一个元素的宽高。注：border-box 不包含 margin */</span>    <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 0.6<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.wrap</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100vh<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>200deg<span class="token punctuation">,</span>#72afd3<span class="token punctuation">,</span>#96fbc4<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">background-size</span><span class="token punctuation">:</span>cover <span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.nav</span><span class="token punctuation">&#123;</span>    <span class="token comment">/* 这里为了便于观察 - 可以将宽度先改每自己想要:hoverd的大小 */</span>    <span class="token property">width</span><span class="token punctuation">:</span> 110px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 820px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0.8<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> 0.5s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.nav:hover</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 280px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 上面红 黄 绿的样式 */</span><span class="token selector">.btn</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token comment">/* 每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。 */</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> space-around<span class="token punctuation">;</span>    <span class="token comment">/* top right bottom left */</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 20px 0 0 25px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.btn-item</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 选择器匹配属于其父元素的第 N 个子元素，不论元素的类型。 */</span><span class="token selector">.btn-item:nth-child(1)</span><span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> #eb5a56<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.btn-item:nth-child(2)</span><span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> #f8bc33<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.btn-item:nth-child(3)</span><span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> #62cb44<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 头像的样式 */</span><span class="token selector">.icon</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 250px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 20px 0 0 25px<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.icon-img</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.icon-img img</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token comment">/* 防止图片挤压 */</span>    <span class="token property">object-fit</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.icon-con</span><span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.icon-con p</span><span class="token punctuation">&#123;</span>    <span class="token property">padding-top</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.icon-con h2</span><span class="token punctuation">&#123;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 400<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* line 分割线的样式 */</span><span class="token selector">.line</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 0.5<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 20px 25px<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> 0.5s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.nav:hover .line</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 230px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* title的样式 */</span><span class="token selector">.title</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0 0 20px 25px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.title p</span><span class="token punctuation">&#123;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 菜单的样式 */</span><span class="token selector">.menu</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 230px<span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.item</span><span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> 0.5s<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.item:hover</span><span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 0.2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.licon</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* con 内容样式先隐藏起来 width宽度  overflow溢出 opacity透明度 */</span><span class="token selector">.con</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> 0.5s<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> -20px<span class="token punctuation">;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.nav:hover .con</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 160px<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.ricon</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token comment">/* transition: 0.1s; */</span><span class="token punctuation">&#125;</span><span class="token selector">.nav:hover .ricon</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.ricon .fa.fa-cogs,.fa.fa-mars</span><span class="token punctuation">&#123;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #62cb44<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* light 左侧红色线条的效果 前面的html布局还是很重要的 */</span><span class="token selector">.light</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> #eb5a56<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> -25px<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> 0.5s<span class="token punctuation">;</span>    <span class="token comment">/*  */</span>    <span class="token property">border-top-right-radius</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span>    <span class="token property">border-bottom-right-radius</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.item:hover .light</span><span class="token punctuation">&#123;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.server</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0.7<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> 0.5s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.nav:hover .server</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 230px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://deadlykui.github.io/medias/images/Css_case/RetractTheSidebar/animation.gif"></p><p>Forget‘ 属性：</p><ul><li>box-sizing: border-box;</li><li>object-fit: cover;</li></ul><p>摘录：[<a href="https://www.bilibili.com/video/BV1uL41157hj/?spm_id_from=333.788.recommend_more_video.-1">HTML+CSS]【伸缩侧边栏】绝对属于王炸的那种_哔哩哔哩_bilibili</a></p>]]></content>
      
      
      <categories>
          
          <category> HTML+CSS案例 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> CSS3 </tag>
            
            <tag> 案例 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flex布局</title>
      <link href="/2022/04/05/css-flex-bu-ju/"/>
      <url>/2022/04/05/css-flex-bu-ju/</url>
      
        <content type="html"><![CDATA[<h1 id="flex布局-详细讲解"><a href="#flex布局-详细讲解" class="headerlink" title="flex布局 - 详细讲解"></a>flex布局 - 详细讲解</h1><h2 id="一、Flex布局是什么？"><a href="#一、Flex布局是什么？" class="headerlink" title="一、Flex布局是什么？"></a>一、Flex布局是什么？</h2><p>Flex是Flexible Box的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。</p><p><span style="color:red;">任何一个容器</span>都可以指定为Flex布局。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.box</span><span class="token punctuation">&#123;</span><span class="token property">dispaly</span><span class="token punctuation">:</span>flex<span class="token punctuation">&#125;</span><span class="token selector">默认样式：宽度自适应（对器父容器），高度为0 相当于:body为父容器时 .box</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span>100vh<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span>0px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>行内元素也可以使用Flex布局。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.box</span><span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span>inline-flex<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="二、基本概念"><a href="#二、基本概念" class="headerlink" title="二、基本概念"></a>二、基本概念</h2><p>采用Flex布局的元素，称为Flex容器（flex container），简称”容器”。<span style="color:red;">它的所有子元素自动成为容器成员，称为Flex项目（flex item），简称”项目”。</span></p><p><img src="//www.runoob.com/wp-content/uploads/2015/07/3791e575c48b3698be6a94ae1dbff79d.png"></p><ul><li>容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis）。</li><li>主轴的开始位置（与边框的交叉点）叫做main start，结束位置叫做main end；交叉轴的开始位置叫做cross start，结束位置叫做cross end。</li><li>项目默认沿主轴排列。单个项目占据的主轴空间叫做main size，占据的交叉轴空间叫做cross size。</li></ul><h2 id="三、容器的属性"><a href="#三、容器的属性" class="headerlink" title="三、容器的属性"></a>三、容器的属性</h2><p>以下6个属性设置在容器上</p><ul><li>flex-direction（n.方向）</li><li>flex-wrap（n.包囊）</li><li>flex-flow（n.流;v.流动）</li><li>justify(对齐)-content</li><li>align(排列)-items</li><li>align-content</li></ul><h4 id="3-1-flex-direction属性"><a href="#3-1-flex-direction属性" class="headerlink" title="3.1 flex-direction属性"></a>3.1 flex-direction属性</h4><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.box</span><span class="token punctuation">&#123;</span>    <span class="token property">flex-direction</span><span class="token punctuation">:</span>colum-reverse | colum | row | row-reverse      弹性布局方向：从下往上 |  从上往下 | （默认）从左往右 | 从右往左<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="//www.runoob.com/wp-content/uploads/2015/07/0cbe5f8268121114e87d0546e53cda6e.png"></p><h4 id="3-2-flex-wrap属性"><a href="#3-2-flex-wrap属性" class="headerlink" title="3.2 flex-wrap属性"></a>3.2 flex-wrap属性</h4><p>默认情况下，项目都排在一条线<strong>（又称”轴线”）</strong>上。flex-wrap属性定义，如果一条轴线排不下，如何换行。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.box</span><span class="token punctuation">&#123;</span>    <span class="token property">flex-wrap</span><span class="token punctuation">:</span>nowrap | wrap | wrap-reverse<span class="token punctuation">;</span>    （默认）不换行 | 换行第一行在上方 | 换行，第一行在下方<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="//www.runoob.com/wp-content/uploads/2015/07/9da1f23965756568b4c6ea7124db7b9a.png"></p><p><img src="//www.runoob.com/wp-content/uploads/2015/07/3c6b3c8b8fe5e26bca6fb57538cf72d9.jpg"></p><p><img src="//www.runoob.com/wp-content/uploads/2015/07/fb4cf2bab8b6b744b64f6d7a99cd577c.jpg"></p><h4 id="3-3-flex-flow"><a href="#3-3-flex-flow" class="headerlink" title="3.3 flex-flow"></a>3.3 flex-flow</h4><p>flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.box</span> <span class="token punctuation">&#123;</span>  <span class="token property">flex-flow</span><span class="token punctuation">:</span> &lt;flex-direction> &lt;flex-wrap><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="3-4-justify-content属性-常用属性"><a href="#3-4-justify-content属性-常用属性" class="headerlink" title="3.4 justify-content属性 - 常用属性"></a>3.4 justify-content属性 - 常用属性</h4><p>justify-content属性定义了项目（项目就是 flex item）在<strong>主轴上</strong>的对齐方式。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">具体对齐方式与轴的方向有关。下面假设主轴为从左到右。.box</span> <span class="token punctuation">&#123;</span>  <span class="token property">justify-content</span><span class="token punctuation">:</span> flex-start | flex-end | center | space-between | space-around<span class="token punctuation">;</span>    对齐内容：（默认）左对齐 | 右对齐 | 居中 | 两端对齐，项目之间的间隔都相等。| 每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="//www.runoob.com/wp-content/uploads/2015/07/c55dfe8e3422458b50e985552ef13ba5.png"></p><h4 id="3-5-align-items属性"><a href="#3-5-align-items属性" class="headerlink" title="3.5 align-items属性"></a>3.5 align-items属性</h4><p>align-items属性定义项目在 <strong>交叉轴</strong> 上如何对齐。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">具体的对齐方式与交叉轴的方向有关，下面假设交叉轴从上到下。.box</span> <span class="token punctuation">&#123;</span>  <span class="token property">align-items</span><span class="token punctuation">:</span> flex-start | flex-end | center | baseline | stretch<span class="token punctuation">;</span>    对齐元素：交叉轴的起点对齐。| 交叉轴的起点对齐。| 交叉轴的中点对齐。| 项目的第一行文字的基线对齐。 | （默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="//www.runoob.com/wp-content/uploads/2015/07/2b0c39c7e7a80d5a784c8c2ca63cde17.png"></p><h4 id="3-6-align-content属性"><a href="#3-6-align-content属性" class="headerlink" title="3.6 align-content属性"></a>3.6 align-content属性</h4><p>align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.box</span> <span class="token punctuation">&#123;</span>  <span class="token property">align-content</span><span class="token punctuation">:</span> flex-start | flex-end | center | space-between | space-around | stretch<span class="token punctuation">;</span>    对齐内容：与交叉轴的起点对齐。 | 与交叉轴的终点对齐。| 与交叉轴的中点对齐。| 与交叉轴两端对齐，轴线之间的间隔平均分布。| 每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。| （默认值）：轴线占满整个交叉轴。<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="//www.runoob.com/wp-content/uploads/2015/07/f10918ccb8a13247c9d47715a2bd2c33.png"></p><h2 id="四、项目的属性"><a href="#四、项目的属性" class="headerlink" title="四、项目的属性"></a>四、项目的属性</h2><p>以下6个属性设置在项目上。</p><ul><li>order</li><li>flex-grow</li><li>flex-shrink</li><li>flex-basis</li><li>flex</li><li>align-self</li></ul><h4 id="4-1-order属性"><a href="#4-1-order属性" class="headerlink" title="4.1 order属性"></a>4.1 order属性</h4><p>order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。</p><pre class="line-numbers language-none"><code class="language-none">.item &#123;  order: &lt;integer&gt;;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://www.runoob.com/wp-content/uploads/2015/07/59e399c72daafcfcc20ede36bf32f266.png" alt="img"></p><h4 id="4-2-flex-grow属性"><a href="#4-2-flex-grow属性" class="headerlink" title="4.2 flex-grow属性"></a>4.2 flex-grow属性</h4><p>flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。</p><pre class="line-numbers language-none"><code class="language-none">.item &#123;  flex-grow: &lt;number&gt;; &#x2F;* default 0 *&#x2F;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://www.runoob.com/wp-content/uploads/2015/07/f41c08bb35962ed79e7686f735d6cd78.png" alt="img"></p><p>如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的<span style="color:red;">剩余空间</span>【解释：盒子的空间减去包含内容的空间】将比其他项多一倍。</p><h4 id="4-3-flex-shrink属性"><a href="#4-3-flex-shrink属性" class="headerlink" title="4.3 flex-shrink属性"></a>4.3 flex-shrink属性</h4><p>flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。</p><pre class="line-numbers language-none"><code class="language-none">.item &#123;  flex-shrink: &lt;number&gt;; &#x2F;* default 1 *&#x2F;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://www.runoob.com/wp-content/uploads/2015/07/240d3e960043a729bb3ff5e34987904f.jpg" alt="img"></p><p>如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，<span style="color:red;">前者</span>【指flex-shrink:0;】不缩小。</p><p>负值对该属性无效。</p><h4 id="4-4-flex-basis属性-项目设置px占据固定空间。"><a href="#4-4-flex-basis属性-项目设置px占据固定空间。" class="headerlink" title="4.4 flex-basis属性 _ 项目设置px占据固定空间。"></a>4.4 flex-basis属性 _ 项目设置px占据固定空间。</h4><p>flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。</p><pre class="line-numbers language-none"><code class="language-none">.item &#123;  flex-basis: &lt;length&gt; | auto; &#x2F;* default auto *&#x2F;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>它可以设为跟width或height属性一样的值（比如350px），则项目将占据固定空间。</p><h4 id="4-5-flex"><a href="#4-5-flex" class="headerlink" title="4.5 flex"></a>4.5 flex</h4><p>flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。</p><pre class="line-numbers language-none"><code class="language-none">.item &#123;  flex: none | [ &lt;&#39;flex-grow&#39;&gt; &lt;&#39;flex-shrink&#39;&gt;? || &lt;&#39;flex-basis&#39;&gt; ]    flex: 1; &#x3D;&#x3D;&#x3D; flex: 1 1 0% || 任意数字+任意长度单位;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。</p><p>建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。</p><h4 id="4-6-align-self属性"><a href="#4-6-align-self属性" class="headerlink" title="4.6 align-self属性"></a>4.6 align-self属性</h4><p>align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。</p><pre class="line-numbers language-none"><code class="language-none">.item &#123;  align-self: auto | flex-start | flex-end | center | baseline | stretch;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://www.runoob.com/wp-content/uploads/2015/07/55b19171b8b6b9487d717bf2ecbba6de.png" alt="img"></p><p>该属性可能取6个值，除了auto，其他都与align-items属性完全一致。</p><h2 id="五、弹性布局综合案例"><a href="#五、弹性布局综合案例" class="headerlink" title="五、弹性布局综合案例"></a>五、弹性布局综合案例</h2><h4 id="5-1-Flex布局实现头尾固定、中间内容自适应"><a href="#5-1-Flex布局实现头尾固定、中间内容自适应" class="headerlink" title="5.1 Flex布局实现头尾固定、中间内容自适应"></a>5.1 Flex布局实现头尾固定、中间内容自适应</h4><p>应用点：头尾固定，中间区域可以滑动效果是移动端最常见的效果，以京东页面为例。以前开发时常用的方法是用固定布局position:fixed;实现，<span style="color:green;">但是该方法在ios上或者其他机型上会出现问题。现在，可以用flex方法快速实现该布局。</span></p><p>效果:</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9vc2NpbWcub3NjaGluYS5uZXQvb3NjbmV0L3VwLWUwZDdiY2RmYTcwNGNkNTI4NmU2M2FiZjlmNjZkYjEzMWFhLnBuZw?x-oss-process=image/format,png"></p><h4 id="5-2-Flex布局最后一行列表左对齐的N种方法"><a href="#5-2-Flex布局最后一行列表左对齐的N种方法" class="headerlink" title="5.2 Flex布局最后一行列表左对齐的N种方法"></a>5.2 Flex布局最后一行列表左对齐的N种方法</h4><h5 id="5-2-1-如果每一行列数是固定的（4列-行）"><a href="#5-2-1-如果每一行列数是固定的（4列-行）" class="headerlink" title="5.2.1 如果每一行列数是固定的（4列?行）"></a>5.2.1 如果每一行列数是固定的（4列?行）</h5><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.container</span><span class="token punctuation">&#123;</span>            <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>            <span class="token property">flex-flow</span><span class="token punctuation">:</span> row wrap<span class="token punctuation">;</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>                <span class="token selector">.container div</span><span class="token punctuation">&#123;</span><span class="token comment">/* % 相对于 父级的宽度*24% 宽度是相对很重要，如果是固定的px，就不能确保列数固定了*/</span>               <span class="token property">width</span><span class="token punctuation">:</span> 24%<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span>            <span class="token property">margin-top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="//image.zhangxinxu.com/image/blog/201908/2019-08-14_213605.png"></p><p>您可以狠狠地点击这里：<a href="https://www.zhangxinxu.com/study/201908/flex-last-align-demo.php">最后一行flex列表没有对齐demo</a></p><p>但是此时最后一行的小方块的排列就显得很尴尬了：（如何解决？）</p><p>其实实现的思路和<a href="https://www.zhangxinxu.com/wordpress/?p=1514">display:inline-block的两端对齐</a>是一样的。</p><h6 id="方法一：模拟space-between和间隙"><a href="#方法一：模拟space-between和间隙" class="headerlink" title="方法一：模拟space-between和间隙"></a>方法一：模拟space-between和间隙</h6><p>也就是我们不使用<code>justify-content:space-between</code>声明在模拟两端对齐效果。中间的gap间隙我们使用margin进行控制。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"> <span class="token selector">*</span><span class="token punctuation">&#123;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.container</span><span class="token punctuation">&#123;</span>            <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>            <span class="token property">flex-flow</span><span class="token punctuation">:</span> row wrap<span class="token punctuation">;</span>           <span class="token comment">/*  justify-content: space-between; */</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.container .list</span><span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 24%<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> aqua<span class="token punctuation">;</span>            <span class="token property">margin-top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token comment">/* https://developer.mozilla.org/zh-CN/docs/Web/CSS/:nth-child */</span><span class="token comment">/* https://developer.mozilla.org/zh-CN/docs/Web/CSS/:not */</span><span class="token comment">/* list类下的每第4个元素不包括此属性，其余都有 */</span>        <span class="token selector">.list:not(:nth-child(4n))</span><span class="token punctuation">&#123;</span>           <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>4% / 3<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token comment">/* :not() 反选的意思  :nth-child(na+b) 根据a，b赋予的值选取子元素 */</span>        <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="方法二：根据个数最后一个元素动态margin"><a href="#方法二：根据个数最后一个元素动态margin" class="headerlink" title="方法二：根据个数最后一个元素动态margin"></a>方法二：根据个数最后一个元素动态margin</h6><p>由于每一列的数目都是固定的，因此，我们可以计算出不同个数列表应当多大的<code>margin</code>值才能保证完全左对齐。</p><h2 id="六、English"><a href="#六、English" class="headerlink" title="六、English"></a>六、English</h2><p>英文单词：di re c tion  方向 ||  wrap 包裹 || re ver se 逆转 || ju s ti fy 使（文本）对齐 ||  grow 成长 || sh <del>r</del> ink【xun k】 缩小  || basis 【与base】意境不一样，意思相同 || self 自己</p><p>摘录:</p><p><a href="https://www.runoob.com/w3cnote/flex-grammar.html">Flex 布局语法教程 | 菜鸟教程 (runoob.com)</a></p><p><a href="https://blog.csdn.net/qq_36699230/article/details/107765908">Flex弹性布局综合实例_cdgogo的博客-CSDN博客_弹性布局案例</a></p><p><a href="https://www.zhangxinxu.com/wordpress/2019/08/css-flex-last-align/">让CSS flex布局最后一行列表左对齐的N种方法</a></p><p><a href="https://zhuanlan.zhihu.com/p/136223806">flex:1 到底代表什么? - 知乎 (zhihu.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> CSS3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> CSS3 </tag>
            
            <tag> flex </tag>
            
            <tag> 布局思想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Emmet：一个Html/Css快速编辑插件</title>
      <link href="/2022/04/05/emmet-yi-ge-htmlcss-kuai-su-bian-ji-shen-qi-de-cha-jian/"/>
      <url>/2022/04/05/emmet-yi-ge-htmlcss-kuai-su-bian-ji-shen-qi-de-cha-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="Emmet：一个Html-x2F-Css快速编辑插件"><a href="#Emmet：一个Html-x2F-Css快速编辑插件" class="headerlink" title="Emmet：一个Html&#x2F;Css快速编辑插件"></a>Emmet：一个Html&#x2F;Css快速编辑插件</h1><h3 id="一、快速编写HTML代码"><a href="#一、快速编写HTML代码" class="headerlink" title="一、快速编写HTML代码"></a>一、快速编写HTML代码</h3><h4 id="1-初始化"><a href="#1-初始化" class="headerlink" title="1.初始化"></a>1.初始化</h4><p>HTML文档需要包含一些固定的标签，比如<html>、<head>、<body>等，现在你只需要<span style="color:red;">1秒钟</span>就可以输入这些标签。比如输入“!”或“html:5”，然后按Tab键</p><ul><li>html:5 或!：用于HTML5文档类型</li><li><del>html:xt：用于XHTML过渡文档类型</del></li><li><del>html:4s：用于HTML4严格文档类型</del></li></ul><h4 id="2-轻松添加类、id、文本和属性"><a href="#2-轻松添加类、id、文本和属性" class="headerlink" title="2.轻松添加类、id、文本和属性"></a>2.轻松添加类、id、文本和属性</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html">div.class    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>class<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>div#id <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>a[href=#]    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>h1&#123;foo&#125; <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>foo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>input:text   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>......<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-嵌套"><a href="#3-嵌套" class="headerlink" title="3. 嵌套"></a>3. 嵌套</h4><p>现在你只需要1行代码就可以实现标签的嵌套。</p><ul><li>&gt;：子元素符号，表示嵌套的元素</li><li>+：同级标签符号</li><li>^：可以使该符号前的标签提升一行</li></ul><h4 id="4-分组"><a href="#4-分组" class="headerlink" title="4. 分组"></a>4. 分组</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html">(div.box>(img[src=img/loading.gif].img))*1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/loading.gif<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>......<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="5-隐式标签-不常用"><a href="#5-隐式标签-不常用" class="headerlink" title="5. 隐式标签 _ 不常用"></a>5. 隐式标签 _ 不常用</h4><p>声明一个带类的标签，只需输入div.item，就会生成<div class="item"></div>。</p><p>在过去版本中，可以省略掉div，即输入.item即可生成<div class="item"></div>。现在如果只输入.item，则Emmet会根据父标签进行判定。比如在<ul> 中输入.item，就会生成<li class="item"></li>。</p><ul><li>li：用于ul和ol中</li><li>tr：用于table、tbody、thead和tfoot中</li><li>td：用于tr中</li><li>option：用于select和optgroup中</li></ul><h4 id="6-定义多个元素-、定义多个带属性的元素"><a href="#6-定义多个元素-、定义多个带属性的元素" class="headerlink" title="6. 定义多个元素 、定义多个带属性的元素"></a>6. 定义多个元素 、定义多个带属性的元素</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html">ul>li*3 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>ul>li.item$*3  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="二、Css缩写"><a href="#二、Css缩写" class="headerlink" title="二、Css缩写"></a>二、Css缩写</h3><h4 id="1-值"><a href="#1-值" class="headerlink" title="1.值"></a>1.值</h4><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.div</span><span class="token punctuation">&#123;</span>    w100     h10p+m5e<span class="token punctuation">&#125;</span><span class="token selector">.div</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span>100px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span>10%<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span>5em<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>单位别名列表：p 表示% ； e 表示 em ； x 表示 ex<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-附加属性-不常用"><a href="#2-附加属性-不常用" class="headerlink" title="2.附加属性 _ 不常用"></a>2.附加属性 _ 不常用</h4><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.div</span><span class="token punctuation">&#123;</span>    <span class="token atrule"><span class="token rule">@f</span><span class="token punctuation">&#125;</span>  .div</span><span class="token punctuation">&#123;</span>    <span class="token atrule"><span class="token rule">@font-face</span></span> <span class="token punctuation">&#123;</span>       <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token punctuation">;</span>       <span class="token property">src</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>......<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-模糊匹配"><a href="#3-模糊匹配" class="headerlink" title="3.模糊匹配"></a>3.模糊匹配</h4><p>如果有些缩写你拿不准，Emmet会根据你的输入内容匹配最接近的语法，比如输入ov:h、ov-h、ovh和oh，生成的代码是相同的</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">ov:h、ov-h、ovh、ohbody</span><span class="token punctuation">&#123;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span>hidden<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4、定制"><a href="#4、定制" class="headerlink" title="4、定制"></a>4、定制</h4><p>你还可以定制Emmet插件：</p><ul><li>添加新缩写或更新现有缩写，可修改<a href="http://docs.emmet.io/customization/snippets/">snippets.json</a>文件</li><li>更改Emmet过滤器和操作的行为，可修改<a href="http://docs.emmet.io/customization/preferences/">preferences.json</a>文件</li><li>定义如何生成HTML或XML代码，可修改<a href="http://docs.emmet.io/customization/syntax-profiles/">syntaxProfiles.json</a>文件</li></ul><h4 id="5、针对不同编辑器的插件-目前使用Vscode"><a href="#5、针对不同编辑器的插件-目前使用Vscode" class="headerlink" title="5、针对不同编辑器的插件 _ 目前使用Vscode"></a>5、针对不同编辑器的插件 _ 目前使用Vscode</h4><p>Emmet支持的编辑器如下（链接为针对该编辑器的Emmet插件）：</p><ul><li><ul><li><a href="https://github.com/sergeche/emmet-sublime">Sublime Text 2</a></li><li><a href="https://github.com/emmetio/Emmet.tmplugin">TextMate 1.x</a></li><li><a href="https://github.com/emmetio/emmet-eclipse">Eclipse&#x2F;Aptana</a></li><li><a href="https://github.com/emmetio/Emmet.codaplugin">Coda 1.6 and 2.x</a></li><li><a href="https://github.com/emmetio/Emmet.sugar">Espresso</a></li><li><a href="https://github.com/sergeche/emmet.chocmixin">Chocolat</a> （通过“Install Mixin”对话框添加)</li><li><a href="https://github.com/emmetio/emmet/downloads">Komodo Edit&#x2F;IDE</a> （通过Tools → Add-ons菜单添加)</li><li><a href="https://github.com/emmetio/emmet/downloads">Notepad++</a></li><li><a href="https://github.com/emmetio/emmet/downloads">PSPad</a></li><li><a href="https://github.com/emmetio/emmet/downloads">textarea</a></li><li><a href="https://github.com/emmetio/codemirror">CodeMirror2&#x2F;3</a></li><li><a href="https://github.com/emmetio/brackets-emmet">Brackets</a></li></ul></li></ul><p>参考文案:</p><p><a href="https://www.likecs.com/show-306860124.html">Emmet：一个Html&#x2F;Css快速编辑神器的插件-爱码网 (likecs.com)</a></p><p><a href="https://code.z01.com/Emmet/#a1">Emmet-HTML&#x2F;CSS代码自动补全语法 (z01.com)</a></p><p>这里扩张了供应商前缀 <a href="https://www.iteye.com/news/27580">Emmet：HTML&#x2F;CSS代码快速编写神器 - Web前端 - ITeye资讯</a></p>]]></content>
      
      
      <categories>
          
          <category> 插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> 插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5+CSS3小实例：不偷看密码的超萌猫头鹰登录界面</title>
      <link href="/2022/03/29/css-css-an-li-bu-tou-kan-mi-ma-de-chao-meng-mao-tou-ying-deng-lu-jie-mian/"/>
      <url>/2022/03/29/css-css-an-li-bu-tou-kan-mi-ma-de-chao-meng-mao-tou-ying-deng-lu-jie-mian/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML5-CSS3小实例：不偷看密码的超萌猫头鹰登录界面"><a href="#HTML5-CSS3小实例：不偷看密码的超萌猫头鹰登录界面" class="headerlink" title="HTML5+CSS3小实例：不偷看密码的超萌猫头鹰登录界面"></a>HTML5+CSS3小实例：不偷看密码的超萌猫头鹰登录界面</h1><p>布局：<img src="http://deadlykui.github.io/medias/images/Css_case/owl/owl.jpg"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>不偷看密码的超萌猫头鹰登录界面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./index.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./jquery-1.12.4.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#password'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token comment">//密码获取焦点时，追加样式.password</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#owl'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">'password'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">blur</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token comment">//失去焦点时</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#owl'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">'password'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>login-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 猫头鹰的英文 owl --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>owl<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>owl<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hand<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hand hand-r<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token comment">&lt;!-- arms 武器的中文 --></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>arms<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>arm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>arm arm-r<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>账号<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>密码<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">*</span><span class="token punctuation">&#123;</span>    <span class="token comment">/* 初始化 */</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 整体样式 */</span><span class="token selector">body</span><span class="token punctuation">&#123;</span>    <span class="token comment">/* 100%窗口高度 */</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100vh<span class="token punctuation">;</span>    <span class="token comment">/* 弹性布局 居中 */</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token comment">/* 渐变背景 */</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>200deg<span class="token punctuation">,</span>#72afd3<span class="token punctuation">,</span>#96fbc4<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.login-box</span><span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 320px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 登录样式 */</span><span class="token selector">.input-box</span><span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.input-box input</span><span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>    <span class="token comment">/* 缩进15像素 */</span>    <span class="token property">text-indent</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>    <span class="token comment">/* 定义无轮廓 */</span>    <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.input-box input:focus</span><span class="token punctuation">&#123;</span>    <span class="token property">outline</span><span class="token punctuation">:</span> 1px solid lightseagreen<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.input-box button</span><span class="token punctuation">&#123;</span>    <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 45px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span>lightseagreen<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 接下来是猫头鹰样式 */</span><span class="token selector">.owl</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 211px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>./img/owl-login.png<span class="token punctuation">)</span></span> no-repeat<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> -100px<span class="token punctuation">;</span>    <span class="token comment">/* 水平居中 这个布局可以试一下 */</span>    <span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-50%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.owl .hand</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 34px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 34px<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #472d20<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> -8px<span class="token punctuation">;</span>    <span class="token comment">/* 沿Y轴缩放0.6被（压扁） */</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scaleY</span><span class="token punctuation">(</span>0.6<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/* 动画过渡 */</span>    <span class="token property">transition</span><span class="token punctuation">:</span> 0.3s ease-out<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.owl .hand.hand-r</span><span class="token punctuation">&#123;</span>    <span class="token comment">/* hand-r 继承了hand的样式 */</span>   <span class="token property">left</span><span class="token punctuation">:</span> 170px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.owl.password .hand</span><span class="token punctuation">&#123;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>42px<span class="token punctuation">)</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-15px<span class="token punctuation">)</span> <span class="token function">scale</span><span class="token punctuation">(</span>0.7<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.owl.password .hand.hand-r</span><span class="token punctuation">&#123;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-42px<span class="token punctuation">)</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-15px<span class="token punctuation">)</span> <span class="token function">scale</span><span class="token punctuation">(</span>0.7<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.owl .arms</span><span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 58px<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 41px<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.owl .arms .arm</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 65px<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>./img/owl-login-arm.png<span class="token punctuation">)</span></span> no-repeat<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>-20deg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> 0.3s ease-out<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.owl .arms .arm.arm-r</span><span class="token punctuation">&#123;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>20deg<span class="token punctuation">)</span> <span class="token function">scaleX</span><span class="token punctuation">(</span>-1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 158px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.owl.password .arms .arm</span><span class="token punctuation">&#123;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-40px<span class="token punctuation">)</span> <span class="token function">translateX</span><span class="token punctuation">(</span>40px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.owl.password .arms .arm.arm-r</span><span class="token punctuation">&#123;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-40px<span class="token punctuation">)</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-40px<span class="token punctuation">)</span> <span class="token function">scaleX</span><span class="token punctuation">(</span>-1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最终效果：<img src="http://deadlykui.github.io/medias/images/Css_case/owl/animation.gif"></p><p>摘录：</p><p><a href="https://www.bilibili.com/video/BV18f4y1F74p?spm_id_from=333.337.search-card.all.click">HTML5+CSS3小实例：不偷看密码的超萌猫头鹰登录界面_哔哩哔哩_bilibili</a></p>]]></content>
      
      
      <categories>
          
          <category> HTML+CSS案例 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> CSS3 </tag>
            
            <tag> 案例 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/03/21/css-chun-css-lun-bo-tu/"/>
      <url>/2022/03/21/css-chun-css-lun-bo-tu/</url>
      
        <content type="html"><![CDATA[<h1 id="纯CSS轮播图"><a href="#纯CSS轮播图" class="headerlink" title="纯CSS轮播图"></a>纯CSS轮播图</h1><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span>   <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span>  <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>one<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>one<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span>  <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>two<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checked<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>two<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span>  <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>three<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>three<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span>  <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>four</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>four<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span>  <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>five<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>five<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>one<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./img/a1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./img/a2.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./img/a3.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./img/a4.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./img/a5.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>one<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>左边<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>two<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>左边<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>three<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>左边<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>four<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>左边<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>five<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>左边<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>one<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>右边<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>two<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>右边<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>three<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>右边<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>four<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>右边<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>five<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>右边<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">*</span><span class="token punctuation">&#123;</span><span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">div.box</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span> 100px auto<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span> 1px solid #000<span class="token punctuation">;</span><span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">div.box input</span><span class="token punctuation">&#123;</span><span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">div ul</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 2000px<span class="token punctuation">;</span><span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token property">transition</span><span class="token punctuation">:</span> all .5s<span class="token punctuation">;</span><span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">div ul li</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span><span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">div ul li img</span><span class="token punctuation">&#123;</span><span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">div.round</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 125px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">div.left,div.right</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">div.left label:hover,div.right label:hover</span><span class="token punctuation">&#123;</span><span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.left label</span><span class="token punctuation">&#123;</span><span class="token property">border</span><span class="token punctuation">:</span> 15px solid transparent<span class="token punctuation">;</span><span class="token property">border-right-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span> -15px<span class="token punctuation">;</span><span class="token property">opacity</span><span class="token punctuation">:</span> .6<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.right label</span><span class="token punctuation">&#123;</span><span class="token property">border</span><span class="token punctuation">:</span> 15px solid transparent<span class="token punctuation">;</span><span class="token property">border-left-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">opacity</span><span class="token punctuation">:</span> .6<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">div.left,div.right</span><span class="token punctuation">&#123;</span><span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.left</span><span class="token punctuation">&#123;</span><span class="token property">left</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.right</span><span class="token punctuation">&#123;</span><span class="token property">right</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.round</span><span class="token punctuation">&#123;</span><span class="token property">bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span><span class="token property">margin-left</span><span class="token punctuation">:</span> -63px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.round label</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span><span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span>0 5px<span class="token punctuation">;</span><span class="token property">box-shadow</span><span class="token punctuation">:</span> 0px 0px 5px 3px #aaa inset<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#img1:checked~.round .img1</span><span class="token punctuation">&#123;</span><span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span><span class="token property">box-shadow</span><span class="token punctuation">:</span> 0px 0px 5px 3px red inset<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#img2:checked~.round .img2</span><span class="token punctuation">&#123;</span><span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span><span class="token property">box-shadow</span><span class="token punctuation">:</span> 0px 0px 5px 3px red inset<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#img3:checked~.round .img3</span><span class="token punctuation">&#123;</span><span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span><span class="token property">box-shadow</span><span class="token punctuation">:</span> 0px 0px 5px 3px red inset<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#img4:checked~.round .img4</span><span class="token punctuation">&#123;</span><span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span><span class="token property">box-shadow</span><span class="token punctuation">:</span> 0px 0px 5px 3px red inset<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#img5:checked~.round .img5</span><span class="token punctuation">&#123;</span><span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span><span class="token property">box-shadow</span><span class="token punctuation">:</span> 0px 0px 5px 3px red inset<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#img1:checked~ul</span><span class="token punctuation">&#123;</span><span class="token property">margin-left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#img2:checked~ul</span><span class="token punctuation">&#123;</span><span class="token property">margin-left</span><span class="token punctuation">:</span> -400px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#img3:checked~ul</span><span class="token punctuation">&#123;</span><span class="token property">margin-left</span><span class="token punctuation">:</span> -800px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#img4:checked~ul</span><span class="token punctuation">&#123;</span><span class="token property">margin-left</span><span class="token punctuation">:</span> -1200px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#img5:checked~ul</span><span class="token punctuation">&#123;</span><span class="token property">margin-left</span><span class="token punctuation">:</span> -1600px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.left label,.right label</span><span class="token punctuation">&#123;</span><span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#img1:checked~.left .img5,#img1:checked~.right .img2</span><span class="token punctuation">&#123;</span><span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#img2:checked~.left .img1,#img2:checked~.right .img3</span><span class="token punctuation">&#123;</span><span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#img3:checked~.left .img2,#img3:checked~.right .img4</span><span class="token punctuation">&#123;</span><span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#img4:checked~.left .img3,#img4:checked~.right .img5</span><span class="token punctuation">&#123;</span><span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#img5:checked~.left .img4,#img5:checked~.right .img1</span><span class="token punctuation">&#123;</span><span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="涉及："><a href="#涉及：" class="headerlink" title="涉及："></a>涉及：</h2><p>1，在为类选择器选择的时候，使用原始的input：checked+class&#x2F;label（每当选中时，改变其后class&#x2F;label中的内容样式）<br>2，经验之谈：在使用radio or checkbox 时，父类最好使用<label>标签，这样可以使点击<span>内容时格改变checkbox or radio 的状态，增强用户交互感。<br>关于radio使用：<br>1，每个<input type="radio"/>如果没有写name&#x3D;”?”则会默认的给每个input设定不同的name事件名，这样就表面的打破了其单选的意义，所以，在用时，一定要给其事件命名，且名称相同。<br>2，单选~顾名思义就是必须要有一个选中，一旦你已选就必须存在一个已被选中，所以再次点击已选中按钮，按钮不会取消选中，除非点击另一按钮将其替换</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CSS3新增了哪些新特性？</title>
      <link href="/2022/03/20/css-css3-xin-te-xing/"/>
      <url>/2022/03/20/css-css3-xin-te-xing/</url>
      
        <content type="html"><![CDATA[<p><img src="http://deadlykui.github.io/medias/images/CSS/1.png"></p><h2 id="一、是什么"><a href="#一、是什么" class="headerlink" title="一、是什么"></a>一、是什么</h2><h2 id="二、选择器"><a href="#二、选择器" class="headerlink" title="二、选择器"></a>二、选择器</h2><h2 id="三、新样式"><a href="#三、新样式" class="headerlink" title="三、新样式"></a>三、新样式</h2><h2 id="四、transition-过度"><a href="#四、transition-过度" class="headerlink" title="四、transition 过度"></a>四、transition 过度</h2><h2 id="五、transform-转换"><a href="#五、transform-转换" class="headerlink" title="五、transform 转换"></a>五、transform 转换</h2><h2 id="六、animation-动画"><a href="#六、animation-动画" class="headerlink" title="六、animation 动画"></a>六、animation 动画</h2><h2 id="七、渐变"><a href="#七、渐变" class="headerlink" title="七、渐变"></a>七、渐变</h2><h2 id="八、其他"><a href="#八、其他" class="headerlink" title="八、其他"></a>八、其他</h2><h6 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h6><ul><li><a href="https://juejin.cn/post/6844903518520901639#heading-1">https://juejin.cn/post/6844903518520901639#heading-1</a></li><li><a href="https://www.w3school.com.cn/css/index.asp">https://www.w3school.com.cn/css/index.asp</a></li><li><a href="https://github.com/febobo/web-interview/issues/106">面试官：CSS3新增了哪些新特性？(github.com)</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> CSS3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> CSS3 </tag>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/03/14/hello-world/"/>
      <url>/2022/03/14/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><p><a href="http://deadlykui.github.io/medias/images/">http://deadlykui.github.io/medias/images/</a></p><p>图片大小：640px * 425px</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>HTTP协议 - 请求报文 - 响应报文</title>
      <link href="/2021/09/16/http-xie-yi-qing-qiu-bao-wen-xiang-ying-bao-wen/"/>
      <url>/2021/09/16/http-xie-yi-qing-qiu-bao-wen-xiang-ying-bao-wen/</url>
      
        <content type="html"><![CDATA[<h1 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h1><p>HTTP (hypertext transport protocol)协议『超文本传输协议』﹐协议详细规定了浏览器和万维网服务器之间互相通信的规则。简单来说就是<span style="color:red;">约定,规则</span></p><h2 id="这里重点讲述的是格式以及参数"><a href="#这里重点讲述的是格式以及参数" class="headerlink" title="这里重点讲述的是格式以及参数"></a>这里重点讲述的是格式以及参数</h2><p>更详细的知识去学习 《计算器网络通信原理》</p><h3 id="请求报文"><a href="#请求报文" class="headerlink" title="请求报文"></a>请求报文</h3><pre class="line-numbers language-http" data-language="http"><code class="language-http">行POST/s?ie=utf-8HTTP/1.1头Host: atguigu.com             Cookie: name=guigu             Content-type: application/x-www-form-urlencoded             User-Agent: chrome 83空行体username=admin&amp;password=admin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="响应报文"><a href="#响应报文" class="headerlink" title="响应报文"></a>响应报文</h2><pre class="line-numbers language-http" data-language="http"><code class="language-http">行HTTP/1.1 20日 oK头Content-Type: text/html; charset=utf-8 Content-length: 2048 Content-encoding: gzip空行体&lt;html>&lt;head>&lt;/head>&lt;body>&lt;h1>内容&lt;/h1>&lt;/body>&lt;/html><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 协议 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 协议 </tag>
            
            <tag> 后端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ajax面试题</title>
      <link href="/2021/09/15/ajax-fu-xi-ajax-yuan-sheng-dai-ma-han-mian-shi-ti/"/>
      <url>/2021/09/15/ajax-fu-xi-ajax-yuan-sheng-dai-ma-han-mian-shi-ti/</url>
      
        <content type="html"><![CDATA[<h1 id="面试题"><a href="#面试题" class="headerlink" title="面试题"></a>面试题</h1><p>转载 —— <a href="https://juejin.cn/post/6844903573529034759">ajax常见面试题 - 掘金 (juejin.cn)</a></p><h2 id="1-什么是ajax？ajax作用是什么？"><a href="#1-什么是ajax？ajax作用是什么？" class="headerlink" title="1:什么是ajax？ajax作用是什么？"></a>1:什么是ajax？ajax作用是什么？</h2><p><code>异步的javascript和xml  AJAX 是一种用于创建快速动态网页的技术。  ajax用来与后台交互</code></p><h2 id="2-原生js-ajax请求有几个步骤？分别是什么？"><a href="#2-原生js-ajax请求有几个步骤？分别是什么？" class="headerlink" title="2:原生js ajax请求有几个步骤？分别是什么？"></a>2:原生js ajax请求有几个步骤？分别是什么？</h2><h2 id="3-json字符串转换集json对象、json对象转换json字符串"><a href="#3-json字符串转换集json对象、json对象转换json字符串" class="headerlink" title="3:json字符串转换集json对象、json对象转换json字符串"></a>3:json字符串转换集json对象、json对象转换json字符串</h2><h2 id="4-ajax几种请求方式？他们的优缺点？"><a href="#4-ajax几种请求方式？他们的优缺点？" class="headerlink" title="4:ajax几种请求方式？他们的优缺点？"></a>4:ajax几种请求方式？他们的优缺点？</h2><h2 id="5-什么情况造成跨域？"><a href="#5-什么情况造成跨域？" class="headerlink" title="5:什么情况造成跨域？"></a>5:什么情况造成跨域？</h2><h2 id="6-跨域解决方案有哪些？"><a href="#6-跨域解决方案有哪些？" class="headerlink" title="6:跨域解决方案有哪些？"></a>6:跨域解决方案有哪些？</h2><h2 id="7-http常见状态码有哪些？"><a href="#7-http常见状态码有哪些？" class="headerlink" title="7:http常见状态码有哪些？"></a>7:http常见状态码有哪些？</h2><h4 id="一-2开头状态码"><a href="#一-2开头状态码" class="headerlink" title="一: 2开头状态码"></a>一: 2开头状态码</h4><blockquote><h5 id="2xx-成功-表示成功处理了请求的状态代码"><a href="#2xx-成功-表示成功处理了请求的状态代码" class="headerlink" title="2xx (成功)表示成功处理了请求的状态代码"></a>2xx (成功)表示成功处理了请求的状态代码</h5></blockquote><pre class="line-numbers language-none"><code class="language-none">200 (成功) 服务器已成功处理了请求。 通常。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="二-3开头状态码"><a href="#二-3开头状态码" class="headerlink" title="二: 3开头状态码"></a>二: 3开头状态码</h4><blockquote><h5 id="3xx-重定向-表示要完成请求，需要进一步操作。-通常，这些状态代码用来重定向。"><a href="#3xx-重定向-表示要完成请求，需要进一步操作。-通常，这些状态代码用来重定向。" class="headerlink" title="3xx (重定向) 表示要完成请求，需要进一步操作。 通常，这些状态代码用来重定向。"></a>3xx (重定向) 表示要完成请求，需要进一步操作。 通常，这些状态代码用来重定向。</h5></blockquote><pre class="line-numbers language-none"><code class="language-none">304 (未修改) 自从上次请求后，请求的网页未修改过。 服务器返回此响应时，不会返回网页内容。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="三-4开头状态码"><a href="#三-4开头状态码" class="headerlink" title="三: 4开头状态码"></a>三: 4开头状态码</h4><blockquote><h5 id="4xx-请求错误-这些状态代码表示请求可能出错，妨碍了服务器的处理"><a href="#4xx-请求错误-这些状态代码表示请求可能出错，妨碍了服务器的处理" class="headerlink" title="4xx(请求错误) 这些状态代码表示请求可能出错，妨碍了服务器的处理"></a>4xx(请求错误) 这些状态代码表示请求可能出错，妨碍了服务器的处理</h5></blockquote><pre class="line-numbers language-none"><code class="language-none">1:400 (错误请求) 服务器不理解请求的语法。 2:403 (禁止) 服务器拒绝请求。3:404 (未找到) 服务器找不到请求的网页。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="四-5开头状态码"><a href="#四-5开头状态码" class="headerlink" title="四: 5开头状态码"></a>四: 5开头状态码</h4><blockquote><h5 id="5xx-服务器错误-这些状态代码表示服务器在尝试处理请求时发生内部错误。-这些错误可能是服务器本身的错误，而不是请求出错"><a href="#5xx-服务器错误-这些状态代码表示服务器在尝试处理请求时发生内部错误。-这些错误可能是服务器本身的错误，而不是请求出错" class="headerlink" title="5xx(服务器错误)这些状态代码表示服务器在尝试处理请求时发生内部错误。 这些错误可能是服务器本身的错误，而不是请求出错"></a>5xx(服务器错误)这些状态代码表示服务器在尝试处理请求时发生内部错误。 这些错误可能是服务器本身的错误，而不是请求出错</h5></blockquote><pre class="line-numbers language-none"><code class="language-none">500 (服务器内部错误) 服务器遇到错误，无法完成请求。501 (尚未实施) 服务器不具备完成请求的功能。 例如，服务器无法识别请求方法时可能会返回此代码。502 (错误网关) 服务器作为网关或代理，从上游服务器收到无效响应。503 (服务不可用) 服务器目前无法使用(由于超载或停机维护)。 通常，这只是暂时状态。504 (网关超时) 服务器作为网关或代理，但是没有及时从上游服务器收到请求。505 (HTTP 版本不受支持) 服务器不支持请求中所用的 HTTP 协议版本。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Ajax </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ajax </tag>
            
            <tag> 前端 </tag>
            
            <tag> 面试题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ajax学习 - 详解</title>
      <link href="/2021/09/15/ajax-ajax-ke-cheng-xue-xi-xiang-jiang/"/>
      <url>/2021/09/15/ajax-ajax-ke-cheng-xue-xi-xiang-jiang/</url>
      
        <content type="html"><![CDATA[<h1 id="Ajax课程-解决跨域"><a href="#Ajax课程-解决跨域" class="headerlink" title="Ajax课程 - 解决跨域"></a>Ajax课程 - 解决跨域</h1><h2 id="1-第一章-原生Ajax"><a href="#1-第一章-原生Ajax" class="headerlink" title="1. 第一章:原生Ajax"></a>1. 第一章:原生Ajax</h2><h3 id="1-1-Ajax简介"><a href="#1-1-Ajax简介" class="headerlink" title="1.1 Ajax简介"></a>1.1 Ajax简介</h3><ul><li><p>AJAX 全称为 Asynchronous JavaScript And XML，就是异步的 JS 和 XML。</p></li><li><p>通过 AJAX 可以在浏览器中<span style="color:red;">向服务器发送异步请求，最大的优势：无刷新获取数据。 </span></p></li><li><p>AJAX 不是新的编程语言，而是一种将现有的标准组合在一起使用的新方式。</p></li></ul><h3 id="1-2-XML简介"><a href="#1-2-XML简介" class="headerlink" title="1.2 XML简介"></a>1.2 XML简介</h3><ul><li><p>XML 可扩展标记语言。 </p></li><li><p>XML 被设计用来传输和存储数据。 </p></li><li><p>XML 和 HTML 类似，不同的是 HTML 中都是<span style="color:red;">预定义标签(标签都是定义好了的)</span>，而 XML 中没有预定义标签， 全都是自定义标签，用来表示一些数据。</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">比如说我有一个学生数据：name = "孙悟空" ; age = 18 ; gender = "男" ;用 XML 表示：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>student</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>孙悟空<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>age</span><span class="token punctuation">></span></span>18<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>age</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>gender</span><span class="token punctuation">></span></span>男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>gender</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>student</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p><span style="color:green;">现在已经被 JSON 取代了。</span></p><pre class="line-numbers language-json" data-language="json"><code class="language-json">用 JSON 表示：<span class="token punctuation">&#123;</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"孙悟空"</span><span class="token punctuation">,</span><span class="token property">"age"</span><span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token property">"gender"</span><span class="token operator">:</span><span class="token string">"男"</span><span class="token punctuation">&#125;</span><span class="token comment">// 更加简介而且方便</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="1-3-Ajax的特点"><a href="#1-3-Ajax的特点" class="headerlink" title="1.3 Ajax的特点"></a>1.3 Ajax的特点</h3><h4 id="1-3-1-Ajax的优点"><a href="#1-3-1-Ajax的优点" class="headerlink" title="1.3.1 Ajax的优点"></a>1.3.1 Ajax的优点</h4><ol><li>可以无需刷新页面而与服务器端进行通信。</li><li>允许你根据用户事件来更新部分页面内容。</li></ol><h4 id="1-3-2-Ajax的缺点"><a href="#1-3-2-Ajax的缺点" class="headerlink" title="1.3.2 Ajax的缺点"></a>1.3.2 Ajax的缺点</h4><ol><li>没有浏览历史，不能回退。</li><li>存在跨域问题(同源)。</li><li>SEO 不友号。（爬虫爬不到。。。）</li></ol><h3 id="1-4-Ajax的使用-使用的是Express-web框架"><a href="#1-4-Ajax的使用-使用的是Express-web框架" class="headerlink" title="1.4 Ajax的使用 - 使用的是Express web框架"></a>1.4 Ajax的使用 - 使用的是Express web框架</h3><h4 id="1-4-1-核心对象"><a href="#1-4-1-核心对象" class="headerlink" title="1.4.1 核心对象"></a>1.4.1 核心对象</h4><p>XMLHttpRequest，AJAX 的所有操作都是通过该对象进行的</p><h4 id="1-4-2-使用步骤"><a href="#1-4-2-使用步骤" class="headerlink" title="1.4.2  * 使用步骤"></a>1.4.2  * 使用步骤</h4><ol><li>创建 XMLHttpRequest 对象</li></ol><p><code>let xhr = new XMLHttpRequest()</code></p><ol start="2"><li>设置请求信息</li></ol><p><code>xhr.open(method,url)</code></p><p>&#x2F;&#x2F;可以设置请求头，一般不设置</p><p><code>xhr.setRequestHeader(&#39;Content-Type&#39;, &#39;application/x-www-form-urlencoded&#39;)</code></p><ol start="3"><li>发送请求</li></ol><p><code>xhr.send(body) //get 请求不传 body 参数，只有 post</code></p><ol start="4"><li>接收响应</li></ol><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//xhr.responseXML 接收 xml 格式的响应数据</span><span class="token comment">//xhr.responseText 接收文本格式的响应数据</span>xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">==</span> <span class="token number">4</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">var</span> text <span class="token operator">=</span> xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-4-3-Ajax请求状态"><a href="#1-4-3-Ajax请求状态" class="headerlink" title="1.4.3 Ajax请求状态"></a>1.4.3 Ajax请求状态</h4><p>xhr.readyState 可以用来查看请求当前的状态 </p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest/readyState">XMLHttpRequest.readyState - Web API 接口参考 | MDN (mozilla.org)</a></p><p>0: 表示 XMLHttpRequest 实例已经生成，但是 open()方法还没有被调用。 </p><p>1: 表示 send()方法还没有被调用，仍然可以使用 setRequestHeader()，设定 HTTP </p><p>2: 表示 send()方法已经执行，并且头信息和状态码已经收到。</p><p>3: 表示正在接收服务器传来的 body 部分的数据。 </p><p>4: 表示服务器数据已经完全接收，或者本次接收已经失败</p><h4 id="get-请求方式"><a href="#get-请求方式" class="headerlink" title="get 请求方式"></a>get 请求方式</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Ajax get 请求<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>点击按钮get请求<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>result<span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"btn"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//1. 创建对象</span>        <span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment">//2. 初始化 设置请求方法和Url</span>        xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'GET'</span><span class="token punctuation">,</span><span class="token string">'http://127.0.0.1:8081/server?a=100&amp;b=200'</span><span class="token punctuation">)</span>        <span class="token comment">//3. 发送</span>        xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment">//4. 事件绑定 处理服务端返回的结果</span>        <span class="token comment">//on 当...时候</span>        <span class="token comment">//readystate 是xhr 对象中的属性，表示状态 0 1 2 3 4</span>        <span class="token comment">//change 改变</span>        xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">// 判断(服务器返回了所有的结果)</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token comment">//判断响应状态码 200 403 404 401 500</span>                <span class="token comment">//2xx 成功</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">>=</span><span class="token number">200</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token comment">//处理结果 行 头 空行 头</span>                    <span class="token comment">//1.响应行</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status<span class="token punctuation">)</span> <span class="token comment">//状态码</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>statusText<span class="token punctuation">)</span> <span class="token comment">//状态字符串</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span><span class="token function">getAllResponseHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//所有响应头</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>response<span class="token punctuation">)</span> <span class="token comment">//响应体</span>                    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"result"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> xhr<span class="token punctuation">.</span>status<span class="token operator">+</span>xhr<span class="token punctuation">.</span>statusText<span class="token operator">+</span>xhr<span class="token punctuation">.</span><span class="token function">getAllResponseHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>xhr<span class="token punctuation">.</span>response                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//express_demo.js 文件</span><span class="token keyword">var</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/server'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">//设置一个响应头</span>  res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Allow-Origin"</span><span class="token punctuation">,</span><span class="token string">"*"</span><span class="token punctuation">)</span> <span class="token comment">// 解决跨域问题</span>  <span class="token comment">//设置一个响应体</span>   res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'Hello World'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token keyword">var</span> server <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8081</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">var</span> host <span class="token operator">=</span> server<span class="token punctuation">.</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>address  <span class="token keyword">var</span> port <span class="token operator">=</span> server<span class="token punctuation">.</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>port   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"应用实例，访问地址为 http://%s:%s"</span><span class="token punctuation">,</span> host<span class="token punctuation">,</span> port<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="post请求方式"><a href="#post请求方式" class="headerlink" title="post请求方式"></a>post请求方式</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Ajax Post 请求<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>鼠标放上去的时候发送一个post请求<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>result<span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">const</span> result <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"result"</span><span class="token punctuation">)</span>    result<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"mouseover"</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>           <span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment">//2. 初始化 设置类行与Url</span>       xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'POST'</span><span class="token punctuation">,</span><span class="token string">'http://localhost:8081/server'</span><span class="token punctuation">)</span>              <span class="token comment">//设置头信息</span>       xhr<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">'Content-Type'</span><span class="token punctuation">,</span><span class="token string">'application/x-www-form-urlencoded'</span><span class="token punctuation">)</span>       <span class="token comment">//xhr.send('a=200&amp;b=200&amp;c=300')</span>       xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'a:b,a,b'</span><span class="token punctuation">)</span> <span class="token comment">// 设置post请求体</span>       xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>           <span class="token keyword">if</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">>=</span><span class="token number">200</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    result<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> xhr<span class="token punctuation">.</span>response                <span class="token punctuation">&#125;</span>           <span class="token punctuation">&#125;</span>       <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js">把<span class="token keyword">get</span>改成post就行<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="服务器端响应Json数据"><a href="#服务器端响应Json数据" class="headerlink" title="服务器端响应Json数据"></a>服务器端响应Json数据</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Json响应 - 键盘按下发送请求<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>result<span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">const</span> result <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"result"</span><span class="token punctuation">)</span>    window<span class="token punctuation">.</span><span class="token function-variable function">onkeydown</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 1. 创建对象</span>        <span class="token keyword">let</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        xhr<span class="token punctuation">.</span>responseType <span class="token operator">=</span> <span class="token string">'json'</span>        <span class="token comment">// 2. 设置请求格式和Url</span>        xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'GET'</span><span class="token punctuation">,</span><span class="token string">'http://localhost:8081/server'</span><span class="token punctuation">)</span>        <span class="token comment">// 3. 发送请求</span>        xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment">// 4.响应请求</span>        xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">>=</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token comment">//result.innerText = xhr.response // 拿到了数据 - 当然不能直接使用，需要转化 - 两种方式</span>                    <span class="token comment">// 1. 手动对数据转化</span>                    <span class="token comment">/* let data = JSON.parse(xhr.response)                    console.log(data) */</span>                    <span class="token comment">// 2. 自动转换</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>response<span class="token punctuation">)</span>                    result<span class="token punctuation">.</span>innerText <span class="token operator">=</span> xhr<span class="token punctuation">.</span>response<span class="token punctuation">.</span>name                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//express_demo.js 文件</span><span class="token keyword">var</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/server'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">//设置一个响应头</span>  res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Allow-Origin"</span><span class="token punctuation">,</span><span class="token string">"*"</span><span class="token punctuation">)</span> <span class="token comment">// 解决跨域问题</span>  <span class="token comment">//响应一个对象 </span>  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'123456'</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//所以要现对象进行字符串转化</span>  <span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>  <span class="token comment">//设置一个响应体 - 只能传递字符串,Buff</span>   res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token keyword">var</span> server <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8081</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">var</span> host <span class="token operator">=</span> server<span class="token punctuation">.</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>address  <span class="token keyword">var</span> port <span class="token operator">=</span> server<span class="token punctuation">.</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>port   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"应用实例，访问地址为 http://%s:%s"</span><span class="token punctuation">,</span> host<span class="token punctuation">,</span> port<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="解决IE缓存机制问题"><a href="#解决IE缓存机制问题" class="headerlink" title="解决IE缓存机制问题"></a>解决IE缓存机制问题</h4><blockquote><p>后面加上一个时间戳就行了 - 不过一般开发中都封装好了。    </p></blockquote><p><code>new XMLHttpRequest().open(&#39;get&#39;,&#39;http://localhost:8081/IE?t=&#39;+Data.now())</code></p><h4 id="请求超时与网络异常"><a href="#请求超时与网络异常" class="headerlink" title="请求超时与网络异常"></a>请求超时与网络异常</h4><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//超时设置 - 过了2秒弹出结果</span><span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>timeout <span class="token operator">=</span> <span class="token number">2000</span><span class="token comment">//超时的回调</span><span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">ontimeout</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'网络异常'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'控制台 - 预设 - 脱机 - 表示断网'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js">可以加一个setTimeout测试一下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="取消请求"><a href="#取消请求" class="headerlink" title="取消请求"></a>取消请求</h4><blockquote><p>给一个事件，触发内部方法就可以了</p></blockquote><p><code>new XMLHttpRequest().abort()</code></p><h4 id="请求重复发送问题-不解决服务器压力会变大"><a href="#请求重复发送问题-不解决服务器压力会变大" class="headerlink" title="请求重复发送问题 - 不解决服务器压力会变大"></a>请求重复发送问题 - 不解决服务器压力会变大</h4><blockquote><p>添加一个标识变量</p></blockquote><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> btns <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token keyword">let</span> xhr <span class="token operator">=</span> <span class="token keyword">null</span>   <span class="token comment">//添加一个标识变量</span>   <span class="token keyword">let</span> isSending <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment">// 是否正在发送Ajax请求</span>   btns<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>       xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                      xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'get'</span><span class="token punctuation">,</span><span class="token string">'http://localhost:8081/deadly'</span><span class="token punctuation">)</span>          xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>       <span class="token keyword">if</span><span class="token punctuation">(</span>isSending<span class="token punctuation">)</span> xhr<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 如果正在发送就取消请求 - 减小服务器压力 - 位置要在发送的后面</span>                      xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>           <span class="token keyword">if</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">//修改标识变量</span>            isSending <span class="token operator">=</span> <span class="token boolean">true</span>                           document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'txt'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerText <span class="token operator">=</span> xhr<span class="token punctuation">.</span>response            <span class="token punctuation">&#125;</span>       <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-第二章-JQuery发送Ajax请求"><a href="#2-第二章-JQuery发送Ajax请求" class="headerlink" title="2.第二章:JQuery发送Ajax请求"></a>2.第二章:JQuery发送Ajax请求</h2><p><a href="https://www.bilibili.com/video/BV1WC4y1b78y?p=21&spm_id_from=pageDriver">Jquery大致了解一下语法即可</a></p><h2 id="3-第三章-Axios发送Ajax请求"><a href="#3-第三章-Axios发送Ajax请求" class="headerlink" title="3.第三章:Axios发送Ajax请求"></a>3.第三章:Axios发送Ajax请求</h2><p>项目位置:<a href="https://github.com/axios/axios">axios&#x2F;axios: Promise based HTTP client for the browser and node.js (github.com)</a></p><h4 id="3-1-什么是Axios-？-本质上还是发送Ajax请求"><a href="#3-1-什么是Axios-？-本质上还是发送Ajax请求" class="headerlink" title="3.1 什么是Axios ？- 本质上还是发送Ajax请求"></a>3.1 什么是Axios ？- 本质上还是发送Ajax请求</h4><h5 id="Features-特性"><a href="#Features-特性" class="headerlink" title="Features - 特性"></a>Features - 特性</h5><ul><li><p>Make <a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest">XMLHttpRequests</a> from the browser - <span style='color:red;'>浏览器创建XMLHttpRequests</span></p></li><li><p>Make <a href="http://nodejs.org/api/http.html">http</a> requests from node.js - <span style='color:red;'>从Node.js发出http请求</span></p></li><li><p>Supports the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise">Promise</a> API - <span style='color:red;'>支持Promise的API</span></p></li><li><p>Intercept request and response - <span style='color:red;'>拦截请求和响应</span></p></li><li><p>Transform request and response data - <span style='color:red;'>转换请求和响应数据</span></p></li><li><p>Cancel requests - <span style='color:red;'>取消请求</span></p></li><li><p>Automatic transforms for JSON data - <span style='color:red;'>JSON数据的自动转换</span></p></li><li><p>Client side support for protecting against <a href="http://en.wikipedia.org/wiki/Cross-site_request_forgery">XSRF</a> - <span style='color:red;'>保护[XSRF]的客户端支持</span></p><blockquote><p>安装：自己去看官方文档</p></blockquote></li></ul><h4 id="3-2-Axios发送Ajax请求-简短代码"><a href="#3-2-Axios发送Ajax请求-简短代码" class="headerlink" title="3.2 Axios发送Ajax请求 - 简短代码"></a>3.2 Axios发送Ajax请求 - 简短代码</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Axios发送Ajax请求<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>GET<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>POST<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>AJAX<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- crossorigin="anonymous" --></span>   <span class="token comment">&lt;!--  &lt;script  src="https://cdn.bootcdn.net/ajax/libs/axios/0.21.1/axios.min.js">&lt;/script> --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">crossorigin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>anonymous<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.bootcdn.net/ajax/libs/axios/0.19.2/axios.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">let</span> btns <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span>        <span class="token comment">//配置 baseURL</span>        axios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>baseURL <span class="token operator">=</span> <span class="token string">'http:localhost:8081'</span>                btns<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token comment">//GET请求</span>            axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/axios'</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>                <span class="token comment">//url 参数</span>                <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">,</span>                    <span class="token literal-property property">vip</span><span class="token operator">:</span><span class="token number">7</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token comment">//请求头信息</span>                <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'at123'</span><span class="token punctuation">,</span>                    <span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">12</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        btns<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token comment">//POST请求 axios#post(url[, data[, config]])</span>            axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/axios'</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>                <span class="token literal-property property">username</span><span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">,</span>                <span class="token literal-property property">userPasswd</span><span class="token operator">:</span><span class="token number">12</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>                <span class="token comment">//url 参数</span>                <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>                    <span class="token literal-property property">vip</span><span class="token operator">:</span><span class="token number">900</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>               <span class="token comment">/*  headers: &#123;                    height:300,                    width:200                &#125;, */</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        btns<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'/axios'</span><span class="token punctuation">,</span>      <span class="token comment">//Url</span>                <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">'post'</span><span class="token punctuation">,</span>     <span class="token comment">//请求方式</span>                <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token comment">//请求头</span>                    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">,</span>                    <span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">21</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>           <span class="token comment">//请求参数</span>                    <span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">12</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>             <span class="token comment">//请求体</span>                    <span class="token literal-property property">firstName</span><span class="token operator">:</span> <span class="token string">'Fred'</span><span class="token punctuation">,</span>                    <span class="token literal-property property">lastName</span><span class="token operator">:</span> <span class="token string">'Flintstone'</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>                 <span class="token comment">//响应状态码</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>status<span class="token punctuation">)</span>                <span class="token comment">//响应体状态的字符串</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>statusText<span class="token punctuation">)</span>                <span class="token comment">//响应头</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>headers<span class="token punctuation">)</span>                <span class="token comment">//响应体</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//express_demo.js 文件</span><span class="token keyword">var</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token string">'/axios'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span>res</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Allow-Origin"</span><span class="token punctuation">,</span><span class="token string">"*"</span><span class="token punctuation">)</span> <span class="token comment">// 解决跨域问题</span>  res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Allow-Headers"</span><span class="token punctuation">,</span><span class="token string">"*"</span><span class="token punctuation">)</span> <span class="token comment">// 解决跨域问题</span>  res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"请求到的响应体"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">var</span> server <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8081</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">var</span> host <span class="token operator">=</span> server<span class="token punctuation">.</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>address  <span class="token keyword">var</span> port <span class="token operator">=</span> server<span class="token punctuation">.</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>port   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"应用实例，访问地址为 http://%s:%s"</span><span class="token punctuation">,</span> host<span class="token punctuation">,</span> port<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-第四章：使用fetch函数发送Ajax请求"><a href="#4-第四章：使用fetch函数发送Ajax请求" class="headerlink" title="4.第四章：使用fetch函数发送Ajax请求"></a>4.第四章：使用fetch函数发送Ajax请求</h2><p> <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch">WorkerOrGlobalScope.fetch() - Web API 接口参考 | MDN (mozilla.org)</a></p><h2 id="5-跨域"><a href="#5-跨域" class="headerlink" title="5.跨域"></a>5.跨域</h2><h3 id="5-1-同源策略-Same-Origin-Policy"><a href="#5-1-同源策略-Same-Origin-Policy" class="headerlink" title="5.1 同源策略(Same-Origin Policy)"></a>5.1 同源策略(Same-Origin Policy)</h3><p>同源策略(Same-Origin Policy)最早由 Netscape 公司提出，是浏览器的一种安全策略。</p><ul><li>同源： 协议、域名、端口号 必须完全相同</li><li>违背同源策略就是<strong>跨域</strong>。</li></ul><h3 id="5-2-如何解决跨域"><a href="#5-2-如何解决跨域" class="headerlink" title="5.2 如何解决跨域"></a>5.2 如何解决跨域</h3><h4 id="5-2-1-JSONP"><a href="#5-2-1-JSONP" class="headerlink" title="5.2.1 JSONP"></a>5.2.1 JSONP</h4><ol><li>JSONP 是什么 JSONP(JSON with Padding)，是一个非官方的跨域解决方案，纯粹凭借程序员的聪明 才智开发出来，只支持 get 请求。 </li><li>JSONP 怎么工作的？ 在网页有一些标签天生具有跨域能力，比如：img link iframe script。 JSONP 就是利用 script 标签的跨域能力来发送请求的。</li><li>JSONP 的使用 <ol><li>动态的创建一个 script 标签 var script &#x3D; document.createElement(“script”); </li><li>设置 script 的 src，设置回调函数 script.src &#x3D; “<a href="http://localhost:3000/testAJAX?callback=abc&quot;">http://localhost:3000/testAJAX?callback=abc&quot;</a>; function abc(data) { alert(data.name); }; </li><li>将 script 添加到 body 中 document.body.appendChild(script);</li></ol></li><li>服务器中路由的处理 router.get(“&#x2F;testAJAX” , function (req , res) { console.log(“收到请求”); var callback &#x3D; req.query.callback; var obj &#x3D; {name:”孙悟空”, age:18 } res.send(callback+”(“+JSON.stringify(obj)+”)”); })</li></ol><h4 id="5-2-2-JQuery中的JSONP"><a href="#5-2-2-JQuery中的JSONP" class="headerlink" title="5.2.2 JQuery中的JSONP"></a>5.2.2 JQuery中的JSONP</h4><blockquote><p>大致理解就行</p></blockquote><h4 id="5-2-3-CORS"><a href="#5-2-3-CORS" class="headerlink" title="5.2.3 * CORS"></a>5.2.3 * CORS</h4><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS">跨源资源共享（CORS） - HTTP | MDN (mozilla.org)</a></p><ol><li>CORS是什么？</li></ol><p>CORS（Cross-Origin Resource Sharing），跨域资源共享。CORS 是官方的跨域解决方 案，它的特点是不需要在客户端做任何特殊的操作，完全在服务器中进行处理，支持 get 和 post 请求。跨域资源共享标准新增了一组 HTTP 首部字段，允许服务器声明哪些 源站通过浏览器有权限访问哪些资源</p><ol start="2"><li>CORS怎么工作的？</li></ol><p>CORS 是通过设置一个响应头来告诉浏览器，该请求允许跨域，浏览器收到该响应 以后就会对响应放行。</p><ol start="3"><li>CORS的使用？</li></ol><p>主要是服务器端的设置：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"/testAJAX"</span> <span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req <span class="token punctuation">,</span> res</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//通过 res 来设置响应头，来允许跨域请求</span><span class="token comment">//res.set("Access-Control-Allow-Origin","http://127.0.0.1:3000");</span>res<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Allow-Origin"</span><span class="token punctuation">,</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"testAJAX 返回的响应"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Ajax </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ajax </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Js原型链理解</title>
      <link href="/2021/09/09/js-chong-fen-li-jie-js-yuan-xing-lian-han-mian-shi-ti/"/>
      <url>/2021/09/09/js-chong-fen-li-jie-js-yuan-xing-lian-han-mian-shi-ti/</url>
      
        <content type="html"><![CDATA[<p><img src="http://statusproject.gitee.io/import-small-blog/static/Js-review/js%E5%8E%9F%E5%9E%8B-01.png"><a href="http://statusproject.gitee.io/import-small-blog/static/Js-review/js原型-01.png">点击查看原图</a></p><p><img src="http://statusproject.gitee.io/import-small-blog/static/Js-review/js%E5%8E%9F%E5%9E%8B-02.png"></p><p><a href="http://statusproject.gitee.io/import-small-blog/static/Js-review/js原型-02.png">点击查看原图</a></p><p><img src="http://statusproject.gitee.io/import-small-blog/static/Js-review/js%E5%8E%9F%E5%9E%8B-03.png"></p><p><a href="http://statusproject.gitee.io/import-small-blog/static/Js-review/js原型-03.png">点击查看原图</a></p><pre class="line-numbers language-none"><code class="language-none">个人理解：讲述构造器就是为了更好的理解原型和原型链的过程。原型作用：公共区域，减少全局作用域命名污染<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>构造器：</p><p>函数也是对象，只不过是具有特殊功能的对象而已。任何函数都可以看做是通过Function()构造函数的new操作实例化的结果，如果把函数Foo当成实例对象的话，其构造函数是Function().</p><p><span style="color:red;">总结：记住 对象(实例化对象)，函数，函数是一种特殊功能的对象(js一般都称对象函数) 它们各有什么？问题就很清晰了。</span></p><p>参考网站：<a href="https://www.cnblogs.com/xiaohuochai/p/5721552.html">一张图理解prototype、proto和constructor的三角关系 - 小火柴的蓝色理想 - 博客园 </a></p><p><a href="https://blog.csdn.net/cc18868876837/article/details/81211729">帮你彻底搞懂JS中的prototype、__proto__与constructor（图解）_码飞_CC的博客-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> Js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue.js学习篇 - 课程介绍</title>
      <link href="/2020/01/08/vue-vue-ke-cheng-jie-shao-quan-cheng/"/>
      <url>/2020/01/08/vue-vue-ke-cheng-jie-shao-quan-cheng/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue课程介绍"><a href="#Vue课程介绍" class="headerlink" title="Vue课程介绍"></a>Vue课程介绍</h1><p>一、邂逅Vue</p><p>二、Vue基础语法</p><p>三、组件开发</p><p>四、Vue CLI详解</p><p>五、vue-router</p><p>六、Vuex详解</p><p>七、网络封装</p><p>八、项目实战</p><p>九、项目部署</p><p>十、vue.js原理相关</p><h2 id="一、邂逅Vue"><a href="#一、邂逅Vue" class="headerlink" title="一、邂逅Vue"></a>一、邂逅Vue</h2><h3 id="1-0-内容概述"><a href="#1-0-内容概述" class="headerlink" title="1.0 内容概述"></a>1.0 内容概述</h3><ul><li>认识Vue.js <ul><li>为什么学习Vue.js</li><li>简单认识一下Vue.js</li></ul></li><li>Vue.js安装方式<ul><li>CDN引入</li><li>下载和引入</li><li>NPM安装管理</li></ul></li><li>Vue.js初体验<ul><li>Hello Vue.js</li><li>Vue列表展示</li><li>案例：计数器</li></ul></li><li>Vue.js的MVVM<ul><li>Vue中的MVVM</li></ul></li></ul><h4 id="1-0-0-为什么学习Vue-js——了解"><a href="#1-0-0-为什么学习Vue-js——了解" class="headerlink" title="1.0.0 为什么学习Vue.js——了解"></a>1.0.0 为什么学习Vue.js——了解</h4><blockquote><p>为了找到工作养活自己把，哈哈。老网易云</p></blockquote><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-09-17_15-22-31.png"></p><h4 id="1-0-1-简单认识一下Vue-js——了解"><a href="#1-0-1-简单认识一下Vue-js——了解" class="headerlink" title="1.0.1 简单认识一下Vue.js——了解"></a>1.0.1 简单认识一下Vue.js——了解</h4><p>​    官网：<a href="https://cn.vuejs.org/">https://cn.vuejs.org/</a></p><p>官网：<a href="https://cn.vuejs.org/">https://cn.vuejs.org/</a></p><blockquote><p>Vue(读音 &#x2F;vju :&#x2F; ,类似 view)，不要读错</p></blockquote><ul><li>Vue是一个 <span style="color:red;">渐进式 </span>的框架，什么式渐进式呢？<ul><li>渐进式意味你可以将Vue作为你应用的一部分嵌入其中，带来更丰富的交互体验</li><li>或者如果那你希望将更多的业务逻辑使用Vue实现，那么Vue的核心库以及其生态系统</li><li>比如Core+Vue+route+Vuex，也可以满足你各种各样的需求</li></ul></li><li>Vue有很多特点和Web开发中常见的高级功能<ul><li>解耦视图和数据</li><li>可复用的组件</li><li>前端路由技术</li><li>状态管理</li><li>虚拟DOM</li></ul></li></ul><blockquote><blockquote><p>​    以上的特点再后面学习的途中常回来看看哦！！！</p></blockquote></blockquote><h4 id="1-0-2-Vue-js安装——掌握"><a href="#1-0-2-Vue-js安装——掌握" class="headerlink" title="1.0.2 Vue.js安装——掌握"></a>1.0.2 Vue.js安装——掌握</h4><ul><li>方式一 ：直接使用CDN引入</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 开发环境版本，包含了有帮助的命令行警告 <span class="token operator">--</span><span class="token operator">></span>  <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 生产版本，优化了尺度和速度 <span class="token operator">--</span><span class="token operator">></span>  <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/npm/vue"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>方式二：下载和引入<ul><li>开发环境 <a href="https://vuejs.org/js/vue.js">https://vuejs.org/js/vue.js</a></li><li>生产环境 <a href="https://vuejs.org/js/vue.min.js">https://vuejs.org/js/vue.min.js</a></li></ul></li><li>方式三：NPM安装<ul><li>后续通过webpack和CLI的使用，我们使用该方法</li></ul></li></ul><h4 id="1-0-3-Hello-VueJs——掌握"><a href="#1-0-3-Hello-VueJs——掌握" class="headerlink" title="1.0.3 Hello VueJs——掌握"></a>1.0.3 Hello VueJs——掌握</h4><ul><li>我们来做第一个Vue程序，体验一下Vue的<span style='color:red;'>响应式</span></li></ul><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;html lang&#x3D;&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;    &lt;title&gt;Document&lt;&#x2F;title&gt;&lt;&#x2F;head&gt;&lt;script src&#x3D;&quot;..&#x2F;js&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;&lt;body&gt;    &lt;div id&#x3D;&quot;app&quot;&gt;        &lt;h1&gt;&#123;&#123; message &#125;&#125;&lt;&#x2F;h1&gt;        &lt;p&gt;&#123;&#123; name &#125;&#125;&lt;&#x2F;p&gt;    &lt;&#x2F;div&gt;    &lt;script&gt;    &#x2F;&#x2F;  let (变量) &#x2F; const (常量)    &#x2F;* 编程范式：声明式编程 *&#x2F;      const app &#x3D; new Vue(&#123;        el: &#39;#app&#39;,     &#x2F;&#x2F;用于挂载要管理的元素        data:&#123;    &#x2F;&#x2F;定义数据            message: &#39;你好啊，李银河&#39;,            name: &#39;np的VueJs&#39;        &#125;    &#125;);    &#x2F;*     元素js的做法(编程范式：命令式编程)    1.创建div元素，设置id属性    2.定义一个变量message    3.将message变量放在前面的div元素中显示    *&#x2F;&lt;&#x2F;script&gt;&lt;&#x2F;body&gt;&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-0-4-VueJs-列表展示——掌握"><a href="#1-0-4-VueJs-列表展示——掌握" class="headerlink" title="1.0.4 VueJs 列表展示——掌握"></a>1.0.4 VueJs 列表展示——掌握</h4><ul><li>现在，我们来展示一个更加复杂的数据：数据列表。<span style='color:red;'>指令：v-for</span></li></ul><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;html lang&#x3D;&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;    &lt;title&gt;Document&lt;&#x2F;title&gt;&lt;&#x2F;head&gt;&lt;script src&#x3D;&quot;..&#x2F;js&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;&lt;body&gt;    &lt;div id&#x3D;&quot;app&quot;&gt;        &lt;ul&gt;            &lt;li v-for&#x3D;&quot;item in movies&quot;&gt;&#123;&#123; item &#125;&#125;&lt;&#x2F;li&gt;        &lt;&#x2F;ul&gt;           &lt;&#x2F;div&gt;    &lt;script&gt;        const app &#x3D; new Vue(&#123;            el:&#39;#app&#39;,            data:&#123;                message:&#39;你好啊&#39;,                movies:[&#39;海王&#39;,&#39;大话西游&#39;,&#39;加油&#39;,&#39;奋斗&#39;,&#39;秀起来&#39;]            &#125;        &#125;)    &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-0-5-案例：计数器——掌握"><a href="#1-0-5-案例：计数器——掌握" class="headerlink" title="1.0.5 案例：计数器——掌握"></a>1.0.5 案例：计数器——掌握</h4><ul><li>现在我们来实现一个小计数器    <span style='color:red;'> 指令：v-on      属性：methods</span></li><li>语法糖：简写的意思  例子：v-on 就可以写成 @</li></ul><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;html lang&#x3D;&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;    &lt;title&gt;计数器&lt;&#x2F;title&gt;&lt;&#x2F;head&gt;&lt;script src&#x3D;&quot;..&#x2F;js&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;&lt;body&gt;&lt;div id&#x3D;&quot;app&quot;&gt;    &lt;h2&gt;当前计数: &#123;&#123; counter &#125;&#125;&lt;&#x2F;h2&gt;   &lt;!--  &lt;button v-on:click&#x3D;&quot;counter++&quot;&gt;+&lt;&#x2F;button&gt; --&gt;   &lt;!-- &lt;button v-on:click&#x3D;&quot;counter--&quot;&gt;-&lt;&#x2F;button&gt; --&gt;   &lt;button v-on:click&#x3D;&quot;add&quot;&gt;+&lt;&#x2F;button&gt;   &lt;button @click&#x3D;&quot;sub&quot;&gt;-&lt;&#x2F;button&gt;&lt;&#x2F;div&gt;    &lt;script&gt;        const app &#x3D; new Vue(&#123;            el:&#39;#app&#39;,            data:&#123;                counter:0            &#125;,            methods:&#123;                add:function()&#123;                    console.log(&#39;add被执行&#39;);                    this.counter++                &#125;,                sub:function()&#123;                    console.log(&#39;sub被执行&#39;);                    this.counter--                &#125;            &#125;        &#125;)    &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="二、Vue基础语法"><a href="#二、Vue基础语法" class="headerlink" title="二、Vue基础语法"></a>二、Vue基础语法</h1><h4 id="2-0-1-Vue中的MVVM——理解"><a href="#2-0-1-Vue中的MVVM——理解" class="headerlink" title="2.0.1 Vue中的MVVM——理解"></a>2.0.1 Vue中的MVVM——理解</h4><blockquote><p>​    全称：Model View ViewModel</p></blockquote><ul><li>什么是MVVM呢？<ul><li><a href="https://zh.wikipedia.org/wiki/MVVM">https://zh.wikipedia.org/wiki/MVVM</a></li></ul></li></ul><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-09-17_22-17-39.png"></p><ul><li><p>Vue中的MVVM                                        </p></li><li><p>view层：</p><ul><li>视图层</li><li>在我们前端开发中，通常就是DOM层</li><li>主要作用是给用户展示各种信息</li></ul></li><li><p>Model层:</p><ul><li>数据层</li><li>数据可能是我们固定的死数据，更多的是来自我们服务器，从网络上请求下来的数据</li><li>在我们计算器的案例中，就是后面抽取出来的obj，当然，里面的数据可能没有这么简单。</li></ul></li><li><p>VueModel</p><ul><li>视图模型层</li><li>视图模型层是View和Model沟通的桥梁</li><li>一方面它实现了Data Binding ，也就是数据绑定，将Model的改变实时的反应到View中</li><li>另一方面它实现了DOM listener，也就是DOM监听，当DOM发生一些事件（点击，滚动）时，可以监听到，并在需要的情况下改变对应的Data</li></ul></li></ul><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-09-17_22-52-51.png"></p><h4 id="2-0-2-创建Vue实例传入的options——理解"><a href="#2-0-2-创建Vue实例传入的options——理解" class="headerlink" title="2.0.2 创建Vue实例传入的options——理解"></a>2.0.2 创建Vue实例传入的options——理解</h4><p>参考Vue 的API：<a href="https://cn.vuejs.org/v2/api/">https://cn.vuejs.org/v2/api/</a></p><p>目前掌握这些选项</p><ul><li>el:<ul><li><strong>类型</strong>：<code>string | Element</code></li><li><strong>限制</strong>：只在用 <code>new</code> 创建实例时生效。</li><li><strong>作用</strong>：决定之后Vue实例会管理哪一个DOM</li></ul></li><li>data:<ul><li><strong>类型</strong>：<code>Object | Function</code></li><li><strong>限制</strong>：组件的定义只接受 <code>function</code>。</li><li><strong>作用</strong>：Vue实例对应的数据对象</li></ul></li><li>methods:<ul><li><strong>类型</strong>：<code>&#123; [key: string]: Function &#125;</code></li><li><strong>作用</strong>：定义属于Vue的一些方法，可以在其它地方调用，也可以在指令中使用</li></ul></li></ul><blockquote><p>扩展：如何区分函数和方法？</p><p><code>function abc()&#123;&#125;</code>        <span style='color:green;' >命名上有所不同</span>        <code>function Abc()&#123;&#125;</code></p></blockquote><h4 id="2-0-3-什么是Vue的生命周期——理解"><a href="#2-0-3-什么是Vue的生命周期——理解" class="headerlink" title="2.0.3 什么是Vue的生命周期——理解"></a>2.0.3 什么是Vue的生命周期——理解</h4><blockquote><p>​    生命周期：事物从诞生到消亡的整给过程</p></blockquote><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/lifecycle.png"></p><h4 id="2-0-4-定义Vue的template——了解【vscode-设置模板方式-代码缩进】"><a href="#2-0-4-定义Vue的template——了解【vscode-设置模板方式-代码缩进】" class="headerlink" title="2.0.4  定义Vue的template——了解【vscode 设置模板方式 | 代码缩进】"></a>2.0.4  定义Vue的template——了解【vscode 设置模板方式 | 代码缩进】</h4><blockquote><p>​    第三步：里面都要用空格，不然会报错！！！！</p></blockquote><p><strong>第一步：</strong>文件&#x3D;&#x3D;&gt;首选项&#x3D;&#x3D;&gt;用户代码片段</p><p><strong>第二步：</strong>选择代码片段文件 html.json</p><p><strong>第三步：</strong>输入要自定义的快捷键 和 模板代码段</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span> <span class="token property">"vue"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"prefix"</span><span class="token operator">:</span> <span class="token string">"vue"</span><span class="token punctuation">,</span> <span class="token comment">// 触发的关键字 输入vh按下tab键</span><span class="token property">"body"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"&lt;!DOCTYPE html>"</span><span class="token punctuation">,</span><span class="token string">"&lt;html lang=\"en\">"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token string">"&lt;head>"</span><span class="token punctuation">,</span><span class="token string">"    &lt;meta charset=\"UTF-8\">"</span><span class="token punctuation">,</span><span class="token string">"    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">"</span><span class="token punctuation">,</span><span class="token string">"    &lt;title>Document&lt;/title>"</span><span class="token punctuation">,</span><span class="token string">" &lt;script src=\"../js/vue.js\">&lt;/script>"</span><span class="token punctuation">,</span><span class="token string">"&lt;/head>"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token string">"&lt;body>"</span><span class="token punctuation">,</span><span class="token string">"    &lt;div id=\"app\">&lt;/div>"</span><span class="token punctuation">,</span><span class="token string">"    &lt;script>"</span><span class="token punctuation">,</span><span class="token string">"        var app = new Vue(&#123;"</span><span class="token punctuation">,</span><span class="token string">"           el:'#app',"</span><span class="token punctuation">,</span><span class="token string">"           data:&#123;&#125;,"</span><span class="token punctuation">,</span><span class="token string">"           methods:&#123;&#125;"</span><span class="token punctuation">,</span><span class="token string">"        &#125;);"</span><span class="token punctuation">,</span><span class="token string">"    &lt;/script>"</span><span class="token punctuation">,</span><span class="token string">"&lt;/body>"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token string">"&lt;/html>"</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"vue components"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>第四步：</strong>进入 .html 后缀的文件中 按快捷键 vh 后按 tab 键 即可实现快速输入代码段</p><blockquote><p>​    vscode代码缩进方法</p></blockquote><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/20190219162513914.png"></p><h3 id="2-0-插值操作"><a href="#2-0-插值操作" class="headerlink" title="2.0 插值操作"></a>2.0 插值操作</h3><h5 id="2-0-5-基本的Mustache语法-【个人感觉和自学的art-template差不多】——了解"><a href="#2-0-5-基本的Mustache语法-【个人感觉和自学的art-template差不多】——了解" class="headerlink" title="2.0.5  基本的Mustache语法    【个人感觉和自学的art-template差不多】——了解"></a>2.0.5  基本的Mustache语法    【个人感觉和自学的art-template差不多】——了解</h5><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-09-18_11-04-07.png"></p><h5 id="2-0-6-v-once指令的使用-——掌握"><a href="#2-0-6-v-once指令的使用-——掌握" class="headerlink" title="2.0.6 v-once指令的使用 ——掌握"></a>2.0.6 v-once指令的使用 ——掌握</h5><ul><li>某些时候我们不希望界面随意的跟随改变<ul><li>该指令后面不需要跟任何表达式（比如之前的v-for后面是由跟表达式的）</li><li>该指令表示元素和组件(组件后面学)只渲染一次，不会随着数据的改变而改变</li></ul></li></ul><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">  &lt;body&gt;      &lt;div id&#x3D;&quot;app&quot;&gt;        &lt;h2&gt;&#123;&#123; message &#125;&#125;&lt;&#x2F;h2&gt;        &lt;h2 v-once&gt;&#123;&#123; message &#125;&#125;&lt;&#x2F;h2&gt;      &lt;&#x2F;div&gt;      &lt;script&gt;          var app &#x3D; new Vue(&#123;             el:&#39;#app&#39;,             data:&#123;               message:&#39;你好啊&#39;,             &#125;,             methods:&#123;&#125;          &#125;);      &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-09-18_15-11-22.png"></p><h5 id="2-0-7-v-html指令的使用-——掌握"><a href="#2-0-7-v-html指令的使用-——掌握" class="headerlink" title="2.0.7 v-html指令的使用 ——掌握"></a>2.0.7 v-html指令的使用 ——掌握</h5><ul><li>某些情况下，我们从服务器请求的数据本身就是一给HTML代码<ul><li>如果我们直接通过12来输出，会将HTML代码一起输出，我们希望安装HTML格式进行解析</li></ul></li><li>该指令后面往往会跟上一个String类型</li><li>会将String的HTML解析出来并且渲染</li></ul><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;body&gt;      &lt;div id&#x3D;&quot;app&quot;&gt;      &lt;h2&gt;&#123;&#123; url &#125;&#125;&lt;&#x2F;h2&gt;      &lt;h2 v-html&#x3D;&quot;url&quot;&gt;&lt;&#x2F;h2&gt;      &lt;&#x2F;div&gt;      &lt;script&gt;          var app &#x3D; new Vue(&#123;             el:&#39;#app&#39;,             data:&#123;               url:&#39;&lt;a href&#x3D;&quot;https:&#x2F;&#x2F;baidu.com&quot;&gt;百度一下&lt;&#x2F;a&gt;&#39;,             &#125;,             methods:&#123;&#125;          &#125;);      &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-09-18_15-28-11.png"></p><h5 id="2-0-8-v-text指令的使用-——掌握-不常用"><a href="#2-0-8-v-text指令的使用-——掌握-不常用" class="headerlink" title="2.0.8 v-text指令的使用 ——掌握    不常用"></a>2.0.8 v-text指令的使用 ——掌握    <span style="color:green;">不常用</span></h5><ul><li>v-text作用和Mustache比较相似：都是用于数据显示在界面中</li><li>v-text通常情况下，接受一个string类型</li></ul><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;body&gt;    &lt;div id&#x3D;&quot;app&quot;&gt;      &lt;h2&gt;&#123;&#123; message &#125;&#125;,345&lt;&#x2F;h2&gt;      &lt;h2 v-text&#x3D;&quot;message&quot;&gt;345&lt;&#x2F;h2&gt;    &lt;&#x2F;div&gt;    &lt;script&gt;        var app &#x3D; new Vue(&#123;           el:&#39;#app&#39;,           data:&#123;             message:&#39;12&#39;,           &#125;,           methods:&#123;&#125;        &#125;);    &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-09-18_18-30-24.png"></p><h5 id="2-0-9-v-pre指令的使用-——掌握"><a href="#2-0-9-v-pre指令的使用-——掌握" class="headerlink" title="2.0.9 v-pre指令的使用 ——掌握"></a>2.0.9 v-pre指令的使用 ——掌握</h5><ul><li>v-pre用于跳过这个元素和它子元素的编译过程，用于显示原本的Mustache语法</li></ul><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;body&gt;    &lt;div id&#x3D;&quot;app&quot;&gt;    &lt;h2&gt;&#123;&#123; message &#125;&#125;&lt;&#x2F;h2&gt;    &lt;h2 v-pre&gt;&#123;&#123; message &#125;&#125;&lt;&#x2F;h2&gt;    &lt;&#x2F;div&gt;    &lt;script&gt;        var app &#x3D; new Vue(&#123;           el:&#39;#app&#39;,           data:&#123;             message:&#39;你好啊&#39;,           &#125;,           methods:&#123;&#125;        &#125;);    &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-09-18_18-48-29.png"></p><h5 id="2-0-10-v-cloak指令的使用-——掌握"><a href="#2-0-10-v-cloak指令的使用-——掌握" class="headerlink" title="2.0.10 v-cloak指令的使用 ——掌握"></a>2.0.10 v-cloak指令的使用 ——掌握</h5><ul><li>在某些情况下，我们浏览器可能会直接显示出未编译的Mustache标签<ul><li>cloak：斗篷</li></ul></li></ul><pre class="line-numbers language-css" data-language="css"><code class="language-css"> <span class="token selector">&lt;style>      [v-cloak]</span><span class="token punctuation">&#123;</span>        <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>&lt;/style><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;body&gt;    &lt;div id&#x3D;&quot;app&quot;&gt;    &lt;h2 v-cloak&gt;&#123;&#123; message &#125;&#125;&lt;&#x2F;h2&gt;    &lt;&#x2F;div&gt;      &lt;script&gt;      &#x2F;&#x2F; 在vue解析之前，div中有一个属性v-cloak      &#x2F;&#x2F; 在vue解析之后，div中没有一个属性v-cloak      setTimeout(function()&#123;        var app &#x3D; new Vue(&#123;           el:&#39;#app&#39;,           data:&#123;             message:&#39;你好啊&#39;,           &#125;,           methods:&#123;&#125;        &#125;);      &#125;,1000);       &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-1-v-bind介绍-——掌握-动态绑定"><a href="#2-1-v-bind介绍-——掌握-动态绑定" class="headerlink" title="2.1 v-bind介绍 ——掌握 动态绑定"></a>2.1 v-bind介绍 ——掌握 动态绑定</h3><blockquote><p>​    前面我们学习的指令主要作用是将值插入到我们<span style='color:red;'>模板的内容</span>当中。</p></blockquote><ul><li>但是，除了内容需要动态来决定外，某些属性我们也希望动态来绑定。<ul><li>比如动态绑定a元素的href属性</li><li>比如动态绑定img元素的src属性</li></ul></li><li>这个时候，我们可以使用v-bind指令：<ul><li>作用：动态绑定属性</li><li><strong>缩写</strong>：<code>:</code></li><li><strong>预期</strong>：<code>any (with argument) | Object (without argument)</code></li><li><strong>参数</strong>：<code>attrOrProp (optional)</code></li></ul></li></ul><h5 id="2-1-1-v-bind基本使用"><a href="#2-1-1-v-bind基本使用" class="headerlink" title="2.1.1 v-bind基本使用"></a>2.1.1 v-bind基本使用</h5><blockquote><p>​    v-bind 的语法糖  <code>:</code></p></blockquote><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;body&gt;    &lt;div id&#x3D;&quot;app&quot;&gt;    &lt;!-- &lt;img src&#x3D;&quot;&#123;&#123; imgURL &#125;&#125;&quot; alt&#x3D;&quot;&quot;&gt; 这是错误的做法：这里不可以使用mustache语法--&gt;    &lt;img v-bind:src&#x3D;&quot;imgURL&quot; alt&#x3D;&quot;&quot;&gt;    &lt;a :href&#x3D;&quot;aHref&quot;&gt;百度一下&lt;&#x2F;a&gt;    &lt;&#x2F;div&gt;    &lt;script&gt;        var app &#x3D; new Vue(&#123;           el:&#39;#app&#39;,           data:&#123;             message:&#39;你好啊&#39;,             imgURL:&#39;https:&#x2F;&#x2F;cn.vuejs.org&#x2F;images&#x2F;logo.png&#39;,             aHref:&#39;https:&#x2F;&#x2F;www.baidu.com&#39;,           &#125;,           methods:&#123;&#125;        &#125;);    &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2-1-2-v-bind动态绑定class（对象语法）"><a href="#2-1-2-v-bind动态绑定class（对象语法）" class="headerlink" title="2.1.2 v-bind动态绑定class（对象语法）"></a>2.1.2 v-bind动态绑定class（对象语法）</h5><ul><li>很多时候，我们希望动态的来切换class，比如：<ul><li>案例：点击按钮一下按钮切换样式</li></ul></li><li>class类里的对象语法<code>&lt;h2 class=&quot;这里写固定的样式&quot;  :class=&quot;&#123;类名1: boolean值, 类名2: boolean值&#125;&quot;&gt;&#123;&#123; message &#125;&#125;&lt;/h2&gt;</code></li></ul><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;body&gt;    &lt;div id&#x3D;&quot;app&quot;&gt;    &lt;!-- &lt;h2 class&#x3D;&quot;active&quot;&gt;&#123;&#123; message &#125;&#125;&lt;&#x2F;h2&gt; --&gt;    &lt;!-- &lt;h2 :class&#x3D;&quot;active&quot;&gt;&#123;&#123; message &#125;&#125;&lt;&#x2F;h2&gt; --&gt;    &lt;!-- &lt;h2 :class&#x3D;&quot;&#123;类名1: boolean值, 类名2: boolean值&#125;&quot;&gt;&#123;&#123; message &#125;&#125;&lt;&#x2F;h2&gt; --&gt;    &lt;h2 :class&#x3D;&quot;&#123;active: isActive, line: isLine&#125;&quot;&gt;&#123;&#123; message &#125;&#125;&lt;&#x2F;h2&gt;    &lt;button :class&#x3D;&quot;&#123;active: isActive&#125;&quot; v-on:click&#x3D;&quot;changeColor()&quot;&gt;小案例:点我变色&lt;&#x2F;button&gt;    &lt;&#x2F;div&gt;    &lt;script&gt;        var app &#x3D; new Vue(&#123;           el:&#39;#app&#39;,           data:&#123;             message:&#39;你好啊&#39;,            &#x2F;*  active:&#39;active&#39;, *&#x2F;             isActive:&#39;true&#39;,             isLine:&#39;true&#39;           &#125;,           methods:&#123;             changeColor:function()&#123;            &#x2F;* if(this.isActive)&#123;                this.isActive&#x3D;false;               &#125;else&#123;                this.isActive&#x3D;true;               &#125; *&#x2F;                this.isActive &#x3D; !this.isActive;             &#125;           &#125;        &#125;);    &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>​        觉得 :class 里的样式有点多 可以封装成函数</p></blockquote><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!-- &lt;h2 :class&#x3D;&quot;&#123;active: isActive, line: isLine&#125;&quot;&gt;&#123;&#123; message &#125;&#125;&lt;&#x2F;h2&gt; --&gt;&lt;h2 :class&#x3D;&quot;getClasses()&quot;&gt;&#123;&#123; message &#125;&#125;&lt;&#x2F;h2&gt;methods:&#123;           getClasses:function()&#123;           return &#123;active: this.isActive , line: this.isLine&#125;         &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2-1-3-v-bind动态绑定class-（数组语法）——了解"><a href="#2-1-3-v-bind动态绑定class-（数组语法）——了解" class="headerlink" title="2.1.3 v-bind动态绑定class （数组语法）——了解"></a>2.1.3 v-bind动态绑定class （数组语法）——了解</h5><ul><li>不常用，因为里面的样式是写死的，但是样式多的时候还是可以使用的</li><li>class类里的数组语法<code> &lt;h2 class=&quot;这里写固定的样式&quot; :class=&quot;[&#39;active&#39;,line]&quot;&gt;&#123;&#123; message &#125;&#125;&lt;/h2&gt;</code></li></ul><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;body&gt;    &lt;div id&#x3D;&quot;app&quot;&gt;    &lt;h2 class&#x3D;&quot;title&quot; :class&#x3D;&quot;[&#39;active&#39;,line]&quot;&gt;&#123;&#123; message &#125;&#125;&lt;&#x2F;h2&gt;    &lt;&#x2F;div&gt;    &lt;script&gt;        var app &#x3D; new Vue(&#123;           el:&#39;#app&#39;,           data:&#123;             message:&#39;你好啊&#39;,             line:&#39;line123456&#39;           &#125;,           methods:&#123;&#125;        &#125;);    &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="作业：点击哪里哪里变红（运用-v-for-v-bind-v-on）"><a href="#作业：点击哪里哪里变红（运用-v-for-v-bind-v-on）" class="headerlink" title="作业：点击哪里哪里变红（运用 v-for v-bind v-on）"></a>作业：点击哪里哪里变红（运用 v-for v-bind v-on）</h2><h5 id="2-1-4-v-bind动态绑定style（对象语法）"><a href="#2-1-4-v-bind动态绑定style（对象语法）" class="headerlink" title="2.1.4 v-bind动态绑定style（对象语法）"></a>2.1.4 v-bind动态绑定style（对象语法）</h5><ul><li>我们可以利用v-bind:style来绑定一些CSS内联样式<ul><li>我们可以使用驼峰式（camelCase） fontSize</li><li>或者短横分隔（kebab-case，记得用单引号括起来）‘font-size’</li></ul></li><li>style里的对象语法<code>&lt;h2 :style=&quot;&#123;key(属性名): value(属性值) &#125;&quot;&gt;&#123;&#123; message &#125;&#125;&lt;/h2&gt;</code></li></ul><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;body&gt;    &lt;div id&#x3D;&quot;app&quot;&gt;   &lt;!--  &lt;h2 :style&#x3D;&quot;&#123;key(属性名): value(属性值) &#125;&quot;&gt;&#123;&#123; message &#125;&#125;&lt;&#x2F;h2&gt; --&gt;    &lt;h2 :style&#x3D;&quot;&#123;fontSize: &#39;50px&#39;&#125;&quot;&gt;&#123;&#123; message &#125;&#125;&lt;&#x2F;h2&gt;    &lt;!-- &#39;50px&#39; 必须加上单引号，否则是当做一个变量去解析 --&gt;    &lt;h2 :style&#x3D;&quot;&#123;fontSize: finalSize&#125;&quot;&gt;&#123;&#123; message &#125;&#125;&lt;&#x2F;h2&gt;    &lt;!-- fianlSize当做一个变量使用 --&gt;    &lt;h2 :style&#x3D;&quot;&#123;fontSize: finalSizeOne +&#39;px&#39;,backgroundColor:finalColor&#125;&quot;&gt;&#123;&#123; message &#125;&#125;&lt;&#x2F;h2&gt;    &lt;&#x2F;div&gt;    &lt;script&gt;        var app &#x3D; new Vue(&#123;           el:&#39;#app&#39;,           data:&#123;             message:&#39;你好啊&#39;,             finalSize:&#39;60px&#39;,             finalSizeOne:70,             finalColor:&#39;red&#39;,           &#125;,           methods:&#123;&#125;        &#125;);    &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2-1-5-v-bind动态绑定style（数组语法）——了解"><a href="#2-1-5-v-bind动态绑定style（数组语法）——了解" class="headerlink" title="2.1.5 v-bind动态绑定style（数组语法）——了解"></a>2.1.5 v-bind动态绑定style（数组语法）——了解</h5><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;body&gt;    &lt;div id&#x3D;&quot;app&quot;&gt;    &lt;h2 :style&#x3D;&quot;[baseStyle,baseStyle1]&quot;&gt;&#123;&#123; message &#125;&#125;&lt;&#x2F;h2&gt;    &lt;&#x2F;div&gt;    &lt;script&gt;        var app &#x3D; new Vue(&#123;           el:&#39;#app&#39;,           data:&#123;             message:&#39;你好啊&#39;,             baseStyle:&#123;backgroundColor:&#39;red&#39;&#125;,             baseStyle1:&#123;color:&#39;green&#39;&#125;,           &#125;,           methods:&#123;&#125;        &#125;);    &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-2-计算属性-computed-——掌握"><a href="#2-2-计算属性-computed-——掌握" class="headerlink" title="2.2 计算属性 - computed ——掌握"></a>2.2 计算属性 - computed ——掌握</h3><h5 id="2-2-1-计算属性的基本操作"><a href="#2-2-1-计算属性的基本操作" class="headerlink" title="2.2.1 计算属性的基本操作"></a>2.2.1 计算属性的基本操作</h5><ul><li>我们知道，在模板中可以直接通过插值语法显示一些data中的数据，为了使页面更加简洁，便于阅读，采用计算属性【computed】</li><li>注意<code>计算属性不带括号  &#123;&#123; fullName &#125;&#125;</code></li></ul><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;body&gt;    &lt;div id&#x3D;&quot;app&quot;&gt;    &lt;h2&gt;&#123;&#123; firstName &#125;&#125; &#123;&#123; lastName &#125;&#125;&lt;&#x2F;h2&gt;    &lt;h2&gt;&#123;&#123; getFullName() &#125;&#125;&lt;&#x2F;h2&gt;    &lt;!-- 这种方式最好，让人感觉到最清楚 --&gt;    &lt;h2&gt;&#123;&#123; fullName &#125;&#125;&lt;&#x2F;h2&gt;        &lt;&#x2F;div&gt;    &lt;script&gt;        var app &#x3D; new Vue(&#123;           el:&#39;#app&#39;,           data:&#123;             firstName:&#39;LOL&#39;,             lastName:&#39;英雄&#39;           &#125;,           &#x2F;&#x2F;computed : 计算属性()           computed:&#123;            fullName:function()&#123;              return this.firstName + &#39; &#39; +this.lastName            &#125;           &#125;,           methods:&#123;             getFullName:function()&#123;               return this.firstName + &#39; &#39; +this.lastName             &#125;           &#125;        &#125;);    &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2-2-2-计算属性的复杂操作"><a href="#2-2-2-计算属性的复杂操作" class="headerlink" title="2.2.2 计算属性的复杂操作"></a>2.2.2 计算属性的复杂操作</h5><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;body&gt;    &lt;div id&#x3D;&quot;app&quot;&gt;    &lt;h2&gt;总价格: &#123;&#123; books[0].price &#125;&#125;&lt;&#x2F;h2&gt;    &lt;h2&gt;总价格: &#123;&#123; totalPrice &#125;&#125;&lt;&#x2F;h2&gt;    &lt;&#x2F;div&gt;    &lt;script&gt;        var app &#x3D; new Vue(&#123;           el:&#39;#app&#39;,           data:&#123;            books:[              &#123;id:110,name:&#39;艺术&#39;, price:119&#125;,              &#123;id:111,name:&#39;代码大全&#39;, price:119&#125;,              &#123;id:112,name:&#39;深入理解计算机原理&#39;, price:119&#125;,              &#123;id:113,name:&#39;现代操作系统&#39;, price:119&#125;,            ]           &#125;,           computed:&#123;             totalPrice:function()&#123;               let result&#x3D;0;               for(let i&#x3D;0;i&lt;this.books.length;i++)&#123;                  result+&#x3D;this.books[i].price               &#125;               return result;             &#125;           &#125;,           methods:&#123;           &#125;        &#125;);    &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2-2-3-计算属性的setter和getter-——理解"><a href="#2-2-3-计算属性的setter和getter-——理解" class="headerlink" title="2.2.3 计算属性的setter和getter ——理解"></a>2.2.3 计算属性的setter和getter ——理解</h5><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;body&gt;    &lt;div id&#x3D;&quot;app&quot;&gt;    &lt;h2&gt;&#123;&#123; fullName &#125;&#125;&lt;&#x2F;h2&gt;    &lt;&#x2F;div&gt;    &lt;script&gt;        var app &#x3D; new Vue(&#123;           el:&#39;#app&#39;,           data:&#123;             firstName:&#39;LOL&#39;,             lastName:&#39;英雄&#39;           &#125;,           computed:&#123;             &#x2F;* fullName:function()&#123;              return this.lastName + &#39; &#39; +this.firstName            &#125; *&#x2F;            &#x2F;&#x2F; 计算属性一般是没有set方法的，只读属性             fullName:&#123;               set:function(newValue)&#123;                const name &#x3D; newValue.split(&#39; &#39;);                this.firstName&#x3D;name[0];                this.lastName&#x3D;name[1];                console.log(&quot;修改值的时候自动调用set方法&quot;);               &#125;,               get:function()&#123;                return this.lastName + &#39; &#39; +this.firstName               &#125;             &#125;           &#125;,           methods:&#123;&#125;        &#125;);    &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-09-20_11-18-30.png"></p><h5 id="2-2-4-计算属性-computed-与-methods属性的对比"><a href="#2-2-4-计算属性-computed-与-methods属性的对比" class="headerlink" title="2.2.4 计算属性( computed ) 与 methods属性的对比"></a>2.2.4 计算属性( computed ) 与 methods属性的对比</h5><ul><li>计算属性只执行一次(会进行缓存)    methods属性有几次调用，就执行几次</li></ul><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-09-20_11-36-50.png"></p><h3 id="2-3-v-on介绍-——掌握-事件监听"><a href="#2-3-v-on介绍-——掌握-事件监听" class="headerlink" title="2.3 v-on介绍 ——掌握 事件监听"></a>2.3 v-on介绍 ——掌握 事件监听</h3><ul><li>在前端开发中，我们需要经常和用户进行交互<ul><li>这个时候，我们就必须监听用户发送的时间，比如点击、键盘等事件</li><li>在Vue中如何监听事件呢？ 使用 v-on 指令</li></ul></li><li>v-on介绍<ul><li><strong>缩写</strong>：<code>@</code></li><li><strong>预期</strong>：<code>Function | Inline Statement | Object</code></li><li><strong>参数</strong>：<code>event</code></li></ul></li></ul><h5 id="2-3-0-v-on基本使用"><a href="#2-3-0-v-on基本使用" class="headerlink" title="2.3.0 v-on基本使用"></a>2.3.0 v-on基本使用</h5><p>见1.0.5案例：计数器——掌握</p><h5 id="2-3-1-v-on参数"><a href="#2-3-1-v-on参数" class="headerlink" title="2.3.1 v-on参数"></a>2.3.1 v-on参数</h5><ul><li>当通过methods中定义方法，以提供@click调用时，需要注意参数问题：</li><li>情况一：如果该方法不需要额外参数，那么方法后的()可以不添加。<ul><li>但是注意：如果方法本身有一个参数，那么默认将原生事件event参数传递进去</li></ul></li><li>情况二：如果需要同时传入某个参数，同时需要event时，可以通过$event传入事件</li><li><!-- 细节 --><pre><code>&lt;button @click=&quot;btn4Click(123)&quot;&gt;按钮8&lt;/button&gt;   &lt;!-- 123是数字类型 --&gt;&lt;button @click=&quot;btn4Click(&#39;abc&#39;)&quot;&gt;按钮9&lt;/button&gt; &lt;!-- &#39;abc&#39;为一个字符串 --&gt;&lt;button @click=&quot;btn4Click(abc)&quot;&gt;按钮10&lt;/button&gt;   &lt;!-- abc为一个变量,会在data里面寻找 --&gt;</code></pre></li></ul><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;body&gt;    &lt;div id&#x3D;&quot;app&quot;&gt;    &lt;!-- 事件调用的方法没有参数 --&gt;    &lt;button @click&#x3D;&quot;btn1Click()&quot;&gt;按钮1&lt;&#x2F;button&gt;    &lt;button @click&#x3D;&quot;btn1Click&quot;&gt;按钮2&lt;&#x2F;button&gt;   &lt;!-- btn1Click --&gt;    &lt;!-- 在我们事件定义时，写方法时省略了小括号，但是方法本身是需要一个参数的      这个时候Vue会默认将浏览器产生的event事件对象作为参数传入到方法    --&gt;    &lt;button @click&#x3D;&quot;btn2Click()&quot;&gt;按钮3&lt;&#x2F;button&gt;  &lt;!-- btn2Click undefined --&gt;    &lt;button @click&#x3D;&quot;btn2Click($event)&quot;&gt;按钮4&lt;&#x2F;button&gt; &lt;!-- tn2Click MouseEvent &#123;&#125; --&gt;        &lt;!-- 方法定义时，我们需要event对象，同时 --&gt;    &lt;!-- 在调用方法时，如何手动的获取到浏览器参数的event对象：$event --&gt;    &lt;button @click&#x3D;&quot;btn3Click()&quot;&gt;按钮5&lt;&#x2F;button&gt; &lt;!-- btn3Click undefined undefined --&gt;    &lt;button @click&#x3D;&quot;btn3Click(123,$event)&quot;&gt;按钮6&lt;&#x2F;button&gt; &lt;!-- btn3Click 123 MouseEvent &#123;&#125; --&gt;    &lt;!-- 细节：建议多敲 --&gt;    &lt;button @click&#x3D;&quot;btn4Click($event)&quot;&gt;按钮7&lt;&#x2F;button&gt;  &lt;!-- btn3Click MouseEvent &#123;&#125; undefined --&gt;    &lt;button @click&#x3D;&quot;btn4Click(123)&quot;&gt;按钮8&lt;&#x2F;button&gt;   &lt;!-- 123是数字类型 --&gt;    &lt;button @click&#x3D;&quot;btn4Click(&#39;abc&#39;)&quot;&gt;按钮9&lt;&#x2F;button&gt; &lt;!-- &#39;abc&#39;为一个字符串 --&gt;    &lt;button @click&#x3D;&quot;btn4Click(abc)&quot;&gt;按钮10&lt;&#x2F;button&gt;   &lt;!-- abc为一个变量,会在data里面寻找 --&gt;    &lt;&#x2F;div&gt;    &lt;script&gt;        var app &#x3D; new Vue(&#123;           el:&#39;#app&#39;,           data:&#123;             message:&#39;你好啊&#39;,             abc:&#39;abc&#39;,           &#125;,           methods:&#123;            btn1Click:function()&#123;              console.log(&quot;btn1Click&quot;);            &#125;,            btn2Click:function(event)&#123;              console.log(&quot;btn2Click&quot;,event);            &#125;,            btn3Click:function(abc,event)&#123;              console.log(&quot;btn3Click&quot;,abc,event);            &#125;,            btn4Click:function(abc,event)&#123;              console.log(&quot;btn3Click&quot;,abc,event);            &#125;           &#125;        &#125;);    &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2-3-2-v-on修饰符"><a href="#2-3-2-v-on修饰符" class="headerlink" title="2.3.2 v-on修饰符"></a>2.3.2 v-on修饰符</h5><ul><li><code>.stop</code> - 调用 <code>event.stopPropagation()</code>。    ——下面代码举了例子</li><li><code>.prevent</code> - 调用 <code>event.preventDefault()</code>。     ——下面代码举了例子</li><li><code>.capture</code> - 添加事件侦听器时使用 capture 模式。</li><li><code>.self</code> - 只当事件是从侦听器绑定的元素本身触发时才触发回调。</li><li><code>.&#123;keyCode | keyAlias&#125;</code> - 只当事件是从特定键触发时才触发回调。     ——下面代码举了例子</li><li><code>.native</code> - 监听组件根元素的原生事件。</li><li><code>.once</code> - 只触发一次回调。</li><li><code>.left</code> - (2.2.0) 只当点击鼠标左键时触发。</li><li><code>.right</code> - (2.2.0) 只当点击鼠标右键时触发。</li><li><code>.middle</code> - (2.2.0) 只当点击鼠标中键时触发。</li><li><code>.passive</code> - (2.3.0) 以 <code>&#123; passive: true &#125;</code> 模式添加侦听器</li></ul><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;body&gt;    &lt;div id&#x3D;&quot;app&quot;&gt;      &lt;!-- 1. .stop修饰符的引用 取消冒泡事件--&gt;      &lt;div @click&#x3D;&quot;divClick()&quot;&gt;        &lt;p&gt;按钮p&lt;&#x2F;p&gt;        &lt;button @click.stop&#x3D;&quot;btnClick()&quot;&gt;按钮button&lt;&#x2F;button&gt;      &lt;&#x2F;div&gt;      &lt;!-- 2. .prevent修饰符的使用 自定义提交--&gt;      &lt;form action&#x3D;&quot;baidu&quot;&gt;        &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;提交&quot; @click.prevent&#x3D;&quot;submitClick()&quot;&gt;      &lt;&#x2F;form&gt;      &lt;!-- 3. .监听某个键盘的键帽  @resize当前版本好像用不了--&gt;      &lt;input type&#x3D;&quot;text&quot; @keyup&#x3D;&quot;keyUp&quot;&gt;    &lt;&#x2F;div&gt;    &lt;script&gt;        var app &#x3D; new Vue(&#123;           el:&#39;#app&#39;,           data:&#123;             message:&#39;你好啊&#39;,           &#125;,           methods:&#123;             btnClick:function()&#123;              console.log(1111);             &#125;,             divClick:function()&#123;              console.log(2222);             &#125;,             submitClick:function()&#123;               console.log(&#39;submitClick&#39;);             &#125;,             keyUp:function()&#123;               console.log(&#39;keyUp&#39;);             &#125;           &#125;        &#125;);    &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-4-条件判断-v-if、v-else-if、v-else-——掌握"><a href="#2-4-条件判断-v-if、v-else-if、v-else-——掌握" class="headerlink" title="2.4 条件判断  v-if、v-else-if、v-else ——掌握"></a>2.4 条件判断  v-if、v-else-if、v-else ——掌握</h3><ul><li>这三个指令与JavaScript的条件语句 if、else、else if 类似。</li></ul><h5 id="2-4-1-v-if"><a href="#2-4-1-v-if" class="headerlink" title="2.4.1 v-if"></a>2.4.1 v-if</h5><ul><li>Vue的条件指令可以根据表达式的值在DOM中渲染或销毁元素或组件</li></ul><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-09-21_15-01-58.png"></p><ul><li>v-if的原理：<ul><li>v-if后面的条件为false时，对应的元素以及其子元素不会渲染。</li><li>也就是根本没有不会有对应的标签出现在DOM中。</li></ul></li></ul><h5 id="2-4-2-v-else"><a href="#2-4-2-v-else" class="headerlink" title="2.4.2 v-else"></a>2.4.2 v-else</h5><ul><li><p>注意：v-if  和  v-else  要连着一起用  ，中间隔着标签是会报错的</p></li><li><p>例如 </p></li><li><p>~~~vue</p><div v-if>    </div><a></a><div v-else></div><pre class="line-numbers language-none"><code class="language-none">* 上面这种情况会报错![]( http:&#x2F;&#x2F;statusproject.gitee.io&#x2F;import-small-blog&#x2F;static&#x2F;VueJs-study&#x2F;Snipaste_2020-09-21_15-09-48.png)##### 2.4.3 v-else-if~~~vue&lt;body&gt;    &lt;div id&#x3D;&quot;app&quot;&gt;      &lt;h2 v-if&#x3D;&quot;score&gt;&#x3D;90&quot;&gt;优秀&lt;&#x2F;h2&gt;      &lt;h2 v-else-if&#x3D;&quot;score&gt;&#x3D;80&quot;&gt;良好&lt;&#x2F;h2&gt;      &lt;h2 v-else-if&#x3D;&quot;score&gt;&#x3D;60&quot;&gt;及格&lt;&#x2F;h2&gt;      &lt;h2 v-else&gt;不及格&lt;&#x2F;h2&gt;      &lt;h1&gt;&#123;&#123; result &#125;&#125;&lt;&#x2F;h1&gt;    &lt;&#x2F;div&gt;    &lt;script&gt;        var app &#x3D; new Vue(&#123;           el:&#39;#app&#39;,           data:&#123;             score:99           &#125;,           computed            &#x2F;&#x2F;采用了EcmaScript6语法             result()&#123;               let showMessage &#x3D; &#39;&#39;;               if(this.score&gt;&#x3D;90)&#123;                  showMessage&#x3D;&#39;优秀&#39;;               &#125;else if(this.score&gt;&#x3D;80)&#123;                  showMessage&#x3D;&#39;良好&#39;;               &#125;else if(this.score&gt;&#x3D;60)&#123;                  showMessage&#x3D;&#39;及格&#39;;               &#125;else&#123;                  showMessage&#x3D;&#39;不及格&#39;;               &#125;               return showMessage;             &#125;,           &#125;,           methods:&#123;&#125;        &#125;);    &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="小案例：登录方式切换"><a href="#小案例：登录方式切换" class="headerlink" title="小案例：登录方式切换"></a>小案例：登录方式切换</h2><ul><li>用户登录时，可以切换使用用户账号登录还是邮政地址登录。</li></ul><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;body&gt;    &lt;div id&#x3D;&quot;app&quot;&gt;      &lt;span v-if&#x3D;&quot;isUser&quot;&gt;        &lt;label for&#x3D;&quot;username&quot;&gt;用户账号:&lt;&#x2F;label&gt;        &lt;input type&#x3D;&quot;text&quot; id&#x3D;&quot;username&quot; placeholder&#x3D;&quot;用户账号&quot;&gt;      &lt;&#x2F;span&gt;      &lt;span v-else&gt;        &lt;label for&#x3D;&quot;email&quot;&gt;用户邮箱:&lt;&#x2F;label&gt;        &lt;input type&#x3D;&quot;text&quot; id&#x3D;&quot;email&quot; placeholder&#x3D;&quot;用户邮箱&quot;&gt;      &lt;&#x2F;span&gt;      &lt;button v-on:click&#x3D;&quot;result&quot;&gt;切换类型&lt;&#x2F;button&gt;    &lt;&#x2F;div&gt;    &lt;script&gt;        var app &#x3D; new Vue(&#123;           el:&#39;#app&#39;,           data:&#123;             isUser:true,           &#125;,           methods:&#123;             result()&#123;               this.isUser&#x3D; !this.isUser             &#125;,           &#125;        &#125;);    &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="案例小问题-——了解"><a href="#案例小问题-——了解" class="headerlink" title="案例小问题 ——了解"></a>案例小问题 ——了解</h2><ul><li><p>小问题：</p><ul><li>如果我们在有输入内容的情况下，切换了类型，我们会发现文字依然显示之前的输入内容。</li><li>但是按照逻辑来讲，我们应该切换到另一个input元素中了。</li><li>为什么会出现这个问题呢？</li></ul></li><li><p>问题解答</p><ul><li>这是因为Vue进行DOM渲染时，出于性能考虑，<span style='color:red'>会尽可能的复用已经存在的元素</span>，而不是重新创建新的元素。</li><li>在上面的案例中，Vue内部会发现原来的input元素不再使用，直接作为else中的input来使用了。</li><li><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-09-21_22-28-44.png"></li></ul></li><li><p>解决方法：</p><ul><li><p>如果我们不需要Vue出现类似重复利用的问题，可以给对应的input添加<span style='color:red;'>key</span></p></li><li><p>并且我们需要保证key的不同</p></li><li><pre><code class="vue">&lt;span v-if=&quot;isUser&quot;&gt;       &lt;label for=&quot;username&quot;&gt;用户账号:&lt;/label&gt;       &lt;input type=&quot;text&quot; id=&quot;username&quot; placeholder=&quot;用户账号&quot; key=&quot;a&quot;&gt;     &lt;/span&gt;     &lt;span v-else&gt;       &lt;label for=&quot;email&quot;&gt;用户邮箱:&lt;/label&gt;       &lt;input type=&quot;text&quot; id=&quot;email&quot; placeholder=&quot;用户邮箱&quot; key=&quot;b&quot;&gt;     &lt;/span&gt;<pre class="line-numbers language-none"><code class="language-none">##### 2.4.4 v-show  &amp;&amp; v-show与v-if的对比 ——了解* v-show的用法和v-if非常的相似，也用于决定一个元素是否渲染：* **v-if和v-show的对比**  * v-if和v-show都可以决定一个元素是否渲染，那么开发中我们如何选择呢？    * v-if当条件为false时，压根不会有对应的元素的display属性设置为none而已。    * v-show当条件为false时，仅仅是将元素的display属性设置为none而已    * ~~~vue      &lt;body&gt;          &lt;div id&#x3D;&quot;app&quot;&gt;          &lt;!-- v-if :  当条件为false时，包含v-if指令的元素，根本就不会存在dom中--&gt;          &lt;h2 v-if&#x3D;&quot;isShow&quot; id&#x3D;&quot;aaa&quot;&gt;&#123;&#123; message &#125;&#125;&lt;&#x2F;h2&gt;                &lt;!-- v-show：当条件为false时，v-show只是给我们的元素添加一个行内样式：display:none;--&gt;          &lt;h2 v-show&#x3D;&quot;isShow&quot; id&#x3D;&quot;bbb&quot;&gt;&#123;&#123; message &#125;&#125;&lt;&#x2F;h2&gt;          &lt;&#x2F;div&gt;          &lt;script&gt;              var app &#x3D; new Vue(&#123;                 el:&#39;#app&#39;,                 data:&#123;                   message:&#39;你好啊&#39;,                   isShow:true,                 &#125;,                 methods:&#123;&#125;              &#125;);          &lt;&#x2F;script&gt;      &lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>* ![]( http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-09-21_22-44-00.png)</code></pre></li><li><p>如何选择呢？</p><ul><li>当需要在显示与隐藏之间切换很频繁时，使用v-show</li><li>当只有一次切换时，使用v-if</li></ul></li></ul></li></ul><h3 id="2-5-循环遍历-v-for-——掌握"><a href="#2-5-循环遍历-v-for-——掌握" class="headerlink" title="2.5 循环遍历 v-for ——掌握"></a>2.5 循环遍历 v-for ——掌握</h3><h5 id="2-5-1-v-for遍历数组"><a href="#2-5-1-v-for遍历数组" class="headerlink" title="2.5.1 v-for遍历数组"></a>2.5.1 v-for遍历数组</h5><ul><li>当我们有一组数据需要进行渲染时，我们就可以使用v-for来完成<ul><li>格式如下：item in item的形式</li></ul></li><li>如果在遍历的过程中不需要使用索引值<ul><li>v-for&#x3D;“movie in movie”</li><li>依次从movies中取出movie,并且在元素的内容中，我们可以使用Mustache语法，来使用movie</li></ul></li><li>如果在遍历的过程中，我们需要拿到元素在数组中的索引值呢？<ul><li>语法格式：v-for&#x3D;(item,index) in items</li><li>其中的index就代表了取出的item在原数组的索引值。</li></ul></li></ul><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;body&gt;    &lt;div id&#x3D;&quot;app&quot;&gt;      &lt;ul&gt;        &lt;li v-for&#x3D;&quot;(item,index) in number&quot;&gt;&#123;&#123; item &#125;&#125; 获取的索引值为&#123;&#123; index &#125;&#125;&lt;&#x2F;li&gt;      &lt;&#x2F;ul&gt;    &lt;&#x2F;div&gt;    &lt;script&gt;        var app &#x3D; new Vue(&#123;           el:&#39;#app&#39;,           data:&#123;             number:[&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;],           &#125;,           methods:&#123;&#125;        &#125;);    &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2-5-2-v-for-遍历对象"><a href="#2-5-2-v-for-遍历对象" class="headerlink" title="2.5.2 v-for 遍历对象"></a>2.5.2 v-for 遍历对象</h5><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;body&gt;    &lt;div id&#x3D;&quot;app&quot;&gt;    &lt;!-- 1.在遍历对象的过程中，如果只是获取一个值，那么获取的是value --&gt;    &lt;ul&gt;      &lt;li v-for&#x3D;&quot;item in info&quot;&gt;&#123;&#123; item &#125;&#125;&lt;&#x2F;li&gt;    &lt;&#x2F;ul&gt;    &lt;!-- 2.获取key和value  (value,key) --&gt;    &lt;ul&gt;      &lt;li v-for&#x3D;&quot;(value,key) in info&quot;&gt;&#123;&#123; value &#125;&#125;-&#123;&#123; key &#125;&#125;&lt;&#x2F;li&gt;    &lt;&#x2F;ul&gt;    &lt;!-- 3.获取key和value和index  --&gt;    &lt;ul&gt;      &lt;li v-for&#x3D;&quot;(value,key,index) in info&quot;&gt;&#123;&#123; value &#125;&#125;-&#123;&#123; key &#125;&#125;-&#123;&#123; index &#125;&#125;&lt;&#x2F;li&gt;    &lt;&#x2F;ul&gt;    &lt;&#x2F;div&gt;    &lt;script&gt;        var app &#x3D; new Vue(&#123;           el:&#39;#app&#39;,           data:&#123;             info:&#123;               name:&#39;why&#39;,               age:12,               height:1.88,             &#125;,           &#125;,           methods:&#123;&#125;        &#125;);    &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-09-22_08-53-29.png"></p><h5 id="2-5-3-v-for使用过程绑定key和不绑定key的区别-——了解-（提高数据插入性能，涉及数据结构）"><a href="#2-5-3-v-for使用过程绑定key和不绑定key的区别-——了解-（提高数据插入性能，涉及数据结构）" class="headerlink" title="2.5.3 v-for使用过程绑定key和不绑定key的区别 ——了解  （提高数据插入性能，涉及数据结构）"></a>2.5.3 v-for使用过程绑定key和不绑定key的区别 ——了解  （提高数据插入性能，涉及数据结构）</h5><ul><li>key的作用主要是为了高效的更新虚拟DOM</li><li><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-09-22_09-36-24.png"></li></ul><h5 id="2-5-4-数组中的那些方法是响应"><a href="#2-5-4-数组中的那些方法是响应" class="headerlink" title="2.5.4 数组中的那些方法是响应"></a>2.5.4 数组中的那些方法是响应</h5><ul><li>因为Vue是响应式的，所以当数据发生变化时，Vue会自动检测数据变换，视图会发生对应的更新</li><li>Vue中包含了一组观察数组编译的方法，使用它们改变数组也会触发视图的更新。<ul><li>push()</li><li>pop()</li><li>shift()</li><li>unshift()</li><li>splice()     —— 作用：删除元素  &#x2F;  插入元素  &#x2F;  添加元素</li><li>sort()</li><li>reverse()</li></ul></li></ul><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;body&gt;    &lt;div id&#x3D;&quot;app&quot;&gt;    &lt;ul&gt;      &lt;li v-for&#x3D;&quot;item in letters&quot;&gt;&#123;&#123; item &#125;&#125;&lt;&#x2F;li&gt;    &lt;&#x2F;ul&gt;    &lt;button v-on:click&#x3D;&quot;btnClick()&quot;&gt;push按钮&lt;&#x2F;button&gt;    &lt;button v-on:click&#x3D;&quot;btnClickOne()&quot;&gt;通过索引值修改数组中的元素按钮-不是响应式&lt;&#x2F;button&gt;    &lt;button v-on:click&#x3D;&quot;btnClickTwo()&quot;&gt;pop按钮&lt;&#x2F;button&gt;    &lt;button v-on:click&#x3D;&quot;btnClickThree()&quot;&gt;shift按钮&lt;&#x2F;button&gt;    &lt;button v-on:click&#x3D;&quot;btnClickFour()&quot;&gt;unshift按钮&lt;&#x2F;button&gt;    &lt;button v-on:click&#x3D;&quot;btnClickFive()&quot;&gt;splice按钮&lt;&#x2F;button&gt;    &lt;button v-on:click&#x3D;&quot;btnClickSix()&quot;&gt;sort按钮&lt;&#x2F;button&gt;    &lt;button v-on:click&#x3D;&quot;btnClickSeven()&quot;&gt;sort按钮&lt;&#x2F;button&gt;    &lt;&#x2F;div&gt;    &lt;script&gt;        var app &#x3D; new Vue(&#123;           el:&#39;#app&#39;,           data:&#123;            letters: [&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;,&quot;E&quot;],           &#125;,           methods:&#123;             btnClick()&#123;               &#x2F;&#x2F; 1.push 方法              &#x2F;&#x2F;this.letters.push(&#39;aaa&#39;);              this.letters.push(&#39;aaa&#39;,&#39;bbb&#39;,&#39;ccc&#39;);             &#125;,             btnClickOne()&#123;              &#x2F;&#x2F; 2.通过索引值修改数组中的元素 ———————————————— 这是不响应式的              this.letters[0]&#x3D;&#39;aaa&#39;;             &#125;,             btnClickTwo()&#123;               &#x2F;&#x2F;3.pop() :删除数组中的最后一个元素               this.letters.pop();             &#125;,             btnClickThree()&#123;               &#x2F;&#x2F;4.shift() :删除数组中的第一个元素               this.letters.shift();             &#125;,             btnClickFour()&#123;               &#x2F;&#x2F;4.unshift() :在数组中的前面添加元素               this.letters.unshift(&#39;aaa&#39;,&#39;nb&#39;,&#39;ccc&#39;);             &#125;,             btnClickFive()&#123;               &#x2F;&#x2F;5. splice作用: 删除元素&#x2F;插入元素&#x2F;替换元素               &#x2F;&#x2F;如果就一个参数，就删除后面所有的元素              &#x2F;*  this.letters.splice(1); *&#x2F;               &#x2F;&#x2F;删除元素: 第二个参数传入你要删除几个元素              &#x2F;*  this.letters.splice(1,1); *&#x2F;               &#x2F;&#x2F;替换 —-------第二个参数，表示我们要替换几个元素(如果没有传，就删除后面所有的元素)               &#x2F;* this.letters.splice(1,3,&#39;m&#39;,&#39;n&#39;,&#39;l&#39;,&#39;x&#39;); *&#x2F;               &#x2F;&#x2F;插入 —-------第二个参数，传入0，并且后面跟上要插入的元素               this.letters.splice(1,0,&#39;m&#39;,&#39;x&#39;);             &#125;,btnClickSix()&#123;               &#x2F;&#x2F; 6.排序               this.letters.sort()             &#125;,btnClickSeven()&#123;               &#x2F;&#x2F; 7.数组反转               this.letters.reverse()             &#125;           &#125;        &#125;);    &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="案例：图书购物车"><a href="#案例：图书购物车" class="headerlink" title="案例：图书购物车"></a>案例：图书购物车</h2><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-09-22_18-53-06.png"></p><ul><li><p>运用到了v-if    v-on   v-for </p></li><li><p>扩展：过滤器   <span style='color:red;'>filters</span></p><ul><li><!-- 什么是过滤器？ --><!-- | 过滤器会自动把管道（就是"|"这个动西）前面的元素作为第一个参数传入 --></li></ul></li><li><p><button disabled="disabled">不能点击</button></p></li><li><p>for的三种方法：</p><ul><li><p>基本使用for循环</p></li><li><p><code>for(let i in this.books)</code></p></li><li><p><code>for(let item of this.books)</code></p></li><li><p>扩展：reduce     </p></li><li><p>~~~js<br>totalPrice(){<br>  return this.books.reduce(function(preValuse,book){<br>    return preValuse + book.price * book.count<br>  },0);<br>}</p><pre class="line-numbers language-none"><code class="language-none">* [1,2,3,4].splice(1,1);~~~html&lt;html lang&#x3D;&quot;en&quot;&gt;&lt;head&gt;  &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;  &lt;title&gt;Document&lt;&#x2F;title&gt;  &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;.&#x2F;style.css&quot;&gt;   &lt;script src&#x3D;&quot;..&#x2F;js&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;  &lt;&#x2F;head&gt;&lt;body&gt;&lt;div id&#x3D;&quot;app&quot;&gt;  &lt;div v-if&#x3D;&quot;books.length&quot;&gt;  &lt;table&gt;    &lt;thead&gt;      &lt;tr&gt;        &lt;th&gt;&lt;&#x2F;th&gt;        &lt;th&gt;书籍名称&lt;&#x2F;th&gt;        &lt;th&gt;出版日期&lt;&#x2F;th&gt;        &lt;th&gt;购买数量&lt;&#x2F;th&gt;        &lt;th&gt;价格&lt;&#x2F;th&gt;        &lt;th&gt;操作&lt;&#x2F;th&gt;      &lt;&#x2F;tr&gt;    &lt;&#x2F;thead&gt;    &lt;tbody&gt;      &lt;tr v-for&#x3D;&quot;(item,index) in books&quot;&gt;        &lt;td&gt;&#123;&#123; item.id &#125;&#125;&lt;&#x2F;td&gt;        &lt;td&gt;&#123;&#123; item.name &#125;&#125;&lt;&#x2F;td&gt;        &lt;td&gt;&#123;&#123; item.data &#125;&#125;&lt;&#x2F;td&gt;        &lt;!-- 什么是过滤器？ --&gt;        &lt;!-- | 过滤器会自动把管道（就是&quot;|&quot;这个动西）前面的元素作为第一个参数传入 --&gt;        &lt;td&gt;&#123;&#123; item.price | showPrice &#125;&#125;&lt;&#x2F;td&gt;        &lt;td&gt;          &lt;button v-on:click&#x3D;&quot;add(index)&quot;&gt;+&lt;&#x2F;button&gt;            &#123;&#123;item.count&#125;&#125;          &lt;button v-on:click&#x3D;&quot;subtract(index)&quot; v-bind:disabled&#x3D;&quot;item.count &lt;&#x3D; 1&quot;&gt;-&lt;&#x2F;button&gt;        &lt;&#x2F;td&gt;        &lt;td&gt;          &lt;button @click&#x3D;&quot;removeHandler(index)&quot;&gt;移除&lt;&#x2F;button&gt;        &lt;&#x2F;td&gt;      &lt;&#x2F;tr&gt;    &lt;&#x2F;tbody&gt;  &lt;&#x2F;table&gt;   &lt;&#x2F;div&gt;  &lt;h2 v-else&gt;购物车为null&lt;&#x2F;h2&gt;  &lt;button disabled&#x3D;&quot;disabled&quot;&gt;不能点击&lt;&#x2F;button&gt;  &lt;h2&gt;总价格:&#123;&#123; totalPrice &#125;&#125;&lt;&#x2F;h2&gt; &lt;&#x2F;div&gt;&lt;script src&#x3D;&quot;.&#x2F;main.js&quot;&gt;&lt;&#x2F;script&gt;&lt;&#x2F;body&gt;&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">table</span><span class="token punctuation">&#123;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #e9e9e9<span class="token punctuation">;</span>  <span class="token property">border-collapse</span><span class="token punctuation">:</span> collapse<span class="token punctuation">;</span>  <span class="token property">border-spacing</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">th,td</span><span class="token punctuation">&#123;</span>  <span class="token property">padding</span><span class="token punctuation">:</span>8px 10px<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #e9e9e9<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">th</span><span class="token punctuation">&#123;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #f7f7f7<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #5c6b77<span class="token punctuation">;</span>  <span class="token property">font-weight</span><span class="token punctuation">:</span> 600<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> app<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">'#app'</span><span class="token punctuation">,</span>  <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">books</span><span class="token operator">:</span><span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>        <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'&lt;&lt; 算法导论 >>'</span><span class="token punctuation">,</span>        <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token string">'2000-9'</span><span class="token punctuation">,</span>        <span class="token literal-property property">price</span><span class="token operator">:</span><span class="token number">85.00</span><span class="token punctuation">,</span>        <span class="token literal-property property">count</span><span class="token operator">:</span><span class="token number">1</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>        <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'&lt;&lt; 算法导论 >>'</span><span class="token punctuation">,</span>        <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token string">'2000-9'</span><span class="token punctuation">,</span>        <span class="token literal-property property">price</span><span class="token operator">:</span><span class="token number">85.00</span><span class="token punctuation">,</span>        <span class="token literal-property property">count</span><span class="token operator">:</span><span class="token number">1</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span>        <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'&lt;&lt; 算法导论 >>'</span><span class="token punctuation">,</span>        <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token string">'2000-9'</span><span class="token punctuation">,</span>        <span class="token literal-property property">price</span><span class="token operator">:</span><span class="token number">85.00</span><span class="token punctuation">,</span>        <span class="token literal-property property">count</span><span class="token operator">:</span><span class="token number">1</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span>        <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'&lt;&lt; 算法导论 >>'</span><span class="token punctuation">,</span>        <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token string">'2000-9'</span><span class="token punctuation">,</span>        <span class="token literal-property property">price</span><span class="token operator">:</span><span class="token number">85.00</span><span class="token punctuation">,</span>        <span class="token literal-property property">count</span><span class="token operator">:</span><span class="token number">1</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">,</span>        <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'&lt;&lt; 算法导论 >>'</span><span class="token punctuation">,</span>        <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token string">'2000-9'</span><span class="token punctuation">,</span>        <span class="token literal-property property">price</span><span class="token operator">:</span><span class="token number">85.00</span><span class="token punctuation">,</span>        <span class="token literal-property property">count</span><span class="token operator">:</span><span class="token number">1</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>    <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>books<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>count<span class="token operator">++</span>     <span class="token comment">/* this.books[0].count++ */</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function">subtract</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>books<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>count<span class="token operator">--</span>    <span class="token comment">/*  this.books[0].count-- */</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">/* getFinalPrice(price)&#123;      return '￥'+ price    &#125; */</span>    <span class="token function">removeHandler</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">computed</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>    <span class="token function">totalPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token comment">//1.普通的for循环</span>     <span class="token comment">/*  let totalPrice = 0;      for(let i=0;i&lt;this.books.length;i++)&#123;        totalPrice+=this.books[i].price * this.books[i].count      &#125;      return totalPrice; */</span>      <span class="token comment">//2.for (let i in this.books)</span>      <span class="token comment">/* let totalPrice = 0;      for(let i in this.books)&#123;        console.log(i);        totalPrice+=this.books[i].price * this.books[i].count      &#125;      return totalPrice; */</span>      <span class="token comment">//3.for(let item of this.books)</span>      <span class="token keyword">let</span> totalPrice <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> <span class="token keyword">this</span><span class="token punctuation">.</span>books<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>         console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>        totalPrice<span class="token operator">+=</span>item<span class="token punctuation">.</span>price <span class="token operator">*</span> item<span class="token punctuation">.</span>count      <span class="token punctuation">&#125;</span>      <span class="token keyword">return</span> totalPrice<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">filters</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>    <span class="token function">showPrice</span><span class="token punctuation">(</span><span class="token parameter">price</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token string">'￥'</span><span class="token operator">+</span> price<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="扩展-：高阶函数-filter、map、reduce-——函数编程-——重点"><a href="#扩展-：高阶函数-filter、map、reduce-——函数编程-——重点" class="headerlink" title="扩展 ：高阶函数 filter、map、reduce  ——函数编程 ——重点"></a>扩展 ：高阶函数 filter、map、reduce  ——函数编程 ——重点</h2><ul><li>箭头函数</li><li>这是链式，算个重点把：<code>let total = nums.filter(n =&gt; n &lt; 100).map(n =&gt; n * 2).reduce((pre,n) =&gt; pre + n)</code></li><li><code>console.log(total);</code></li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//学习高阶函数: filter/map/reduce</span>    <span class="token comment">/* filter:中的回调函数有一个要求:必须返回一个boolean值       true: 当返回true时，函数内部会自动将这次回调的n加入到新的数组中       false: 当返回false时，函数内部会过滤掉这次的n     */</span>     <span class="token keyword">const</span> nums<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> newNumsFilter<span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> n <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newNumsFilter<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//map函数的使用</span>    <span class="token keyword">let</span> newNumsMap<span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> n <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newNumsMap<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//reduce函数的使用</span>    <span class="token comment">//reduce作用对数组中所有的内容进行汇总(相加)</span>    <span class="token keyword">let</span> newNumsReduce <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">preValue<span class="token punctuation">,</span>n</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>n      <span class="token keyword">return</span> preValue <span class="token operator">+</span> n<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newNumsReduce<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//第一次：preValue为0 n为20</span>    <span class="token comment">//第二次：preValue为20 n为40</span>    <span class="token comment">//第三次：preValue为60 n为80</span>    <span class="token comment">//第四次：preValue为140 n为100</span>    <span class="token keyword">let</span> command <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> n <span class="token operator">&lt;</span> <span class="token number">100</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> n<span class="token operator">*</span><span class="token number">2</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">preValue<span class="token punctuation">,</span>n</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> preValue<span class="token operator">+</span>n    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//1.需求，取出所有小于100的数字</span>     <span class="token keyword">let</span> newNums<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>     <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> nums<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token keyword">if</span><span class="token punctuation">(</span>item <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        newNums<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>     <span class="token comment">//2.需求：将所有小于100的数字进行转化：全部*2</span>     <span class="token keyword">let</span> newNums2<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>     <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> nums<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token keyword">if</span><span class="token punctuation">(</span>item <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        newNums2<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-09-24_10-04-59.png"></p><h3 id="2-6-表单绑定-v-model-——掌握"><a href="#2-6-表单绑定-v-model-——掌握" class="headerlink" title="2.6 表单绑定 v-model ——掌握"></a>2.6 表单绑定 v-model ——掌握</h3><ul><li>表单控件在实际开发中是非常常见的。特别是对于用户信息的提交，需要大量的表单。</li><li>Vue中使用v-model指令来实现表单元素和数据的双向绑定</li></ul><h5 id="2-6-1-v-model的基本使用"><a href="#2-6-1-v-model的基本使用" class="headerlink" title="2.6.1 v-model的基本使用"></a>2.6.1 v-model的基本使用</h5><ul><li>案例的解析<ul><li>当我们在输入内容时</li><li>因为input中的v-model绑定了message,所以会实时将输入的内容传递给message，message发生了改变。</li><li>当message发生改变时，因为上面我们使用Mustache语法，将message的值插入到DOM中，所以DOM会发生响应的改变。</li><li>所以，通过v-model实现了双向的绑定</li></ul></li><li>当然，我们也可以将v-model用于textarea</li></ul><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;body&gt;    &lt;div id&#x3D;&quot;app&quot;&gt;&lt;!-- 当input里的message变动时候，h2标签里的&#123;&#123; message &#125;&#125;也会变动 --&gt;      &lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;message&quot;&gt;          &lt;h2&gt;&#123;&#123; message &#125;&#125;&lt;&#x2F;h2&gt;    &lt;&#x2F;div&gt;    &lt;script&gt;        var app &#x3D; new Vue(&#123;           el:&#39;#app&#39;,           data:&#123;             message:&#39;你好啊&#39;,           &#125;,           methods:&#123;&#125;        &#125;);    &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2-6-2-v-model原理"><a href="#2-6-2-v-model原理" class="headerlink" title="2.6.2 v-model原理"></a>2.6.2 v-model原理</h5><ul><li>v-model其实是一个语法糖，它的背后本质上是包含两个操作：<ul><li>1.v-bind绑定一个value属性</li><li>2.v-on指令给当前元素绑定input事件</li></ul></li></ul><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;body&gt;    &lt;div id&#x3D;&quot;app&quot;&gt;     &lt;!--  &lt;input type&#x3D;&quot;text&quot; v-bind:value&#x3D;&quot;message&quot; v-on:input&#x3D;&quot;valueChange&quot;&gt; --&gt;        &lt;!-- &lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;message&quot;&gt;等同于下面的代码 --&gt;     &lt;input type&#x3D;&quot;text&quot; v-bind:value&#x3D;&quot;message&quot; v-on:input&#x3D;&quot;message &#x3D; $event.target.value&quot;&gt;    &lt;h2&gt;&#123;&#123; message &#125;&#125;&lt;&#x2F;h2&gt;    &lt;&#x2F;div&gt;    &lt;script&gt;        var app &#x3D; new Vue(&#123;           el:&#39;#app&#39;,           data:&#123;             message:&#39;你好啊&#39;,           &#125;,           methods:&#123;             valueChange($event)&#123;              console.log(&quot;---&quot;);              this.message &#x3D; event.target.value;             &#125;           &#125;        &#125;);    &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2-6-3-v-model-结合radio类型"><a href="#2-6-3-v-model-结合radio类型" class="headerlink" title="2.6.3 v-model 结合radio类型"></a>2.6.3 v-model 结合radio类型</h5><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;body&gt;    &lt;div id&#x3D;&quot;app&quot;&gt;    &lt;label for&#x3D;&quot;male&quot;&gt;      &lt;input type&#x3D;&quot;radio&quot; id&#x3D;&quot;male&quot; name&#x3D;&quot;sex&quot; value&#x3D;&quot;男&quot; v-model&#x3D;&quot;sex&quot;&gt;男    &lt;&#x2F;label&gt;    &lt;label for&#x3D;&quot;female&quot;&gt;      &lt;input type&#x3D;&quot;radio&quot; id&#x3D;&quot;female&quot; name&#x3D;&quot;sex&quot; value&#x3D;&quot;女&quot; v-model&#x3D;&quot;sex&quot;&gt;女    &lt;&#x2F;label&gt;    &lt;h2&gt;你的性别是：&#123;&#123; sex &#125;&#125;&lt;&#x2F;h2&gt;    &lt;&#x2F;div&gt;    &lt;script&gt;        var app &#x3D; new Vue(&#123;           el:&#39;#app&#39;,           data:&#123;             message:&#39;你好啊&#39;,             sex:&#39;男&#39;   &#x2F;&#x2F;双向绑定，在这里设置默认值           &#125;,           methods:&#123;&#125;        &#125;);    &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-09-25_11-59-53.png"></p><h5 id="2-6-4-v-model-结和checkbox类型"><a href="#2-6-4-v-model-结和checkbox类型" class="headerlink" title="2.6.4 v-model 结和checkbox类型"></a>2.6.4 v-model 结和checkbox类型</h5><ul><li><p>复选框分为两种情况：单个勾选框和多个勾选框</p><ul><li><p>单个勾选 </p></li><li><p>~~~vue</p><body>    <div id="app">    <label for="protocol">      <input type="checkbox" id="protocol" v-model="ifProtocol">同意协议    </label>    <h2>用户是否同意：</h2>    <button v-bind:disabled="!ifProtocol">按钮</button>    </div>    <script>        var app = new Vue({           el:'#app',           data:{             message:'你好啊',             ifProtocol:false,           },           methods:{}        });    </script></body><pre class="line-numbers language-none"><code class="language-none">* 多个勾选* ~~~vue  &lt;body&gt;      &lt;div id&#x3D;&quot;app&quot;&gt;      &lt;label for&#x3D;&quot;&quot;&gt;        &lt;input type&#x3D;&quot;checkbox&quot;  v-model&#x3D;&quot;hobbies&quot; value&#x3D;&quot;篮球&quot;&gt;篮球        &lt;input type&#x3D;&quot;checkbox&quot;  v-model&#x3D;&quot;hobbies&quot; value&#x3D;&quot;足球&quot;&gt;足球        &lt;input type&#x3D;&quot;checkbox&quot;  v-model&#x3D;&quot;hobbies&quot; value&#x3D;&quot;羽毛球&quot;&gt;羽毛球      &lt;&#x2F;label&gt;      &lt;h2&gt;你的爱好是：&#123;&#123; hobbies &#125;&#125;&lt;&#x2F;h2&gt;      &lt;&#x2F;div&gt;      &lt;script&gt;          var app &#x3D; new Vue(&#123;             el:&#39;#app&#39;,             data:&#123;               message:&#39;你好啊&#39;,               ifProtocol:false,  &#x2F;&#x2F;单选框               hobbies:[],        &#x2F;&#x2F;多选框             &#125;,             methods:&#123;&#125;          &#125;);      &lt;&#x2F;script&gt;  &lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-09-25_12-32-58.png"></p><h5 id="2-6-5-v-model：select"><a href="#2-6-5-v-model：select" class="headerlink" title="2.6.5 v-model：select"></a>2.6.5 v-model：select</h5><ul><li>和checkbox一样，select也分为单选和多选两种情况。</li><li>单选：只能选一个值。<ul><li>v-model绑定的是一个值。</li><li>当我们选中option的一个时，会会将它对应的value赋值到mySelect中</li></ul></li><li>多选：可以选多个值<ul><li>v-model绑定的是一个数组。</li><li>当选中多个值时，就会将选中的option对应的value添加到数组mySelect中</li></ul></li></ul><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;body&gt;    &lt;div id&#x3D;&quot;app&quot;&gt;    &lt;!-- 选择一个 --&gt;    &lt;select name&#x3D;&quot;abc&quot; id&#x3D;&quot;&quot; v-model&#x3D;&quot;fruit&quot;&gt;      &lt;option value&#x3D;&quot;苹果&quot;&gt;苹果&lt;&#x2F;option&gt;      &lt;option value&#x3D;&quot;香蕉&quot;&gt;香蕉&lt;&#x2F;option&gt;      &lt;option value&#x3D;&quot;梨子&quot;&gt;梨子&lt;&#x2F;option&gt;      &lt;option value&#x3D;&quot;小鸡&quot;&gt;小鸡&lt;&#x2F;option&gt;    &lt;&#x2F;select&gt;    &lt;h2&gt;你选择的水果是:&#123;&#123; fruit &#125;&#125; &lt;&#x2F;h2&gt;    &lt;!-- 选择多个 ,记得按Ctrl哦  --&gt;    &lt;select name&#x3D;&quot;abc&quot; id&#x3D;&quot;&quot; v-model&#x3D;&quot;fruits&quot; multiple&gt;      &lt;option value&#x3D;&quot;苹果&quot;&gt;苹果&lt;&#x2F;option&gt;      &lt;option value&#x3D;&quot;香蕉&quot;&gt;香蕉&lt;&#x2F;option&gt;      &lt;option value&#x3D;&quot;梨子&quot;&gt;梨子&lt;&#x2F;option&gt;      &lt;option value&#x3D;&quot;小鸡&quot;&gt;小鸡&lt;&#x2F;option&gt;    &lt;&#x2F;select&gt;    &lt;h2&gt;你选择的水果是:&#123;&#123; fruits &#125;&#125; &lt;&#x2F;h2&gt;    &lt;&#x2F;div&gt;       &lt;script&gt;        var app &#x3D; new Vue(&#123;           el:&#39;#app&#39;,           data:&#123;             message:&#39;你好啊&#39;,             fruit:&#39;苹果&#39;,             fruits:[],           &#125;,           methods:&#123;&#125;        &#125;);    &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-09-25_14-21-28.png"></p><h5 id="2-6-6-值绑定"><a href="#2-6-6-值绑定" class="headerlink" title="2.6.6 值绑定"></a>2.6.6 值绑定</h5><ul><li>真实开发中,这些input的值可能是从网络中获取或定义在data中的，意思是不能写死</li><li>所以我们可以通过v-bind:value动态的给value绑定值</li></ul><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;body&gt;    &lt;div id&#x3D;&quot;app&quot;&gt;    &lt;label  v-for&#x3D;&quot;item in hobbies&quot; :for&#x3D;&quot;item&quot;&gt;      &lt;input type&#x3D;&quot;checkbox&quot; v-bind:value&#x3D;&quot;item&quot; :id&#x3D;&quot;item&quot; v-model&#x3D;&quot;like&quot;&gt;&#123;&#123; item &#125;&#125;    &lt;&#x2F;label&gt;    &lt;h2&gt;你的爱好是：&#123;&#123; like &#125;&#125;&lt;&#x2F;h2&gt;    &lt;&#x2F;div&gt;       &lt;script&gt;        var app &#x3D; new Vue(&#123;           el:&#39;#app&#39;,           data:&#123;             message:&#39;你好啊&#39;,             like:[],             hobbies:[&quot;苹果&quot;,&quot;香蕉&quot;,&quot;梨子&quot;,&quot;小鸡&quot;],           &#125;,           methods:&#123;&#125;        &#125;);    &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-09-25_16-11-36.png"></p><h5 id="2-6-7-v-model的修饰符"><a href="#2-6-7-v-model的修饰符" class="headerlink" title="2.6.7 v-model的修饰符"></a>2.6.7 v-model的修饰符</h5><ul><li>lazy修饰符：“点击才能更新”<ul><li>默认情况下，v-model默认是在input事件中同步输入框的数据的</li><li>也就是说，一旦有数据发生改变对应的data中的数据就会自动发生改变</li><li>lazy修饰符可以让数据在失去焦点或者回车时才会更新</li></ul></li><li>number修饰符：“引用的时候可以避免字符串转化成数字”<ul><li>默认情况下，在输入框中无论我们输入的是字母还是数字，都会被当做字符串类型进行处理</li><li>但是如果我们希望处理的是数字类型，那么最好直接将内容当做数字处理。</li><li>number修饰符可以让在输入框中输入的内容自动转成数字类型</li></ul></li><li>trim修饰符<ul><li>如果输入的内容首尾有很多空格，通常我们希望将其去除</li><li>trim修饰符可以过滤内容左右两边的空格</li></ul></li></ul><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;body&gt;    &lt;div id&#x3D;&quot;app&quot;&gt;            &lt;!-- 修饰符:lazy  --&gt;    &lt;input type&#x3D;&quot;text&quot; v-model.lazy&#x3D;&quot;message&quot;&gt;    &lt;h2&gt;&#123;&#123; message &#125;&#125;&lt;&#x2F;h2&gt;            &lt;!-- 修饰符:number  --&gt;    &lt;input type&#x3D;&quot;number&quot; v-model.number&#x3D;&quot;numberMessage&quot;&gt;    &lt;h2&gt;&#123;&#123; numberMessage &#125;&#125;-&#123;&#123; typeof numberMessage &#125;&#125;&lt;&#x2F;h2&gt;            &lt;!-- 修饰符:trim --&gt;    &lt;input type&#x3D;&quot;text&quot; v-model.trim&#x3D;&quot;name&quot;&gt;    &lt;h2&gt;你的名字:&#123;&#123; name &#125;&#125;&lt;&#x2F;h2&gt;    &lt;&#x2F;div&gt;    &lt;script&gt;        var app &#x3D; new Vue(&#123;           el:&#39;#app&#39;,           data:&#123;             message:&#39;你好啊&#39;,             numberMessage: 0 ,             name:&#39;&#39;,           &#125;,           methods:&#123;&#125;        &#125;);    &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-09-28_15-42-28.png"></p><h2 id="三、组件开发-——-掌握"><a href="#三、组件开发-——-掌握" class="headerlink" title="三、组件开发 —— 掌握"></a>三、组件开发 —— 掌握</h2><h3 id="3-0-什么是组件化？"><a href="#3-0-什么是组件化？" class="headerlink" title="3.0 什么是组件化？"></a>3.0 什么是组件化？</h3><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-09-28_16-10-41.png"></p><h5 id="3-1-0-Vue组件化思想"><a href="#3-1-0-Vue组件化思想" class="headerlink" title="3.1.0 Vue组件化思想"></a>3.1.0 Vue组件化思想</h5><ul><li>组件化是Vue.js中的重要思想<ul><li>它提供了一种抽象，让我们可以开发出一个个独立可复用的小组件来构造我们的应用。</li><li>任何的应用都会抽象成一颗主键树</li><li><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-09-29_21-47-25.png"></li></ul></li><li>组件化思想的应用：<ul><li>有了组件化的思想，我们在之后的开发中就要充分的利用它。</li><li>尽可能的将页面拆分成一个个小的、可复用的组件。</li><li>这样让我们的代码更加方便组织和管理，并且扩展性也很强。</li></ul></li></ul><h5 id="3-2-0-注册组件的基本步骤"><a href="#3-2-0-注册组件的基本步骤" class="headerlink" title="3.2.0 注册组件的基本步骤"></a>3.2.0 注册组件的基本步骤</h5><ul><li><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-09-29_21-55-09.png"></li><li><span style='color:red;'>第一步：创建组件构造器对象</span><ul><li><code>const cpnConstructor= Vue.extend(&#123; template:</code> <div><h2>我是标题</h2></div><code> &#125;)</code></li></ul></li><li><span style='color:red;'>第二步：注册组件</span><ul><li><code>Vue.component(&#39;my-cpn&#39;,cpnConstructor);</code></li></ul></li><li>第三步：使用组件<ul><li><my-cpn></my-cpn></li></ul></li></ul><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;body&gt;    &lt;div id&#x3D;&quot;app&quot;&gt;      &lt;!-- &lt;h2&gt;我是标题&lt;&#x2F;h2&gt;      &lt;h2&gt;我是需要多次使用哦&lt;&#x2F;h2&gt;      &lt;h2&gt;我是需要再次次使用哦&lt;&#x2F;h2&gt;      &lt;h2&gt;我是标题&lt;&#x2F;h2&gt;      &lt;h2&gt;我是需要多次使用哦&lt;&#x2F;h2&gt;      &lt;h2&gt;我是需要再次次使用哦&lt;&#x2F;h2&gt;--&gt;            &lt;!-- 3.使用组件 --&gt;      &lt;my-cpn&gt;&lt;&#x2F;my-cpn&gt;      &lt;my-cpn&gt;&lt;&#x2F;my-cpn&gt;      &lt;my-cpn&gt;&lt;&#x2F;my-cpn&gt;          &lt;&#x2F;div&gt;          &lt;script&gt;      &#x2F;&#x2F;1.创建组件构造器对象      const cpnConstructor&#x3D; Vue.extend(&#123;        template:&#96;          &lt;div&gt;            &lt;h2&gt;我是标题&lt;&#x2F;h2&gt;            &lt;h2&gt;我是需要多次使用哦&lt;&#x2F;h2&gt;            &lt;h2&gt;我是需要再次次使用哦&lt;&#x2F;h2&gt;          &lt;&#x2F;div&gt;&#96;      &#125;);      &#x2F;&#x2F;2.注册组件      Vue.component(&#39;my-cpn&#39;,cpnConstructor);      &#x2F;&#x2F;3.      const app &#x3D; new Vue(&#123;           el:&#39;#app&#39;,           data:&#123;             message:&#39;你好啊&#39;,           &#125;,           methods:&#123;&#125;        &#125;);    &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>注册组件步骤解析<ul><li><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-09-30_13-59-53.png"></li><li><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-09-30_14-02-12.png"></li></ul></li></ul><h5 id="3-3-0-全局组件和局部组件"><a href="#3-3-0-全局组件和局部组件" class="headerlink" title="3.3.0 全局组件和局部组件"></a>3.3.0 全局组件和局部组件</h5><ul><li><p>全局组件</p><ul><li>~~~vue<body>    <div id="app">    <!-- 使用组件 -->    <mycpn></mycpn>    </div><pre><code>&lt;div id=&quot;app2&quot;&gt;  &lt;mycpn&gt;&lt;/mycpn&gt;&lt;/div&gt;&lt;script&gt;  //1.创建组件构造器  const cpnC = Vue.extend(&#123;    template:`      &lt;div&gt;        &lt;h2&gt;我是全局组件&lt;/h2&gt;      &lt;/div&gt;`  &#125;);  //2.注册组件(这是全局组件,意味着可以在多个Vue的实例下面使用)  Vue.component(&#39;mycpn&#39;,cpnC);    const app = new Vue(&#123;       el:&#39;#app&#39;,       data:&#123;&#125;,       methods:&#123;&#125;,    &#125;);    const app2 = new Vue(&#123;      el:&#39;#app2&#39;,      data:&#123;&#125;,      methods:&#123;&#125;,    &#125;);&lt;/script&gt;</code></pre></body><pre class="line-numbers language-none"><code class="language-none">    &lt;span style&#x3D;&#39;color:red;&#39;&gt;&#x2F;&#x2F;疑问：怎么注册的组件才是局部组件了？&lt;&#x2F;span&gt;* 局部组件  * ~~~vue    &lt;body&gt;        &lt;div id&#x3D;&quot;app&quot;&gt;        &lt;!-- 使用组件 --&gt;        &lt;mycpn&gt;&lt;&#x2F;mycpn&gt;        &lt;&#x2F;div&gt;            &lt;div id&#x3D;&quot;app2&quot;&gt;          &lt;mycpn&gt;&lt;&#x2F;mycpn&gt;        &lt;&#x2F;div&gt;            &lt;script&gt;          &#x2F;&#x2F;1.创建组件构造器          const cpnC &#x3D; Vue.extend(&#123;            template:&#96;              &lt;div&gt;                &lt;h2&gt;我是局部组件&lt;&#x2F;h2&gt;              &lt;&#x2F;div&gt;&#96;          &#125;);          &#x2F;&#x2F;疑问：怎么注册的组件才是局部组件了？                const app &#x3D; new Vue(&#123;               el:&#39;#app&#39;,               data:&#123;&#125;,               methods:&#123;&#125;,               components:&#123;                 &#x2F;&#x2F;2.注册组件(这是局部组件,只能在这个定义id的标签下使用)                 &#x2F;&#x2F; cpn使用组件时的标签名                 mycpn:cpnC               &#125;,            &#125;);                const app2 &#x3D; new Vue(&#123;              el:&#39;#app2&#39;,              data:&#123;&#125;,              methods:&#123;&#125;,            &#125;);        &lt;&#x2F;script&gt;    &lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h5 id="3-4-0-父组件和子组件"><a href="#3-4-0-父组件和子组件" class="headerlink" title="3.4.0 父组件和子组件"></a>3.4.0 父组件和子组件</h5><ul><li><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-10-13_18-02-29.png"></p></li><li><p>例子里面<my_cpn2>是父组件，<my_cpn1>是子组件</p></li></ul><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;body&gt;    &lt;div id&#x3D;&quot;app&quot;&gt;     &lt;!--  &lt;my_cpn1&gt;&lt;&#x2F;my_cpn1&gt; --&gt;    &lt;my_cpn2&gt;&lt;&#x2F;my_cpn2&gt;    &lt;&#x2F;div&gt;    &lt;script&gt;      &#x2F;&#x2F;1.创建第一个组件构造器 (子组件)      const cpnC1 &#x3D; Vue.extend(&#123;        template:&#96;        &lt;div&gt;          &lt;h2&gt;我是标题1&lt;&#x2F;h2&gt;        &lt;&#x2F;div&gt;        &#96;,      &#125;)      &#x2F;&#x2F;2.创建第二个组件构造器 （父组件）      const cpnC2 &#x3D; Vue.extend(&#123;        template:&#96;        &lt;div&gt;          &lt;h2&gt;我是标题2&lt;&#x2F;h2&gt;          &lt;my_cpn1&gt;&lt;&#x2F;my_cpn1&gt;        &lt;&#x2F;div&gt;        &#96;,        components: &#123;          my_cpn1:cpnC1,        &#125;      &#125;)    &lt;&#x2F;script&gt;    &lt;script&gt;      &#x2F;&#x2F;  root组件        const app &#x3D; new Vue(&#123;           el:&#39;#app&#39;,           data:&#123;&#125;,           components:&#123;            &#x2F;* my_cpn1:cpnC1, *&#x2F;            my_cpn2:cpnC2,           &#125;,           methods:&#123;&#125;        &#125;);    &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="3-5-0-注册组件的语法糖写法"><a href="#3-5-0-注册组件的语法糖写法" class="headerlink" title="3.5.0 注册组件的语法糖写法"></a>3.5.0 注册组件的语法糖写法</h5><ul><li><p>在上面注册组件的方式，可能会有些繁琐。</p><ul><li>Vue为了简化这个过程，提供了注册的语法糖</li><li><span style="color:red;">主要是省去了调用Vue.extend()的步骤，而是可以直接使用一个对象来代替</span></li></ul></li><li><p>~~~vue</p><body>    <div id="app"><pre><code>  &lt;my_cpn1&gt;&lt;/my_cpn1&gt;  &lt;my_cpn2&gt;&lt;/my_cpn2&gt;&lt;/div&gt;&lt;script&gt;  //1.全局组件注册的语法糖  Vue.component(&#39;my_cpn1&#39;,&#123;    template:`    &lt;div&gt;      &lt;h2&gt;我是全局组件注册的语法糖&lt;/h2&gt;    &lt;/div&gt;    `  &#125;)&lt;/script&gt;&lt;script&gt;    var app = new Vue(&#123;       el:&#39;#app&#39;,       data:&#123;&#125;,       components:&#123;        &#39;my_cpn2&#39;:&#123;          template:`          &lt;div&gt;            &lt;h2&gt;我是局部组件注册的语法糖&lt;/h2&gt;          &lt;/div&gt;          `,        &#125;       &#125;,       methods:&#123;&#125;    &#125;);&lt;/script&gt;</code></pre></body><pre class="line-numbers language-none"><code class="language-none">##### 3.6.0 组件模板抽离的写法* Vue提供了两种方案来定义HTML模板内容：  * 使用script标签  * 使用template标签* ~~~vue  &lt;body&gt;      &lt;div id&#x3D;&quot;app&quot;&gt;      &lt;my_cpn1&gt;&lt;&#x2F;my_cpn1&gt;      &lt;my_cpn2&gt;&lt;&#x2F;my_cpn2&gt;      &lt;&#x2F;div&gt;      &lt;!-- 1.第一种写法 script标签 --&gt;      &lt;script type&#x3D;&quot;text&#x2F;x-template&quot; id&#x3D;&quot;my_cpn1&quot;&gt;        &lt;div&gt;          &lt;h2&gt;全局 我是组件模板抽离  script 的写法&lt;&#x2F;h2&gt;        &lt;&#x2F;div&gt;      &lt;&#x2F;script&gt;      &lt;!-- 2.第二种方法 template标签 --&gt;      &lt;template id&#x3D;&quot;my_cpn2&quot;&gt;        &lt;div&gt;          &lt;h2&gt;局部 我是组件模板抽离 template 的写法&lt;&#x2F;h2&gt;        &lt;&#x2F;div&gt;      &lt;&#x2F;template&gt;        &lt;script&gt;        Vue.component(&#39;my_cpn1&#39;,&#123;          template:&#96;#my_cpn1&#96;        &#125;)      &lt;&#x2F;script&gt;      &lt;script&gt;          var app &#x3D; new Vue(&#123;             el:&#39;#app&#39;,             data:&#123;&#125;,             components:&#123;               &#39;my_cpn2&#39;:&#123;                 template:&#39;#my_cpn2&#39;               &#125;             &#125;,             methods:&#123;&#125;          &#125;);      &lt;&#x2F;script&gt;  &lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h5 id="3-7-0-组件中数据存放问题"><a href="#3-7-0-组件中数据存放问题" class="headerlink" title="3.7.0  组件中数据存放问题"></a>3.7.0  组件中数据存放问题</h5><ul><li>组件可以访问Vue实例数据吗？———— <ul><li>组件是一个单独功能模块的封装：<ul><li>这个模块有属于自己的HTML模板，也应该有属于自己的数据data</li></ul></li><li>组件中的数据是保存在哪里呢？顶层的Vue实例中吗？<ul><li>我们先来测试一下，组件中能不能直接访问Vue实例中的data</li></ul></li></ul></li></ul><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-10-13_21-36-28.png"></p><ul><li>组件自己的数据存放在哪里呢？<ul><li>组件对象也有一个data数据（也可以有methods等属性，下面我们有用到）</li><li>只是这个data属性必须是一个函数</li><li>而且这个函数返回一个对象，对象内部保存着数据</li></ul></li></ul><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;body&gt;    &lt;div id&#x3D;&quot;app&quot;&gt;      &lt;my_cpn&gt;&lt;&#x2F;my_cpn&gt;         &lt;&#x2F;div&gt;        &lt;template id&#x3D;&quot;my_cpn&quot;&gt;      &lt;div&gt;        &lt;h2&gt;组件可以访问Vue实例数据吗？ &#123;&#123; title &#125;&#125;&lt;&#x2F;h2&gt;      &lt;&#x2F;div&gt;    &lt;&#x2F;template&gt;    &lt;script&gt;      Vue.component(&#39;my_cpn&#39;,&#123;        template:&#39;#my_cpn&#39;,        &#x2F;* data:&#123;&#125;,  这里的data不能是对象,它是个有返回值的函数  *&#x2F;        data()&#123;          return&#123;            title:&#39;这样才能拿到&#39;          &#125;        &#125;      &#125;)    &lt;&#x2F;script&gt;    &lt;script&gt;        var app &#x3D; new Vue(&#123;           el:&#39;#app&#39;,           data:&#123;             message:&#39;你好啊&#39;,           &#125;,           components:&#123;            &#39;my_cpn1&#39;:&#123;              template:&#39;#my_cpn1&#39;            &#125;           &#125;,           methods:&#123;&#125;        &#125;);    &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="3-8-0-组件中的data为什么是函数"><a href="#3-8-0-组件中的data为什么是函数" class="headerlink" title="3.8.0 组件中的data为什么是函数"></a>3.8.0 组件中的data为什么是函数</h5><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> a<span class="token operator">=</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'a'</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">abc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token keyword">return</span> a <span class="token punctuation">&#125;</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><code>function abc()&#123; return &#123; name:&#39;a&#39; &#125; &#125;</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>      <span class="token keyword">const</span> obj<span class="token operator">=</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'why'</span><span class="token punctuation">,</span>        <span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">18</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">function</span> <span class="token function">abcd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> obj      <span class="token punctuation">&#125;</span>      <span class="token keyword">let</span> obj_1<span class="token operator">=</span><span class="token function">abcd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token keyword">let</span> obj_2<span class="token operator">=</span><span class="token function">abcd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token keyword">let</span> obj_3<span class="token operator">=</span><span class="token function">abcd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      obj_1<span class="token punctuation">.</span>name<span class="token operator">=</span><span class="token string">'what'</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj_1<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"   "</span><span class="token operator">+</span>obj_2<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* what   what 不同的变量都指向一个对象*/</span>      <span class="token keyword">function</span> <span class="token function">abc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'why'</span><span class="token punctuation">,</span>          <span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">18</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">let</span> obj1 <span class="token operator">=</span> <span class="token function">abc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token keyword">let</span> obj2 <span class="token operator">=</span> <span class="token function">abc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token keyword">let</span> obj3 <span class="token operator">=</span> <span class="token function">abc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      obj1<span class="token punctuation">.</span>name<span class="token operator">=</span><span class="token string">'what'</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"   "</span><span class="token operator">+</span>obj2<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/*what  why 不同的变量指向不同的对象*/</span> <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="需求：将1-0-5计数器封装成一个Vue组件"><a href="#需求：将1-0-5计数器封装成一个Vue组件" class="headerlink" title="需求：将1.0.5计数器封装成一个Vue组件"></a>需求：将1.0.5计数器封装成一个Vue组件</h3><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;body&gt;    &lt;div id&#x3D;&quot;app&quot;&gt;    &lt;my_cpn&gt;&lt;&#x2F;my_cpn&gt;    &lt;my_cpn&gt;&lt;&#x2F;my_cpn&gt;    &lt;my_cpn&gt;&lt;&#x2F;my_cpn&gt;    &lt;&#x2F;div&gt;        &lt;template id&#x3D;&quot;my_cpn&quot;&gt;      &lt;div&gt;我是组件        &lt;h2&gt;我是计数器组件: &#123;&#123; count &#125;&#125;&lt;&#x2F;h2&gt;        &lt;button @click&#x3D;&quot;add()&quot;&gt;+&lt;&#x2F;button&gt;        &lt;button v-on:click&#x3D;&quot;sub()&quot;&gt;-&lt;&#x2F;button&gt;      &lt;&#x2F;div&gt;      &lt;!-- &lt;div&gt;这个div会报错？？？？&lt;&#x2F;div&gt; --&gt;    &lt;&#x2F;template&gt;          &lt;script&gt;      Vue.component(&#39;my_cpn&#39;,&#123;        template:&#39;#my_cpn&#39;,        data()&#123;          return &#123;            count:0,          &#125;        &#125;,        methods:&#123;          add()&#123;            this.count++;          &#125;,          sub()&#123;            this.count--;          &#125;        &#125;      &#125;)    &lt;&#x2F;script&gt;    &lt;script&gt;        var app &#x3D; new Vue(&#123;           el:&#39;#app&#39;,           data:&#123;             message:&#39;你好啊&#39;,             count:0,           &#125;,           methods:&#123;&#125;        &#125;);    &lt;&#x2F;script&gt;&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="3-9-0-父子组件通信-—-父传子-——重点-properties-属性"><a href="#3-9-0-父子组件通信-—-父传子-——重点-properties-属性" class="headerlink" title="3.9.0 父子组件通信 — 父传子 ——重点 properties(属性)"></a>3.9.0 父子组件通信 — 父传子 ——重点 properties(属性)</h5><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-10-14_14-58-55.png"></p><h6 id="3-9-1-props基本用法"><a href="#3-9-1-props基本用法" class="headerlink" title="3.9.1 props基本用法"></a>3.9.1 props基本用法</h6><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-02_15-50-16.png"></p><ul><li>在组件中，使用选项props来声明需要从父级接收到的数据</li><li>props的值有两种方式：<ul><li>方式一：字符串数组，数组中的字符串就是传递时的名称。-  开发时不常用</li><li>方式二：<span style="color:red;">对象，对象可以设置传递时的类型，也可以设置默认值等。</span> -  开发时常用 - 见 3.9.2</li></ul></li></ul><h6 id="3-9-2-props数据验证-重点"><a href="#3-9-2-props数据验证-重点" class="headerlink" title="3.9.2 props数据验证 - 重点"></a>3.9.2 props数据验证 - 重点</h6><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-02_15-56-21.png"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ie=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>父传子<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../js/vue.js<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span> <span class="token attr-name">:cmessage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>message<span class="token punctuation">"</span></span> <span class="token attr-name">:cmovies</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>movies<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cpn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item in cmovies<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123; item &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>&#123;&#123; cmovies &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123; cmessage &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// 父传子：props</span>        <span class="token comment">/* const cpn=&#123;            template:"#cpn",            props:['cmovies','cmessage'],            data()&#123;                return&#123;                &#125;            &#125;,            methods:&#123;            &#125;        &#125; */</span>        <span class="token comment">// 第二种写法： 数据验证 </span>        <span class="token keyword">const</span> cpn <span class="token operator">=</span> <span class="token punctuation">&#123;</span>          <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token string">"#cpn"</span><span class="token punctuation">,</span>                  <span class="token literal-property property">props</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>          <span class="token comment">//1.限制类型</span>           <span class="token comment">/*  cmovies:Array,            cmessage:String, */</span>                    <span class="token comment">//2.提供一些默认值</span>          <span class="token literal-property property">cmessage</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">type</span><span class="token operator">:</span>String<span class="token punctuation">,</span>            <span class="token keyword">default</span><span class="token operator">:</span><span class="token string">'aaaaaa'</span><span class="token punctuation">,</span>            <span class="token literal-property property">required</span><span class="token operator">:</span><span class="token boolean">true</span>    <span class="token comment">//设置必传值</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token comment">// 类型是对象或者数组时，默认值必须时一个函数</span>          <span class="token literal-property property">cmovies</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">type</span><span class="token operator">:</span>Array<span class="token punctuation">,</span>            <span class="token comment">//default:[]</span>            <span class="token comment">//Invalid default value for prop "cmovies": Props with type Object/Array must use a factory function to return the default value.</span>            <span class="token keyword">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>              <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>                          <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>           <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">'#app'</span><span class="token punctuation">,</span>           <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>             <span class="token literal-property property">message</span><span class="token operator">:</span><span class="token string">'你好啊'</span><span class="token punctuation">,</span>             <span class="token literal-property property">movies</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">'海王'</span><span class="token punctuation">,</span><span class="token string">'海'</span><span class="token punctuation">,</span><span class="token string">'海之子'</span><span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>           <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>           <span class="token literal-property property">components</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>            cpn           <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="3-9-3-如果props-命名是驼峰，那么上面v-bind绑定时要用"><a href="#3-9-3-如果props-命名是驼峰，那么上面v-bind绑定时要用" class="headerlink" title="3.9.3 如果props 命名是驼峰，那么上面v-bind绑定时要用 -"></a>3.9.3 如果props 命名是驼峰，那么上面v-bind绑定时要用 -</h6><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-02_16-40-46.png"></p><h5 id="3-10-0-父子组价通信-—-子传父-自定义事件"><a href="#3-10-0-父子组价通信-—-子传父-自定义事件" class="headerlink" title="3.10.0 父子组价通信 — 子传父(自定义事件)"></a>3.10.0 父子组价通信 — 子传父(自定义事件)</h5><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-02_17-27-18.png"></p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-02_19-48-42.png"></p><p>老师的GitHub代码：<a href="https://github.com/coderwhy/HYMiniMall">https://github.com/coderwhy/HYMiniMall</a> 地址，以后我也要这么np</p><h3 id="案例-：父子组件通信案例（涉及-父-gt-子，子-gt-父-，v-model的原理）-画了一个小时-我去"><a href="#案例-：父子组件通信案例（涉及-父-gt-子，子-gt-父-，v-model的原理）-画了一个小时-我去" class="headerlink" title="案例 ：父子组件通信案例（涉及 父-&gt;子，子-&gt;父 ，v-model的原理） - 画了一个小时 我去"></a>案例 ：父子组件通信案例（涉及 父-&gt;子，子-&gt;父 ，v-model的原理） - 画了一个小时 我去</h3><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-02_22-54-33.png"></p><h3 id="案例-父子通信案例-用watch就比较简单。。。"><a href="#案例-父子通信案例-用watch就比较简单。。。" class="headerlink" title="案例  父子通信案例 - 用watch就比较简单。。。"></a>案例  父子通信案例 - 用watch就比较简单。。。</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ie=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../js/vue.js<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- &lt;cpn :number1="num1" :number2="num2">&lt;/cpn> --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span> <span class="token attr-name">:number1</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>num1<span class="token punctuation">"</span></span> <span class="token attr-name">:number2</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>num2<span class="token punctuation">"</span></span> <span class="token attr-name">@num1change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>num1change<span class="token punctuation">"</span></span> <span class="token attr-name">@num2change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>num2change<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cpn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- Avoid mutating a prop directly since the value will be overwritten whenever the parent component re-renders. Instead, use a data or computed property based on the prop's value. Prop being mutated: "number1" --></span>            <span class="token comment">&lt;!-- &lt;input type="text" v-model="dnumber1"> --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dnumber1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            props : &#123;&#123; number1 &#125;&#125;            data : &#123;&#123; dnumber1 &#125;&#125;           <span class="token comment">&lt;!--  &lt;input type="text" v-model="dnumber2"> --></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dnumber2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            props : &#123;&#123; number2 &#125;&#125;            data : &#123;&#123; dnumber2 &#125;&#125;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">const</span> cpn <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token string">"#cpn"</span><span class="token punctuation">,</span>        <span class="token literal-property property">props</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">number1</span><span class="token operator">:</span>Number<span class="token punctuation">,</span>            <span class="token literal-property property">number2</span><span class="token operator">:</span>Number        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">dnumber1</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>number1<span class="token punctuation">,</span>                <span class="token literal-property property">dnumber2</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>number2<span class="token punctuation">,</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token literal-property property">watch</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>            <span class="token function">dnumber1</span><span class="token punctuation">(</span><span class="token parameter">newValue</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>dnumber2 <span class="token operator">=</span> newValue <span class="token operator">*</span> <span class="token number">100</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">'num1change'</span><span class="token punctuation">,</span>newValue<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function">dnumber2</span><span class="token punctuation">(</span><span class="token parameter">newValue</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>dnumber1 <span class="token operator">=</span> newValue <span class="token operator">/</span> <span class="token number">100</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">'num2change'</span><span class="token punctuation">,</span>newValue<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>           <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">'#app'</span><span class="token punctuation">,</span>           <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>               <span class="token literal-property property">num1</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>               <span class="token literal-property property">num2</span><span class="token operator">:</span> <span class="token number">0</span>           <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>           <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>               <span class="token function">num1change</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>num1<span class="token operator">=</span><span class="token function">parseInt</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>               <span class="token function">num2change</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>num2<span class="token operator">=</span><span class="token function">parseInt</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>               <span class="token punctuation">&#125;</span>           <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>           <span class="token literal-property property">components</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>               cpn           <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="3-11-0-父子组件的访问方式"><a href="#3-11-0-父子组件的访问方式" class="headerlink" title="3.11.0 父子组件的访问方式"></a>3.11.0 父子组件的访问方式</h5><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-03_08-57-28.png"></p><h6 id="3-11-1-父访问子-children-一般不用-主要用到了下标就不方便"><a href="#3-11-1-父访问子-children-一般不用-主要用到了下标就不方便" class="headerlink" title="3.11.1 父访问子 - $children - 一般不用 - 主要用到了下标就不方便"></a>3.11.1 父访问子 - $children - 一般不用 - 主要用到了下标就不方便</h6><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-03_10-02-37.png"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btnClick<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cpn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>我是子组键<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">const</span> cpn <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token string">"#cpn"</span><span class="token punctuation">,</span>            <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>               <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'我是子组件'</span><span class="token punctuation">,</span>               <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>                <span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>           <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">'#app'</span><span class="token punctuation">,</span>           <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>                       <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>           <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>               <span class="token function">btnClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$children<span class="token punctuation">)</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>$children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span>                               <span class="token punctuation">&#125;</span>           <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>           <span class="token literal-property property">components</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>               cpn           <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="3-11-2-父访问子-refs-主要用这个-——-重点"><a href="#3-11-2-父访问子-refs-主要用这个-——-重点" class="headerlink" title="3.11.2 父访问子 - $refs - 主要用这个 —— 重点"></a>3.11.2 父访问子 - $refs - 主要用这个 —— 重点</h6><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-03_10-30-40.png"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>aaa<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btnClick<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cpn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>我是子组键<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">const</span> cpn <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token string">"#cpn"</span><span class="token punctuation">,</span>            <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>               <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'我是子组件'</span><span class="token punctuation">,</span>               <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>                <span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>           <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">'#app'</span><span class="token punctuation">,</span>           <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>                       <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>           <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>               <span class="token function">btnClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token comment">//2.refs => 对象类型，默认是一个空的对象 ref='bbb'</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>aaa<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>aaa<span class="token punctuation">.</span><span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token punctuation">&#125;</span>           <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>           <span class="token literal-property property">components</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>               cpn           <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="3-11-2-子访问父-parent-root"><a href="#3-11-2-子访问父-parent-root" class="headerlink" title="3.11.2 子访问父 - parent - root"></a>3.11.2 子访问父 - parent - root</h6><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-03_10-58-25.png"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ie=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../js/vue.js<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>我是跟组件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cpn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>我是cpn组件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn_in</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn_in</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cpn_in<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>            我是cpn的子组键            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btnClick<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>子组件里的按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">const</span> cpn_in <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token string">"#cpn_in"</span><span class="token punctuation">,</span>            <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>                <span class="token function">btnClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token comment">//1.访问父组件$parent</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$parent<span class="token punctuation">)</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$parent<span class="token punctuation">.</span>name<span class="token punctuation">)</span>                                        <span class="token comment">//2.访问根组件</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$root<span class="token punctuation">)</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$root<span class="token punctuation">.</span>name<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">const</span> cpn <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token string">"#cpn"</span><span class="token punctuation">,</span>            <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>               <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'我是子组件'</span><span class="token punctuation">,</span>               <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">components</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>                cpn_in            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>               <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>           <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">'#app'</span><span class="token punctuation">,</span>           <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'我是root'</span>           <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>           <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>               <span class="token function">btnClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                                  <span class="token punctuation">&#125;</span>           <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>           <span class="token literal-property property">components</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>               cpn           <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="3-12-0-solt-插槽-——-重点-69"><a href="#3-12-0-solt-插槽-——-重点-69" class="headerlink" title="3.12.0 solt-插槽 —— 重点  69"></a>3.12.0 solt-插槽 —— 重点  69</h5><ul><li><p>slot翻译为插槽：</p><ul><li>在生活中很多地方都有插槽，电脑的USB插槽，插板当中的电源插槽。</li><li>插槽的目的是让我们原来的设备具有更多的扩展性。</li><li>比如电脑的USB我们可以插入U盘、硬盘、手机、音响、键盘、鼠标等等。</li></ul></li><li><p>组件的插槽∶</p><ul><li>组件的插槽也是为了让我们封装的组件更加具有扩展性。</li><li>让使用者可以决定组件内部的一些内容到底展示什么。</li><li></li></ul></li><li><p>例子:移动网站中的导航栏。</p><ul><li>移动开发中，几乎每个页面都有导航栏。</li><li>导航栏我们必然会封装成一个插件</li><li>比如nav-bar组件。<br>一旦有了这个组件，我们就可以在多个页面中复用了。</li></ul></li><li><p>但是，每个页面的导航是一样的吗?No，我以京东M站为例</p></li></ul><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-03_15-05-05.png"></p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-03_15-06-50.png"></p><h6 id="3-12-1-插槽的基本使用"><a href="#3-12-1-插槽的基本使用" class="headerlink" title="3.12.1 插槽的基本使用"></a>3.12.1 插槽的基本使用</h6><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 1.插槽的基本使用 &lt;slot>&lt;/slot>          2.插槽的默认值 &lt;slot>&lt;button>&lt;/button>&lt;/slot>         3.如果有多个值，同时放入到组件进行替换时，一起作为替换元素    --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>案例<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>slot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>slot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">></span></span>slot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">></span></span>全部替换哦<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>全部哦<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cpn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>我是组件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>123456789<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>           <span class="token comment">&lt;!--  &lt;button>按钮&lt;/button> --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>这里是插槽里的默认值<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">const</span> cpn <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token string">"#cpn"</span><span class="token punctuation">,</span>            <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>           <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">'#app'</span><span class="token punctuation">,</span>           <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>           <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>           <span class="token literal-property property">components</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>               cpn           <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="3-12-2-具名插槽的使用-自-2-6-0-起有所更新。已废弃的使用-slot-attribute-的语法在这里。"><a href="#3-12-2-具名插槽的使用-自-2-6-0-起有所更新。已废弃的使用-slot-attribute-的语法在这里。" class="headerlink" title="3.12.2 具名插槽的使用 - 自 2.6.0 起有所更新。已废弃的使用 slot attribute 的语法在这里。"></a>3.12.2 具名插槽的使用 - 自 2.6.0 起有所更新。已废弃的使用 <code>slot</code> attribute 的语法在<a href="https://cn.vuejs.org/v2/guide/components-slots.html#%E5%BA%9F%E5%BC%83%E4%BA%86%E7%9A%84%E8%AF%AD%E6%B3%95">这里</a>。</h6><p><a href="https://cn.vuejs.org/v2/guide/components-slots.html">https://cn.vuejs.org/v2/guide/components-slots.html</a> 官网</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">已经被废除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>我是中间<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>这就是具名插槽<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cpn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>左边<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>中间<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>右边<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">const</span> cpn <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token string">"#cpn"</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>           <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">'#app'</span><span class="token punctuation">,</span>           <span class="token literal-property property">components</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>               cpn           <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="更新后的具名插槽"><a href="#更新后的具名插槽" class="headerlink" title="@-更新后的具名插槽"></a>@-更新后的具名插槽</h5><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name"><span class="token namespace">v-slot:</span>left</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>新版的插槽的用法<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name"><span class="token namespace">v-slot:</span>right</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>123456<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>这里面又有一个模板了哦<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cpn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">const</span> cpn <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token string">"#cpn"</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>           <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">'#app'</span><span class="token punctuation">,</span>           <span class="token literal-property property">components</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>               cpn           <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="3-12-3-编译作用域"><a href="#3-12-3-编译作用域" class="headerlink" title="3.12.3 编译作用域"></a>3.12.3 编译作用域</h6><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-03_16-01-45.png"></p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-03_15-58-20.png"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cpn</span> <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>isShow<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cpn</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cpn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>我是子组件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>我是内容,哈哈哈<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>isShow<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>作用域<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">const</span> cpn <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token string">"#cpn"</span><span class="token punctuation">,</span>            <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">isShow</span><span class="token operator">:</span><span class="token boolean">true</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>           <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">'#app'</span><span class="token punctuation">,</span>           <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>               <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>                   <span class="token literal-property property">isShow</span><span class="token operator">:</span><span class="token boolean">true</span>               <span class="token punctuation">&#125;</span>           <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>           <span class="token literal-property property">components</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>               cpn           <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="3-12-4-作用域插槽-：-准备"><a href="#3-12-4-作用域插槽-：-准备" class="headerlink" title="3.12.4 作用域插槽 ： 准备"></a>3.12.4 作用域插槽 ： 准备</h6><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-03_16-21-48.png"></p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-03_16-26-16.png"><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-03_16-27-12.png"></p><h1 id="已补"><a href="#已补" class="headerlink" title="已补---@@@@@@@@@@@@@@"></a>已补---@@@@@@@@@@@@@@</h1><h3 id="独立、-WebPack的学习-使用的是3-6-0版本的-非常注重版本问题"><a href="#独立、-WebPack的学习-使用的是3-6-0版本的-非常注重版本问题" class="headerlink" title="独立、@-WebPack的学习  使用的是3.6.0版本的  -  非常注重版本问题"></a>独立、@-WebPack的学习  使用的是3.6.0版本的  -  非常注重版本问题</h3><ul><li>认识webpack</li><li>webpack的安装</li><li>webpack的起步</li><li>webpack的配置</li><li>loader的使用</li><li>webpack中配置Vue</li><li>plugin的使用</li><li>搭建本地服务器</li></ul><h4 id="1-1-0-认识webpack"><a href="#1-1-0-认识webpack" class="headerlink" title="@-1.1.0 认识webpack"></a>@-1.1.0 认识webpack</h4><ul><li>它的官网为：<a href="https://www.webpackjs.com/">https://www.webpackjs.com/</a><ul><li>从本质上来讲，webpack是一个现代的javaScript应用的静态模块打包工具</li><li><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-17_14-04-36.png"></li><li>webpack其中的一个核心即使让我们可能进行模块化开发，并且会帮助我们处理模块之间的依赖关系。（浏览器不识别ES6，而使用webpack打包，把ES6转化为ES5，等）</li></ul></li><li><span style="color:green;">和grunt&#x2F;gulp的对比———-以后有时间看看—</span>—<ul><li><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-17_14-19-28.png"></li></ul></li></ul><h4 id="1-2-0-webpack安装"><a href="#1-2-0-webpack安装" class="headerlink" title="@-1.2.0 webpack安装"></a>@-1.2.0 webpack安装</h4><ul><li>webpack依赖Node.js<ul><li>它们之间的关系为：(webpack-node-npm)<img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-17_14-25-35.png"></li></ul></li></ul><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-17_14-31-12.png"></p><h4 id="1-3-0-webpack的基本使用过程"><a href="#1-3-0-webpack的基本使用过程" class="headerlink" title="@-1.3.0 webpack的基本使用过程"></a>@-1.3.0 webpack的基本使用过程</h4><ul><li><p>创建两个目录-（dist-[distribution（发布）] , src）</p><ul><li>src - 开发的地方<ul><li>main.js - 开发的源文件</li></ul></li><li>dist - 打包的地方</li><li><code>webpack .\src\main.js .\dist\bundie.js  ****  会将main.js打包到bundie.js (会自动将所有main.js依赖的包全部打包掉)</code></li></ul></li><li><p>使用ES6模块化开发</p><ul><li>~~~js<br>&#x2F;&#x2F;导出<br>let myName &#x3D; “Tom”;<br>let myAge &#x3D; 20;<br>let myfn &#x3D; function(){<br>return “My name is” + myName + “! I’m ‘“ + myAge + “years old.”<br>}<br>let myClass &#x3D;  class myClass {<br>static a &#x3D; “yeah!”;<br>}<br>module.exports &#x3D; {<br>myName,myAge,myfn,myClass<br>}<pre class="line-numbers language-none"><code class="language-none">* ~~~js  &#x2F;&#x2F;导入  import &#123; myName, myAge, myfn, myClass, num1 &#125; from &quot;.&#x2F;b.js&quot;;  console.log(myfn());&#x2F;&#x2F; My name is Tom! I&#39;m 20 years old.  console.log(myAge);&#x2F;&#x2F; 20  console.log(myName);&#x2F;&#x2F; Tom  console.log(myClass.a );&#x2F;&#x2F; yeah!  console.log(num1);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>具体过程 <img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-17_15-16-11.png"></li></ul></li></ul><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-17_15-16-29.png"></p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-17_15-16-36.png"></p><h4 id="1-4-0-webpack的配置"><a href="#1-4-0-webpack的配置" class="headerlink" title="@-1.4.0 webpack的配置"></a>@-1.4.0 webpack的配置</h4><h5 id="webpack-config-js"><a href="#webpack-config-js" class="headerlink" title="webpack.config.js"></a>webpack.config.js</h5><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports<span class="token operator">=</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">entry</span><span class="token operator">:</span><span class="token string">'./src/main.js'</span><span class="token punctuation">,</span>    <span class="token comment">// 入口</span>    <span class="token literal-property property">output</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>        <span class="token comment">//不能写绝对路径 - 动态的获取路径 - 需要用到node语法 npm init</span>        <span class="token literal-property property">path</span><span class="token operator">:</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'dist'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment">//  出口</span>        <span class="token literal-property property">filename</span><span class="token operator">:</span><span class="token string">'bundle.js'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token comment">//可以直接webpack打包，不需要 webpack .\src\main.js .\dist\bundie.js</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="npm-init"><a href="#npm-init" class="headerlink" title="npm init"></a>npm init</h5><pre class="line-numbers language-node" data-language="node"><div class="caption"><span>npm</span></div><code class="language-node">生成package.json &#123;  &quot;name&quot;: &quot;webpackmeet&quot;,  &quot;version&quot;: &quot;1.0.0&quot;,  &quot;description&quot;: &quot;&quot;,  &quot;main&quot;: &quot;index.js&quot;,  &#x2F;&#x2F; 脚本 npm run test 就会执行这一个命令  这里是运行局部安装的  &quot;scripts&quot;: &#123;    &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;  &#125;,  &quot;author&quot;: &quot;&quot;,  &#x2F;&#x2F; 是否开源需要用的  &quot;license&quot;: &quot;ISC&quot;   &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="npm-install-119-101-x62-x70-97-99-x6b-64-51-x2e-54-46-48-–save-dev-局部安装（开发时依赖）"><a href="#npm-install-119-101-x62-x70-97-99-x6b-64-51-x2e-54-46-48-–save-dev-局部安装（开发时依赖）" class="headerlink" title="npm install &#119;&#101;&#x62;&#x70;&#97;&#99;&#x6b;&#64;&#51;&#x2e;&#54;&#46;&#48; –save-dev 局部安装（开发时依赖）"></a>npm install <a href="mailto:&#119;&#101;&#x62;&#x70;&#97;&#99;&#x6b;&#64;&#51;&#x2e;&#54;&#46;&#48;">&#119;&#101;&#x62;&#x70;&#97;&#99;&#x6b;&#64;&#51;&#x2e;&#54;&#46;&#48;</a> –save-dev 局部安装（开发时依赖）</h5><pre class="line-numbers language-node" data-language="node"><div class="caption"><span>npm</span></div><code class="language-node">&#x2F;&#x2F;生成package.json&#123;  &quot;name&quot;: &quot;webpackmeet&quot;,  &quot;version&quot;: &quot;1.0.0&quot;,  &quot;description&quot;: &quot;&quot;,  &quot;main&quot;: &quot;index.js&quot;,  &quot;scripts&quot;: &#123;    &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;,    &quot;abc&quot;: &quot;webpack&quot;  &#125;,    &quot;author&quot;: &quot;&quot;,  &quot;license&quot;: &quot;ISC&quot;,  &#x2F;&#x2F; 开发时依赖  &quot;dependencies&quot;: &#123;    &quot;webpack&quot;: &quot;^3.6.0&quot;  &#125;  &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>总结</p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-17_16-03-05.png"></p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-17_16-03-30.png"></p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-17_16-04-10.png"></p><h4 id="1-5-0-loader的使用"><a href="#1-5-0-loader的使用" class="headerlink" title="@-1.5.0 loader的使用"></a>@-1.5.0 loader的使用</h4><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-17_16-09-45.png"></p><h5 id="1-5-1-css文件处理"><a href="#1-5-1-css文件处理" class="headerlink" title="1.5.1 css文件处理"></a>1.5.1 css文件处理</h5><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-17_18-51-08.png"></p><h6 id="参考loaders文档-注意版本号"><a href="#参考loaders文档-注意版本号" class="headerlink" title="*    参考loaders文档 - 注意版本号"></a>*    参考loaders文档 - 注意版本号</h6><p><a href="https://www.webpackjs.com/loaders/">https://www.webpackjs.com/loaders/</a>  </p><h6 id="会遇到的错误-UnhandledPromiseRejectionWarning-TypeError-this-getResolve-is-not-a-function"><a href="#会遇到的错误-UnhandledPromiseRejectionWarning-TypeError-this-getResolve-is-not-a-function" class="headerlink" title="会遇到的错误    -    UnhandledPromiseRejectionWarning: TypeError: this.getResolve is not a function"></a>会遇到的错误    -    UnhandledPromiseRejectionWarning: TypeError: this.getResolve is not a function</h6><pre class="line-numbers language-解决" data-language="解决"><code class="language-解决">比如我的webpack是3.6.0版本而我的css-loader是5.0.0这里就会出现这个错误解决办法：1，手动设置，然后采用npm install 重新下载2，卸载重装npm uninstall css-loader    &#x2F;&#x2F;卸载npm install css-loader@3.0.0 --save-dev   &#x2F;&#x2F;指定版本重装<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="1-5-2-less文件处理"><a href="#1-5-2-less文件处理" class="headerlink" title="1.5.2 less文件处理"></a>1.5.2 less文件处理</h5><pre class="line-numbers language-解决" data-language="解决"><code class="language-解决">(node:4948) UnhandledPromiseRejectionWarning: TypeError: loaderContext.getResolve is not a functiohttps:&#x2F;&#x2F;blog.csdn.net&#x2F;Anonymous996&#x2F;article&#x2F;details&#x2F;108415781参考文档npm install less-loader@4.1.0 -s    进行覆盖。原先版本是多少也没注意看，是直接安装的，属于最高版本<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="1-5-3-img文件处理"><a href="#1-5-3-img文件处理" class="headerlink" title="1.5.3 img文件处理"></a>1.5.3 img文件处理</h5><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;配置   &quot;url-loader&quot;: &quot;^4.1.1&quot;, &#x2F;&#x2F;这里的版本高了&#123;            test: &#x2F;\.(png|jpg|gif)$&#x2F;,            use: [              &#123;                loader: &#39;url-loader&#39;,                options: &#123;                  &#x2F;&#x2F;  当加载的图片，小于limit时，会将图片编译成base64字符串形式                  &#x2F;&#x2F;  当加载的图片，大于limit时，需要使用file-loader模块进行加载                  limit: 2000,                  &#x2F;&#x2F;根据自己的方式命名                  name:&#39;img&#x2F;[name].[hash:8].[ext]&#39;                &#125;,               &#125;            ]          &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="会遇到的错误-ERROR-in-x2F-src-x2F-img-x2F-p-png-Module-build-failed-Error-Cannot-find-module-‘file-loader’"><a href="#会遇到的错误-ERROR-in-x2F-src-x2F-img-x2F-p-png-Module-build-failed-Error-Cannot-find-module-‘file-loader’" class="headerlink" title="会遇到的错误   ERROR in .&#x2F;src&#x2F;img&#x2F;p.png         Module build failed: Error: Cannot find module ‘file-loader’"></a>会遇到的错误   ERROR in .&#x2F;src&#x2F;img&#x2F;p.png         Module build failed: Error: Cannot find module ‘file-loader’</h6><pre class="line-numbers language-解决" data-language="解决"><code class="language-解决">https:&#x2F;&#x2F;blog.csdn.net&#x2F;lzc2644481789&#x2F;article&#x2F;details&#x2F;1077749821.改limit2.npm  install  file-loader  --save-dev(--save-dev的意思就是开发依赖，也就是说file-loader这个打包器在打包完成以后，不会出现在打包的结果之中，它只存在于开发阶段)。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>file-loader版本用0.11.2</p><pre class="line-numbers language-配置" data-language="配置"><code class="language-配置">npm install file-loader@0.11.2 -s  &#x2F;&#x2F;重装&#x2F; &#x2F;吐了。。。这个版本我用吐了 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>总结</p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-17_21-03-52.png"></p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-17_21-04-13.png"></p><p>这里会有一个版本问题  url-loader版本会过高，导致图片加载不出来，具体也不知道是什么原因</p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-17_21-04-37.png"></p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-17_21-04-52.png"></p><p>&#x2F;&#x2F;根据自己的方式命名</p><p>name:’img&#x2F;[name].[hash:8].[ext]’</p><h5 id="1-5-4-ES6转ES5的处理"><a href="#1-5-4-ES6转ES5的处理" class="headerlink" title="1.5.4 ES6转ES5的处理"></a>1.5.4 ES6转ES5的处理</h5><pre class="line-numbers language-npm" data-language="npm"><code class="language-npm">npm install --save-dev babel-loader@7 babel-core babel-preset-es2015输入命令报错溜了，还好我用的浏览器比较高，哈哈<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-20_23-30-30.png"></p><h4 id="1-6-0-webpack配置Vue"><a href="#1-6-0-webpack配置Vue" class="headerlink" title="@-1.6.0 webpack配置Vue"></a>@-1.6.0 webpack配置Vue</h4><pre class="line-numbers language-npm" data-language="npm"><code class="language-npm">npm install vue --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-21_08-57-38.png"></p><pre class="line-numbers language-error" data-language="error"><code class="language-error">bundle.js:1421 [Vue warn]: You are using the runtime-only build of Vue where the template compiler is not available. Either pre-compile the templates into render functions, or use the compiler-included build.(found in &lt;Root&gt;)Vue有2个版本 （你正在使用runtime-only，里面含包含template所以报错）1.runtime-only -&gt; 代码中，不可以有任何的template2.runtime-compiler -&gt; 代码中，可以有template，因为有compiler可以编译template<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-21_09-26-21.png"></p><pre class="line-numbers language-webpack.config.js" data-language="webpack.config.js"><code class="language-webpack.config.js">resolve:&#123;     extensions:[&#39;.js&#39;,&#39;.css&#39;,&#39;.vue&#39;],  &#x2F;&#x2F; 可以省略后缀     alias:&#123;       &#39;vue$&#39;:&#39;vue&#x2F;dist&#x2F;vue.esm.js&#39;     &#125;  &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="1-6-1-el和template区别"><a href="#1-6-1-el和template区别" class="headerlink" title="1.6.1 el和template区别"></a>1.6.1 el和template区别</h5><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-21_09-44-37.png"></p><pre class="line-numbers language-none"><code class="language-none">同时有el ， templateVue源码内部会  替换template将它放入 index.html里面<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-21_10-26-15.png"></p><h5 id="1-6-2-Vue的终极使用方案-一步步的过程"><a href="#1-6-2-Vue的终极使用方案-一步步的过程" class="headerlink" title="1.6.2 Vue的终极使用方案  -  一步步的过程"></a>1.6.2 Vue的终极使用方案  -  一步步的过程</h5><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-21_10-28-17.png"></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//5.使用Vue进行开发</span><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">const</span> App<span class="token operator">=</span> <span class="token punctuation">&#123;</span>   <span class="token comment">//创建一个组件，可以看做成一个对象了</span>    <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">    &lt;h2>&#123;&#123; message &#125;&#125;&lt;/h2>      </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>    <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">message</span><span class="token operator">:</span><span class="token string">"hello world"</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> app<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">"#app"</span><span class="token punctuation">,</span>    <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;App/></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>     <span class="token literal-property property">components</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>        App<span class="token comment">//加入一个组件</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-21_10-28-33.png"></p><pre class="line-numbers language-npm" data-language="npm"><code class="language-npm">npm install vue-loader --save-dev  更改这个版本:&quot;vue-loader&quot;: &quot;^13.0.0&quot;, 使用npm install  npm install vue-template-compiler --save-dev版本问题弄的人头大--哎  上面要分开装，还要改个版本<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>树的结构</li></ul><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-21_11-20-50.png"></p><h4 id="1-7-0-认识plugin"><a href="#1-7-0-认识plugin" class="headerlink" title="@-1.7.0 认识plugin"></a>@-1.7.0 认识plugin</h4><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-21_11-41-04.png"></p><h5 id="1-7-1-添加版权的plugin-–-有时间可以自己看下开源的协议"><a href="#1-7-1-添加版权的plugin-–-有时间可以自己看下开源的协议" class="headerlink" title="1.7.1 添加版权的plugin    – 有时间可以自己看下开源的协议"></a>1.7.1 添加版权的plugin    – 有时间可以自己看下开源的协议</h5><ul><li>开源协议 MIT</li></ul><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-21_11-49-50.png"></p><h5 id="1-7-2-打包html的plugin"><a href="#1-7-2-打包html的plugin" class="headerlink" title="1.7.2 打包html的plugin"></a>1.7.2 打包html的plugin</h5><p>将src目录下的html打包到dist里面去，会自动生成js路径</p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-21_14-19-51.png"></p><pre class="line-numbers language-npm" data-language="npm"><code class="language-npm">npm install html-webpack-plugin@3.2.0 --save-dev   版本3.2.0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="1-7-3-js压缩的plugin"><a href="#1-7-3-js压缩的plugin" class="headerlink" title="1.7.3 js压缩的plugin"></a>1.7.3 js压缩的plugin</h5><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-21_14-45-35.png"></p><pre class="line-numbers language-npm" data-language="npm"><code class="language-npm">npm install uglifyjs-webpack-plugin@1.1.1 --save-dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="1-8-0-搭建本地服务器"><a href="#1-8-0-搭建本地服务器" class="headerlink" title="@-1.8.0 搭建本地服务器"></a>@-1.8.0 搭建本地服务器</h4><p>搭建本地服务器，方便做测试</p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-21_15-03-01.png"></p><pre class="line-numbers language-npm" data-language="npm"><code class="language-npm">npm install  webpack-dev-server@2.9.3 --save-dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后在package里添加script</p><pre class="line-numbers language-none"><code class="language-none">&quot;dev&quot;: &quot;webpack-dev-server [--open  自动打开]&quot;    <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="1-9-0-webpack配置分离"><a href="#1-9-0-webpack配置分离" class="headerlink" title="@-1.9.0 webpack配置分离"></a>@-1.9.0 webpack配置分离</h4><ul><li><p>1.创建一个目录build</p><ul><li><p>文件base.config.js    –基础</p><ul><li><p>~~~js<br>const path &#x3D; require(‘path’)<br>const webpack&#x3D; require(‘webpack’)<br>const HtmlWebpackPlugin&#x3D;require(‘html-webpack-plugin’)<br>const Uglifyjs&#x3D;require(‘uglifyjs-webpack-plugin’);</p><p>module.exports&#x3D;{<br>entry:’.&#x2F;src&#x2F;main.js’,<br>output:{<br>    &#x2F;&#x2F;不能写绝对路径 - 动态的获取路径 - 需要用到node语法 npm init<br>    path:path.resolve(__dirname, ‘dist’),<br>    filename:’bundle.js’,<br>  &#x2F;&#x2F;  publicPath:’dist&#x2F;‘<br>},<br>module: {<br>    rules: [<br>      {<br>        test: &#x2F;.css$&#x2F;,<br>        use: [ ‘style-loader’, ‘css-loader’ ]<br>      },<br>      {<br>        test: &#x2F;.less$&#x2F;,<br>        use: [{<br>            loader: “style-loader” &#x2F;&#x2F; creates style nodes from JS strings<br>        }, {<br>            loader: “css-loader” &#x2F;&#x2F; translates CSS into CommonJS<br>        }, {<br>            loader: “less-loader” &#x2F;&#x2F; compiles Less to CSS<br>        }]<br>      },<br>      {<br>        test: &#x2F;.(png|jpg|gif)$&#x2F;,<br>        use: [<br>          {<br>            loader: ‘url-loader’,<br>            options: {<br>              &#x2F;&#x2F;  当加载的图片，小于limit时，会将图片编译成base64字符串形式<br>              &#x2F;&#x2F;  当加载的图片，大于limit时，需要使用file-loader模块进行加载<br>              limit: 2000,<br><br>              &#x2F;&#x2F;根据自己的方式命名<br>              name:’img&#x2F;[name].[hash:8].[ext]’<br>            },<br>          }<br>        ]<br>      },<br>     &#x2F;*  {<br>        test: &#x2F;.js$&#x2F;,<br>        &#x2F;&#x2F;  排除  -node_modules 是不会打包的<br>        exclude: &#x2F;(node_modules|bower_components)&#x2F;,<br>        use: {<br>          loader: ‘babel-loader’,<br>          options: {<br>            presets: [‘@es2015’]<br>          }<br>        }<br>      } <em>&#x2F;<br>      {<br>        test : &#x2F;.vue$&#x2F;,<br>        use : [‘vue-loader’]<br>      }<br>    ]<br>},<br>resolve:{<br>  extensions:[‘.js’,’.css’,’.vue’],<br>  alias:{<br>    ‘vue$’:’vue&#x2F;dist&#x2F;vue.esm.js’<br>  }<br>},<br>plugins:[<br>  new webpack.BannerPlugin(‘最终版权归gk所有’),<br>  new HtmlWebpackPlugin({<br>    template: ‘index.html’<br>  }),<br>  &#x2F;&#x2F;打包时需要的配置<br>&#x2F;</em>       new Uglifyjs() <em>&#x2F;<br>],<br>  &#x2F;</em>   &#x2F;&#x2F;开发时需要的配置<br>devServer:{<br>  contentBase:’.&#x2F;dist’,<br>  inline:true,<br>  port:8880,<br>} *&#x2F;<br>}</p><pre class="line-numbers language-none"><code class="language-none">* 文件dev.config.js      --打包时需要的配置  * ~~~js    const Uglifyjs&#x3D;require(&#39;uglifyjs-webpack-plugin&#39;);    const webpackMerge &#x3D;  require(&#39;webpack-merge&#39;);    const baseConfig &#x3D; require(&#39;.&#x2F;base.config&#39;);        module.exports &#x3D; webpackMerge(baseConfig,&#123;        plugins:[          &#x2F;&#x2F;打包时需要的配置          new Uglifyjs()        ],          &#x2F;*   &#x2F;&#x2F;开发时需要的配置        devServer:&#123;          contentBase:&#39;.&#x2F;dist&#39;,          inline:true,          port:8880,        &#125; *&#x2F;    &#125;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>文件prod.config.js    –开发时需要的配置</p><ul><li><p>~~~js<br>const webpackMerge &#x3D;  require(‘webpack-merge’);<br>const baseConfig &#x3D; require(‘.&#x2F;base.config’);</p><p>module.exports &#x3D; webpackMerge(baseConfig,{<br>   &#x2F;*  plugins:[<br>  &#x2F;&#x2F;打包时需要的配置<br>  new Uglifyjs()<br>], *&#x2F;<br>&#x2F;&#x2F;开发时需要的配置<br>devServer:{<br>  contentBase:’.&#x2F;dist’,<br>  inline:true,<br>  port:8880,<br>}<br>})</p><pre class="line-numbers language-none"><code class="language-none">~~~npmnpm install webpack-merge@4.1.5 --save-dev   &#x2F;&#x2F;用4.1.5版本<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul></li></ul></li></ul><p>然后在package里添加script</p><pre class="line-numbers language-script" data-language="script"><code class="language-script">&quot;scripts&quot;: &#123;    &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;,    &quot;gk&quot;: &quot;webpack --config .&#x2F;build&#x2F;prod.config.js&quot;,    &quot;dev&quot;: &quot;webpack-dev-server  --open   --config .&#x2F;build&#x2F;dev.config.js&quot;  &#125;,<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>记得改写base.config.js里的路径</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token literal-property property">output</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>        <span class="token comment">//不能写绝对路径 - 动态的获取路径 - 需要用到node语法 npm init</span>        <span class="token literal-property property">path</span><span class="token operator">:</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'../dist'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token literal-property property">filename</span><span class="token operator">:</span><span class="token string">'bundle.js'</span><span class="token punctuation">,</span>      <span class="token comment">//  publicPath:'dist/'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、Vue-CLI详解"><a href="#四、Vue-CLI详解" class="headerlink" title="四、Vue CLI详解"></a>四、Vue CLI详解</h2><h3 id="4-0-什么是Vue-CLI？"><a href="#4-0-什么是Vue-CLI？" class="headerlink" title="4.0 什么是Vue CLI？"></a>4.0 什么是Vue CLI？</h3><ul><li><p>如果你只是简单写几个Vue的Demo程序，那么你不需要Vue CLI</p></li><li><p>如果你在开发大项目，那么你需要，并且必然需要使用Vue  CLI</p><ul><li>使用Vue.js开发大型应用时，我们需要考虑代码目录结构、项目结构部署、热加载、代码单元测试等事情。</li><li>如果每个项目都要手动完成这些工作，那无疑效率比较低效，所以通常我们会使用一些脚手架工具来帮助完成这些事情。</li></ul></li><li><p>CLI是什么意思？</p><ul><li>CLI是Command-Line Interface，翻译为命令行界面，但是俗称脚手架。</li><li>Vue CLI是一个官方发布 vue.js 项目脚手架</li><li>使用 vue-cli 可以快速搭建Vue开发环境以及对应的webpack配置</li></ul></li><li><p>脚手架长什么样子？</p><ul><li>工程学里的概念，例子：建房子时候要先套个脚手架，再建</li></ul><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-21_17-05-33.png"></p></li></ul><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-21_17-06-54.png"></p><h4 id="4-0-1-Vue-CLI的安装及使用-设计版本问题-🤮"><a href="#4-0-1-Vue-CLI的安装及使用-设计版本问题-🤮" class="headerlink" title="4.0.1 Vue CLI的安装及使用 - 设计版本问题 - 🤮"></a>4.0.1 Vue CLI的安装及使用 - 设计版本问题 - 🤮</h4><ul><li><p>安装Vue脚手架</p><ul><li>~~~npm<br>npm install -g @vue&#x2F;cli<pre class="line-numbers language-none"><code class="language-none">  * 查看版本 vue  --version  * 卸载 npm uninstall -g vue-cli#### 4.0.1 Vue CLI2 安装详解~~~创建项目vue init webpack 项目名称<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-21_22-20-25.png"></p><h6 id="CLI-2-的目录结构"><a href="#CLI-2-的目录结构" class="headerlink" title="CLI 2 的目录结构"></a>CLI 2 的目录结构</h6><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-21_22-20-26.png"></p><h5 id="小扩展ESLint"><a href="#小扩展ESLint" class="headerlink" title="小扩展ESLint"></a>小扩展ESLint</h5><p>ES(js)-Lint  自动检测代码是否写的规范</p><p>Standard  <a href="https://github.com/standard/standard">https://github.com/standard/standard</a></p><p>Airbnb    <a href="https://github.com/airbnb/javascript">https://github.com/airbnb/javascript</a></p><p>flutter</p><p>自己配置</p><p>小扩展</p><p>e2e -&gt; e to e -&gt; end to end(端到端测试) </p><p>node是使用C++开发的，V8引擎</p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-22_16-18-18.png"></p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-22_16-18-39.png"></p><h4 id="4-0-1-Vue-CLI3-尤小右"><a href="#4-0-1-Vue-CLI3-尤小右" class="headerlink" title="4.0.1 Vue CLI3 - 尤小右"></a>4.0.1 Vue CLI3 - 尤小右</h4><p>2018年8月份发布的 CLI3</p><ul><li><p>Vue-cli 3 与 2 版本有很大的区别    </p><ul><li>vue-cli 3 是基于 webpack 4 打造，vue-cli 2 还是webpack 3</li><li>vue-cli 3 的设计原则是 “0配置” ，移除的配置文件根目录下的 ，bulid和config等目录</li><li>vue-cli 3 提供了 vue ui 命令，提供了可视化配置，更加人性化</li><li>移除了static文件夹，新增了public文件夹，并且index.html移动到public中</li></ul><pre class="line-numbers language-none"><code class="language-none">vue create 项目名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h4 id="4-0-1-Vue-CLI4-我是用的这个"><a href="#4-0-1-Vue-CLI4-我是用的这个" class="headerlink" title="4.0.1 Vue CLI4  - 我是用的这个"></a>4.0.1 Vue CLI4  - 我是用的这个</h4><ul><li><p>下载不了  -  我用的是这个</p><ul><li><p>~~~npm<br>淘宝镜像<br>npm install -g cnpm –registry&#x3D;<a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a><br>安装Vue脚手架<br>cnpm install -g @vue&#x2F;cli</p><p>&#x2F;&#x2F;  安装不了建议使用这个命令初始化一下<br>cnpm install -g @vue&#x2F;cli-init<br>cnpm install -s @vue&#x2F;cli-init</p><p>更新脚手架<br>npm i -g @vue&#x2F;cli to update!</p><pre class="line-numbers language-none"><code class="language-none"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li></ul><h5 id="我下的是-vue-x2F-cli-4-5-9-的脚手架"><a href="#我下的是-vue-x2F-cli-4-5-9-的脚手架" class="headerlink" title="我下的是 @vue&#x2F;cli 4.5.9 的脚手架"></a>我下的是 @vue&#x2F;cli 4.5.9 的脚手架</h5><p>这里写的很详细-建议看这个：<a href="https://www.cnblogs.com/sese/p/11712275.html">https://www.cnblogs.com/sese/p/11712275.html</a></p><p>安装的步骤</p><pre><code><pre class="line-numbers language-none"><code class="language-none">1.进入一个目录，创建项目vue create project-one(这是创建的文件名)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></code></pre><p>遇到的第一个问题</p><pre class="line-numbers language-none"><code class="language-none">Your connection to the default npm registry seems to be slow.Use https:&#x2F;&#x2F;registry.npm.taobao.org for faster installation-------------------------------------------------------------------你与默认的npm注册表的连接似乎很慢。请使用 https:&#x2F;&#x2F;registry.npm.taobao.org 来加快安装速度。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二个</p><pre class="line-numbers language-none"><code class="language-none">Vue CLI v4.5.9? Please pick a preset: (Use arrow keys)&gt; Default ([Vue 2] babel, eslint)  Default (Vue 3 Preview) ([Vue 3] babel, eslint)  Manually select features  -----------------------------------------------------------------  Vue CLI v4.5.9? 请选择一个预设。(使用方向键)&gt; 默认值([Vue 2] babel, eslint)  默认值（Vue 3预览版）（[Vue 3] babel, eslint）。  手动选择功能<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>选择的第一个直接配置好了. ......</code></pre><p>选择第三个 - 手动安装</p><pre class="line-numbers language-none"><code class="language-none">Vue CLI v4.5.9? Please pick a preset: Manually select features? Check the features needed for your project: &gt;(*) Choose Vue version&gt; ( ) Babel&gt; ( ) TypeScript&gt; ( ) Progressive Web App (PWA) Support        &gt; ( ) Router&gt; ( ) Vuex&gt; ( ) CSS Pre-processors&gt; (*) Linter &#x2F; Formatter&gt; ( ) Unit Testing&gt; ( ) E2E Testing-------------------------------------------------------- Vue CLI v4.5.9? 请选择一个预设。手动选择功能? 勾选项目所需的功能。&gt;(*) 选择Vue版本&gt; (*) Babel &#x2F;&#x2F;转码器，可以将ES6代码转为ES5代码，从而在现有环境执行。 &gt; ( ) TypeScript &#x2F;&#x2F; TypeScript是一个JavaScript（后缀.js）的超集（后缀.ts）包含并扩展了 JavaScript 的语法，需要被编译输出为 JavaScript在浏览器运行&gt; ( ) 渐进式网络应用(PWA)支持        &gt; (*) 路由器&gt; (*) Vuex&gt; (*) CSS预处理程序&gt; (*) &#x2F;&#x2F; 代码风格检查和格式化（如：ESlint）&gt; ( ) 单元测试&gt; ( ) E2E测试<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>选择上面的按钮配置，然后</p><pre class="line-numbers language-none"><code class="language-none">自己去翻译https:&#x2F;&#x2F;www.deepl.com&#x2F;translator实在不行百度  https:&#x2F;&#x2F;www.cnblogs.com&#x2F;sese&#x2F;p&#x2F;11712275.html###### CLI4 的目录结构:![]( http:&#x2F;&#x2F;statusproject.gitee.io&#x2F;import-small-blog&#x2F;static&#x2F;VueJs-study&#x2F;Snipaste_2020-12-21_23-38-43.png)别人学习Vue CLI4的博客-多看看把：https:&#x2F;&#x2F;blog.csdn.net&#x2F;weixin_43734095&#x2F;article&#x2F;details&#x2F;106990775https:&#x2F;&#x2F;segmentfault.com&#x2F;a&#x2F;1190000022043508#### 4.0.1 版本问题，笔记会做的有点杂尽量理解 - 开发中作用不大，面试中要问的启动时编译    运行时编译![]( http:&#x2F;&#x2F;statusproject.gitee.io&#x2F;import-small-blog&#x2F;static&#x2F;VueJs-study&#x2F;Snipaste_2020-12-22_16-14-05.png)![]( http:&#x2F;&#x2F;statusproject.gitee.io&#x2F;import-small-blog&#x2F;static&#x2F;VueJs-study&#x2F;Snipaste_2020-12-22_16-14-05.png)![]( http:&#x2F;&#x2F;statusproject.gitee.io&#x2F;import-small-blog&#x2F;static&#x2F;VueJs-study&#x2F;Snipaste_2020-12-22_16-14-20.png)Main.js--------------------new Vue(&#123;  el: &#39;#app&#39;,  template:&#39;&lt;App&#x2F;&gt;&#39;,  components:&#123; App &#125;&#125;)如果在vue中使用runtime-compiler的话（需要更多vue源码[比runtime-only多出的代码就是template和ast的]）&#x2F;&#x2F; runtime-compilertemplate -&gt; ast -&gt; render -&gt; vdom -&gt; UI-----------------------------------------new Vue(&#123;  el: &#39;#app&#39;,  render: h &#x3D;&gt; h(App)   &#125;)如果在vue中使用runtime-only的话(跳过了template和ast)（1，性能更高。2，需要的vue源代码更少）&#x2F;&#x2F; runtime-compilerrender -&gt; vdom -&gt; UI-----------------------------------------new Vue(&#123;  render: h &#x3D;&gt; h(App),&#125;).$mount(&#39;#app&#39;)ES6 箭头函数解析render: h &#x3D;&gt; h(App)render:function(h)&#123;  return h(App)&#125;render:function(createElement)&#123;&#x2F;&#x2F; 普通方法: 1.createElement(&#39;标签&#39;,&#123;标签的属性&#125;,[&#39;&#39;]&#125;)  return createElement(&#39;h2&#39;,&#123;class:&#39;box&#39;&#125;,[&#39;hello world&#39;]&#125;)&#x2F;&#x2F;传入组件对象 return createElement(App)&#125;&#x2F;&#x2F;那么.vue文件中的template是由谁处理的了?&#x2F;&#x2F;是由vue-template-compiler处理的直接转化成render了<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Vue程序运行过程:(更加详细的理解上面的代码)  <a href="https://blog.csdn.net/Xidian2850/article/details/103793913">https://blog.csdn.net/Xidian2850/article/details/103793913</a></p><p>1.理解.$mount(‘#app’) : $mount(’#app’) ： 手动挂载到id为app的dom中的意思</p><p>2.render: h&#x3D;&gt; h(App) </p><p><em>&#x2F;&#x2F;这里的render: h&#x3D;&gt; h(App)是es6的写法</em> <em>暂且可理解为是渲染App组件</em> <em>转换过来就是：</em>   </p><p>render:(function(h){ return h(App);<em>});</em></p><p>详解:  <a href="https://blog.csdn.net/qq_43672268/article/details/105134001">https://blog.csdn.net/qq_43672268/article/details/105134001</a></p><h4 id="4-1-0-配置去哪里了？"><a href="#4-1-0-配置去哪里了？" class="headerlink" title="4.1.0 配置去哪里了？"></a>4.1.0 配置去哪里了？</h4><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-22_17-46-04.png"></p><h5 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h5><p>​~~~终端<br>1.终端-启动配置服务器：   vue ui</p><pre class="line-numbers language-none"><code class="language-none">2. 创建一个vue.config.js<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>module.exports &#x3D; {</p><p>}</p><pre class="line-numbers language-none"><code class="language-none">### ※※※箭头函数 ES6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>const c &#x3D; () &#x3D;&gt; {} &#x2F;&#x2F;一个参数可以不带参数</p><p>const c &#x3D; (a,b) &#x3D;&gt; {}</p><p>const c &#x3D; a &#x3D;&gt; {} &#x2F;&#x2F;一个参数可以不带括号</p><p>&#x2F;&#x2F;2 函数代码块中有多行代码时<br>const test &#x3D; () &#x3D;&gt; {<br>           console.log(“hello world”);<br>           console.log(“hello vueJs”);<br>        }<br>const mul &#x3D; (num1,num2) &#x3D;&gt; num1 * num2   &#x2F;&#x2F;一行代码可以不带return和括号</p><pre class="line-numbers language-none"><code class="language-none">##### 箭头函数中的this的使用~~~js&#x2F;&#x2F; 什么时候使用箭头函数        setTimeout(function()&#123;            console.log(this);        &#125;,1000)        console.log(this);   &#x2F;&#x2F;window        setTimeout(()&#x3D;&gt;&#123;            console.log(this);        &#125;,1000)        &#x2F;&#x2F;问题：箭头函数中的this是如何查找的了？        &#x2F;&#x2F;答案：向外层作用域中，一层层查找this，直到有this的定义        const obj &#x3D; &#123;            aaa()&#123;                setTimeout(function()&#123;                    console.log(this); &#x2F;&#x2F;window                &#125;,1000)                console.log(this); &#x2F;&#x2F;obj对象                setTimeout(()&#x3D;&gt;&#123;                    console.log(this); &#x2F;&#x2F; obj对象                &#125;,1000)                         &#125;             &#125;        obj.aaa();<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-22_22-11-12.png"></p><h2 id="五、vue-router"><a href="#五、vue-router" class="headerlink" title="五、vue-router"></a>五、vue-router</h2><h3 id="5-0-什么是路由？"><a href="#5-0-什么是路由？" class="headerlink" title="5.0 什么是路由？"></a>5.0 什么是路由？</h3><ul><li>说起路由你想起了什么？<ul><li>路由是一个网络工程里面的术语</li><li>路由 （routing）就是通过互联网的网络把信息从源地址传输到目的地址的活动。 –维基百科</li></ul></li><li>额，听不懂<ul><li>路由器提供了两种机制：路由和传送.<ul><li>路由时决定数据包从来源到目的地的路径</li><li>传送将输入端的数据转移到合适的输出端</li></ul></li><li>路由中有一个非常重要的概念叫路由表<ul><li>路由表本质上就是一个眏射表，决定了数据包的指向</li></ul></li></ul></li></ul><h4 id="5-1-0-※什么是前端渲染，什么是后端渲染？-P101-推敲"><a href="#5-1-0-※什么是前端渲染，什么是后端渲染？-P101-推敲" class="headerlink" title="5.1.0 ※什么是前端渲染，什么是后端渲染？ - P101 推敲"></a>5.1.0 ※什么是前端渲染，什么是后端渲染？ - P101 推敲</h4><p>知乎（跟老师讲的一摸一样）：<a href="https://zhuanlan.zhihu.com/p/166175382">https://zhuanlan.zhihu.com/p/166175382</a></p><h5 id="5-1-1-第一个阶段-后端渲染"><a href="#5-1-1-第一个阶段-后端渲染" class="headerlink" title="5.1.1 第一个阶段 - 后端渲染"></a>5.1.1 第一个阶段 - 后端渲染</h5><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-22_22-55-50.png"></p><h5 id="5-1-2第二个阶段-前后端分离"><a href="#5-1-2第二个阶段-前后端分离" class="headerlink" title="5.1.2第二个阶段 - 前后端分离"></a>5.1.2第二个阶段 - 前后端分离</h5><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-22_23-07-09.png"></p><h5 id="5-1-3-第三个阶段-单页面富应用阶段"><a href="#5-1-3-第三个阶段-单页面富应用阶段" class="headerlink" title="5.1.3 第三个阶段 - 单页面富应用阶段"></a>5.1.3 第三个阶段 - 单页面富应用阶段</h5><ul><li>SPA页面（单页面富应用）<ul><li>整个网页就只有一个html页面</li></ul></li></ul><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-22_23-29-45.png"></p><p>后端渲染</p><p><strong>服务器直接生产渲染好对应的HTML页面, 返回给客户端进行展示</strong>。比如：jsp页面</p><p><strong>好处</strong>：前端耗时少，即减少了首屏时间，模板统一在后端。前端（相对）省事，不占用客户端运算资源（解析模板）</p><p><strong>坏处</strong>：占用服务器资源。</p><p>前端渲染</p><p><strong>浏览器中显示的网页中的大部分内容，都是由前端写的 js 代码在浏览器中执行，最终渲染出来的网页。</strong></p><p>也可以怎么说：<strong>后端返回JSON数据，前端利用预先写的html模板，循环读取JSON数据，拼接字符串，并插入页面。</strong></p><p><strong>好处</strong>：网络传输数据量小。不占用服务端运算资源（解析模板），模板在前端（很有可能仅部分在前端），改结构变交互都前端自己来了，改完自己调就行。</p><p><strong>坏处</strong>：前端耗时较多，对前端工作人员水平要求相对较高。前端代码较多，因为部分以前在后台处理的交互逻辑交给了前端处理。占用少部分客户端运算资源用于解析模板。</p><h4 id="5-2-0-URL的hash-amp-amp-Html5的history模式-：pushState-、replaceState、go"><a href="#5-2-0-URL的hash-amp-amp-Html5的history模式-：pushState-、replaceState、go" class="headerlink" title="5.2.0 URL的hash  &amp;&amp;  Html5的history模式 ：pushState 、replaceState、go"></a>5.2.0 URL的hash  &amp;&amp;  Html5的history模式 ：pushState 、replaceState、go</h4><ul><li>URL的hash<ul><li>URL的hash也就是锚点(#),本质上是改变window.location的href属性.</li><li>我们可以通过直接赋值location.hash来改变href,但是页面不发生刷新</li></ul></li></ul><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-22_23-38-08.png"></p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-22_23-49-14.png"></p><ul><li><h4 id="Html5的history模式-：pushState"><a href="#Html5的history模式-：pushState" class="headerlink" title="Html5的history模式 ：pushState"></a>Html5的history模式 ：pushState</h4></li></ul><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-22_23-51-15.png"></p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-23_00-00-20.png"></p><ul><li>HTML5的history模式：replaceState</li></ul><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-23_00-01-28.png" alt="Snipaste_2020-12-23_00-01-28"></p><p>不能返回，直接替换</p><ul><li>HTML5的history模式：go</li></ul><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-23_00-04-48.png"></p><h4 id="5-3-0-认识vue-router"><a href="#5-3-0-认识vue-router" class="headerlink" title="5.3.0 认识vue-router"></a>5.3.0 认识vue-router</h4><ul><li>目前前端流行的三大框架，都有自己的路由实现<ul><li>Angular的ngRouter</li><li>React的ReactRouter</li><li>Vue的Vue-router</li></ul></li><li>当然，我们重点是vue-router<ul><li>vue-router是vue.js官方的路由插件，它和vue.js是深度集成的，适合用于构建单页面应用。</li><li>我们可以访问其官方网站对其进行学习：<a href="https://router.vuejs.org/zh/">https://router.vuejs.org/zh/</a></li></ul></li><li>vue-router<ul><li>路由用于设定访问路径，将路径和组件眏射起来.</li><li>在vue-router的单页面应用中，页面的路径的改变就是组件的切换</li></ul></li></ul><h5 id="5-3-1-安装和使用路由"><a href="#5-3-1-安装和使用路由" class="headerlink" title="5.3.1 安装和使用路由"></a>5.3.1 安装和使用路由</h5><p>安装，搭建结构</p><ul><li><p>步骤一</p><ul><li>~~~npm<br>npm install vue-router –save<pre class="line-numbers language-none"><code class="language-none">* 步骤二  * 第一步：导入路由对象，并且调用Vue.use(VueRouter)  * 第二步:  创建路由实例，并且传入路由眏射配置  * 第三步：在Vue实例中挂载创建的路由实例~~~jsimport Vue from &#39;vue&#39;&#x2F;&#x2F;3.要vue点出 所以要导入vueimport VueRouter from &#39;vue-router&#39;  &#x2F;&#x2F;1.配置路由相关信息Vue.use(VueRouter)  &#x2F;&#x2F;2.通过Vue.use(插件)，安装插件 - 要vue点出 所以要导入vue&#x2F;&#x2F;创建VueRouter对象const routes &#x3D; [  ]const router &#x3D; new VueRouter(&#123;  &#x2F;&#x2F;4.配置路由和组件之间的应用关系  routes&#125;)export default router &#x2F;&#x2F;5.在main.js导入 ，这里就要导出<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>使用vue-router的步骤</p><ul><li>第一步: 创建路由组键 - const routes &#x3D; {}</li><li>第二步: 配置路由眏射: 组件和路径眏射关系 </li><li>第三步: 使用路由: 通过<router-link>  和 <router-view></li></ul></li></ul><pre class="line-numbers language-html" data-language="html"><code class="language-html">import Home from '../components/Home'import About from '../components/About'const routes = [  &#123;    path:'/Home',    component:Home  &#125;,  &#123;    path:'/About',    component:About  &#125;]<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/home<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/about<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>关于<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 渲染站位的地方 --></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><router-link>:该标签是一个vue-router中已经内置的组件,它会被渲染成一个<a>标签.</li><li><router-view>:该标签会根据当前的路径,动态渲染出不同的组件.</li><li>网页的其他内容,比如顶部的<ul><li>标题&#x2F;导航,或者底部的一些版权信息等会和<router-view>处于同一个等级.</li></ul></li><li>在路由切换时,切换的是<ul><li><router-view>挂载的组件,其他内容不会发生改变.</li></ul></li></ul><h5 id="5-3-2-路由的默认路径-redirect"><a href="#5-3-2-路由的默认路径-redirect" class="headerlink" title="5.3.2 路由的默认路径 - redirect"></a>5.3.2 路由的默认路径 - redirect</h5><ul><li><p>我们这里还有一个不太好的实现:</p><ul><li>默认情况下，进入网站的首页,我们希望<router-view>渲染首页的内容.</li><li>但是我们的实现中,默认没有显示首页组件,必须让用户点击才可以.</li></ul></li><li><p>如何可以让路径默认跳到到首页,并且<router-view>渲染首页组件呢?</p><ul><li><p>非常简单,我们只需要配置多配置一个映射就可以了.</p><ul><li>~~~js<br>const routes &#x3D; [<br>{<br>    path:’&#x2F;‘,<br>    redirect:’&#x2F;home’<br>}<br>]<pre class="line-numbers language-none"><code class="language-none">* 配置解析:  * 我们在routes中又配置了一个映射.path配置的是根路径:&#x2F;  * redirect是重定向,也就是我们将根路径重定向到&#x2F;home的路径下,这样就可以得到我们想要的结果了##### 5.3.3将默认的hash模式改变成history~~~jsconst router &#x3D; new VueRouter(&#123;  &#x2F;&#x2F;4.配置路由和组件之间的关系  routes,  mode:&quot;history&quot;  &#125;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul></li></ul><h5 id="5-3-4-router-link-补充"><a href="#5-3-4-router-link-补充" class="headerlink" title="5.3.4 router-link 补充"></a>5.3.4 router-link 补充</h5><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-23_10-02-55.png"></p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;  &lt;div id&#x3D;&quot;app&quot;&gt;    &lt;h2&gt;哈哈&lt;&#x2F;h2&gt;    &lt;router-link to&#x3D;&quot;&#x2F;home&quot; replace&gt;首页&lt;&#x2F;router-link&gt;    &lt;router-link to&#x3D;&quot;&#x2F;about&quot; tag&#x3D;&quot;button&quot; replace active-class&#x3D;&quot;active&quot;&gt;关于&lt;&#x2F;router-link&gt;    &lt;router-view&gt;&lt;&#x2F;router-view&gt;  &lt;!-- 渲染占位的地方 --&gt;  &lt;&#x2F;div&gt;&lt;&#x2F;template&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js">修改linkActiveClass<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token comment">//4.配置路由和组件之间的关系</span>  routes<span class="token punctuation">,</span>  <span class="token literal-property property">mode</span><span class="token operator">:</span><span class="token string">"history"</span><span class="token punctuation">,</span>  <span class="token literal-property property">linkActiveClass</span><span class="token operator">:</span><span class="token string">'active'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>所有的route<span class="token operator">-</span>link 标签后面都会加active<span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"router-link-exact-active active"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="5-3-5-button-代码实现路由跳转-5-8-1-里面也有一种不同的方式"><a href="#5-3-5-button-代码实现路由跳转-5-8-1-里面也有一种不同的方式" class="headerlink" title="5.3.5 button - 代码实现路由跳转  5.8.1 里面也有一种不同的方式"></a>5.3.5 button - 代码实现路由跳转  5.8.1 里面也有一种不同的方式</h5><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;  &lt;div id&#x3D;&quot;app&quot;&gt;    &lt;h2&gt;哈哈&lt;&#x2F;h2&gt;    &lt;button @click&#x3D;&quot;homeClick&quot;&gt;首页&lt;&#x2F;button&gt;    &lt;button @click&#x3D;&quot;aboutClick&quot;&gt;关于&lt;&#x2F;button&gt;    &lt;router-view&gt;&lt;&#x2F;router-view&gt;  &lt;!-- 渲染站位的地方 --&gt;  &lt;&#x2F;div&gt;&lt;&#x2F;template&gt;&lt;script lang&#x3D;&quot;ts&quot;&gt;export default(&#123;  name:&quot;App&quot;,  methods:&#123;    homeClick()&#123;      &#x2F;&#x2F;通过代码的方式修改路径 vue-router      &#x2F;&#x2F;this.$router.push(&#39;&#x2F;home&#39;)      this.$router.replace(&#39;&#x2F;home&#39;)    &#125;,    aboutClick()&#123;      &#x2F;&#x2F;this.$router.push(&#39;&#x2F;about&#39;)      this.$router.replace(&#39;&#x2F;about&#39;)    &#125;  &#125;  &#125;)&lt;&#x2F;script&gt;&lt;style scoped&gt;.active&#123;  color: red;&#125;&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-4-0-动态路由"><a href="#5-4-0-动态路由" class="headerlink" title="5.4.0 动态路由"></a>5.4.0 动态路由</h4><ul><li>在某些情况下，一个页面的path路径是不确定的，比如我们进入用户界面时，希望时如下的路径：<ul><li>&#x2F;user&#x2F;aaa 或 &#x2F;user&#x2F;bbb</li><li>除了有前面的&#x2F;user之外，后面还跟上了用户的ID</li><li>这种path和Component的匹配关系，我们称之为动态路由(也是路由传递数据的一种方式)</li></ul></li></ul><h5 id="一点注意的细节"><a href="#一点注意的细节" class="headerlink" title="一点注意的细节"></a>一点注意的细节</h5><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">this</span><span class="token punctuation">.</span>route   <span class="token comment">//当前的路由   一个是用来获取路由信息的</span><span class="token keyword">this</span><span class="token punctuation">.</span>router  <span class="token comment">//路由器      一个是用来操作路由的</span>$routeroute是路由信息对象，里面主要包含路由的一些基本信息，包括name、meta、path、hash、query、params、fullPath、matched、redirectedFrom$routerrouter是VueRouter的实例，包含了一些路由的跳转方法，钩子函数等<span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>cnblogs<span class="token punctuation">.</span>com<span class="token operator">/</span>csuwujing<span class="token operator">/</span>p<span class="token operator">/</span><span class="token number">9962974</span><span class="token punctuation">.</span>html <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-23_11-52-44.png"></p><h4 id="5-5-0-打包文件的解析"><a href="#5-5-0-打包文件的解析" class="headerlink" title="5.5.0 打包文件的解析"></a>5.5.0 打包文件的解析</h4><p><a href="https://www.bilibili.com/video/BV15741177Eh?p=109">https://www.bilibili.com/video/BV15741177Eh?p=109</a>   讲底层-听不懂，</p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-23_15-27-39.png"></p><ol><li>css文件夹</li></ol><ul><li>css文件是项目要用到的css文件,当你做webpack打包的时候，会把所有的css样式打包到这里</li></ul><ol start="2"><li>js文件夹</li></ol><ul><li>app.js放的是项目中各个页面的逻辑代码，将格式进行了压缩。</li><li>chunk-vendors.js:放的是通过import包导入的第三方依赖包。防止该文件体积过大，可以使用webpack的externals配置。凡是声明在externals中的第三方依赖包，都不会被打包。同时需要在index.html文件的头部，添加CDN资源引用。</li><li>其他.js文件是使用路由懒加载打包后的文件，按需导入路由，文件的名字是路由懒加载配置中的分组名称。</li><li>.js.map依然是一个Source map文件，Source map就是一个信息文件，里面储存着位置信息，转换后的代码的每一个位置，所对应的转换前的位置。 项目打包后，代码都是经过压缩加密的，如果运行时报错，输出的错误信息无法准确得知是哪里的代码报错。有了map就可以像未加密的代码一样，准确的输出是哪一行哪一列有错，方便我们开发的时候做调试使用。</li></ul><h4 id="5-6-0-路由的懒加载"><a href="#5-6-0-路由的懒加载" class="headerlink" title="5.6.0 路由的懒加载"></a>5.6.0 路由的懒加载</h4><ul><li><p>什么是懒加载</p><ul><li>官方给出了解释:<ul><li>当打包构建应用时，Javascript包会变得非常大，影响页面加载。</li><li>口如果我们能把不同路由对应的组件分割成不同的代码块，然后当路由被访问的时候才加载对应组件，这样就更加高效了</li></ul></li><li>官方在说什么呢?<ul><li>首先,我们知道路由中通常会定义很多不同的页面.</li><li>这个页面最后被打包在哪里呢?—般情况下,是放在一个js文件中.口但是,页面这么多放在一个js文件中,必然会造成这个页面非常的大.</li><li>如果我们一次性从服务器请求下来这个页面,可能需要花费一定的时间,甚至用户的电脑上还出现了短暂情况.</li><li>如何避免这种情况呢?使用路由懒加载就可以了.</li></ul></li><li>路由懒加载做了什么?<ul><li>路由懒加载的主要作用就是将路由对应的组件打包成一个个的js代码块.</li><li>只有在这个路由被访问到的时候,才加载对应的组件</li></ul></li></ul></li><li><p>路由懒加载的效果</p><ul><li><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-23_15-45-20.png"></li></ul></li><li><p>懒加载的方式</p><ul><li><p>方式一：结合Vue的异步组件和webpack的代码分析</p><ul><li>~~~又长右臭<br>const Home &#x3D; resolve &#x3D;&gt; { require.ensure([ ‘ ..&#x2F;components&#x2F;Home. vue’],() &#x3D;&gt;{resolve(require( ‘ ..&#x2F;components&#x2F;Home.vue’ )) })}; <pre class="line-numbers language-none"><code class="language-none">* 方式二：AMD写法  * ~~~    const About &#x3D; resolve &#x3D;&gt; require([ &#39; ..&#x2F;components&#x2F;About.vue&#39;],resolve);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>方式三：在ES6中，我们可以有更加简单的写法来组织Vue异步组件和Webpack的代码的分割</p><ul><li>~~~js<br>const Home &#x3D; () &#x3D;&gt; import(‘..&#x2F;components&#x2F;Home.vue’)<pre class="line-numbers language-none"><code class="language-none">#### 5.7.0 认识嵌套路由* 嵌套路由是一个很常见的功能  * 比如在home页面中，我门希望通过&#x2F;home&#x2F;news和&#x2F;home&#x2F;message访问一些内容  * 一个路径眏射一个组件，访问这两个路径也会分别渲染两个组件.* 路径和组件的关系如下  * ![]( http:&#x2F;&#x2F;statusproject.gitee.io&#x2F;import-small-blog&#x2F;static&#x2F;VueJs-study&#x2F;Snipaste_2020-12-23_16-00-44.png)* 实现方式-过程  * ![]( http:&#x2F;&#x2F;statusproject.gitee.io&#x2F;import-small-blog&#x2F;static&#x2F;VueJs-study&#x2F;Snipaste_2020-12-23_16-30-28.png)  #### 5.8.0 vue-router - 参数传递###### 5.8.1 传递参数的方式* 传递参数主要有两种类型: params和queryparams的类型:  * params的类型 -              见 5.4.0 - 动态路由    * 配置路由格式:  &lt;span style&#x3D;&quot;color:red&quot;&gt;&#x2F;router&#x2F;:id&lt;&#x2F;span&gt;    * 传递的方式:    &lt;span style&#x3D;&quot;color:red&quot;&gt;在path后面跟上对应的值&lt;&#x2F;span&gt;    * 传递后形成的路径:   &lt;span style&#x3D;&quot;color:red&quot;&gt; &#x2F;router&#x2F;123,&#x2F;router&#x2F;abc&lt;&#x2F;span&gt;  * query的类型    * 配置路由格式：&lt;span style&#x3D;&quot;color:red&quot;&gt; &#x2F;router,也就是普通配置&lt;&#x2F;span&gt;    * 传递的方式: 对象中使用了&lt;span style&#x3D;&quot;color:red&quot;&gt; query的key作为传递方式&lt;&#x2F;span&gt;    * 传递后形成的路径: &lt;span style&#x3D;&quot;color:red&quot;&gt;  &#x2F;router?id&#x3D;123, &#x2F;router?id&#x3D;abc&lt;&#x2F;span&gt;![]( http:&#x2F;&#x2F;statusproject.gitee.io&#x2F;import-small-blog&#x2F;static&#x2F;VueJs-study&#x2F;Snipaste_2020-12-23_17-16-51.png)button -代码实现参数传递~~~vue&lt;button @click&#x3D;&quot;userClick&quot;&gt;用户&lt;&#x2F;button&gt;&lt;button @click&#x3D;&quot;profileClick&quot;&gt;档案&lt;&#x2F;button&gt;&lt;script&gt;export default(&#123;  name:&quot;App&quot;,  data()&#123;    return&#123;      usesrid:&#39;zhangsan&#39;,    &#125;  &#125;,  methods:&#123;    userClick()&#123;      this.$router.push(&#39;&#x2F;user&#x2F;&#39; + this.usesrid)    &#125;,    profileClick()&#123;      this.$router.push(&#123;        path: &#39;&#x2F;profile&#39;,        query:&#123;          name: &#39;kobe&#39;,          age:18,          height:1.88        &#125;      &#125;)    &#125;,&#125;)&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul></li></ul><h6 id="5-8-2-学懂了-在来看-router-和-route-的源码-现在知道怎么用就行了。"><a href="#5-8-2-学懂了-在来看-router-和-route-的源码-现在知道怎么用就行了。" class="headerlink" title="5.8.2 学懂了 在来看 $router  和  $route 的源码 - 现在知道怎么用就行了。"></a>5.8.2 学懂了 在来看 $router  和  $route 的源码 - 现在知道怎么用就行了。</h6><p>$router  和  $route  的区别： <a href="https://www.cnblogs.com/csuwujing/p/9962974.html">https://www.cnblogs.com/csuwujing/p/9962974.html</a> </p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-23_18-18-54.png"></p><p><a href="https://www.bilibili.com/video/BV15741177Eh?p=114">https://www.bilibili.com/video/BV15741177Eh?p=114</a></p><h4 id="5-9-0-导航守卫"><a href="#5-9-0-导航守卫" class="headerlink" title="5.9.0 导航守卫"></a>5.9.0 导航守卫</h4><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-23_21-27-44.png"></p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-23_21-28-30.png" alt="Snipaste_2020-12-23_21-28-30"></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token comment">//3.要vue点出 所以要导入vue</span><span class="token keyword">import</span> VueRouter <span class="token keyword">from</span> <span class="token string">'vue-router'</span>  <span class="token comment">//1.配置路由相关信息</span><span class="token comment">/* import Home from '../components/Home'import About from '../components/About'import User from '../components/User' */</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VueRouter<span class="token punctuation">)</span>  <span class="token comment">//2.通过Vue.use(插件)，安装插件 - 要vue点出 所以要导入vue</span><span class="token comment">//懒加载</span><span class="token keyword">const</span> <span class="token function-variable function">Home</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../components/Home.vue'</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token function-variable function">About</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../components/About.vue'</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token function-variable function">User</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../components/User.vue'</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token function-variable function">HomeNew</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../components/HomeNew.vue'</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token function-variable function">HomeMessage</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../components/HomeMessage.vue'</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token function-variable function">Profile</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../components/Profile.vue'</span><span class="token punctuation">)</span><span class="token comment">//创建VueRouter对象</span><span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span>    <span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'/'</span><span class="token punctuation">,</span>    <span class="token literal-property property">redirect</span><span class="token operator">:</span><span class="token string">'/about'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span>    <span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'/profile'</span><span class="token punctuation">,</span>    <span class="token literal-property property">component</span><span class="token operator">:</span>Profile<span class="token punctuation">,</span>    <span class="token literal-property property">meta</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">title</span><span class="token operator">:</span><span class="token string">'档案'</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  routes<span class="token punctuation">,</span>  <span class="token literal-property property">mode</span><span class="token operator">:</span><span class="token string">"history"</span><span class="token punctuation">,</span>  <span class="token literal-property property">linkActiveClass</span><span class="token operator">:</span><span class="token string">'active'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 前置守位(guard)</span>router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span>from<span class="token punctuation">,</span>next</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">//从from跳转到to</span>   document<span class="token punctuation">.</span>title<span class="token operator">=</span> to<span class="token punctuation">.</span>matched<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>title   <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> router <span class="token comment">//5.在main.js导入 这里就要导出</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-23_21-28-30.png"></p><p>更多守卫：以后要实现业务逻辑的时候可以来看看</p><pre class="line-numbers language-官网" data-language="官网"><code class="language-官网">https:&#x2F;&#x2F;router.vuejs.org&#x2F;zh&#x2F;guide&#x2F;advanced&#x2F;navigation-guards.html#%E8%B7%AF%E7%94%B1%E7%8B%AC%E4%BA%AB%E7%9A%84%E5%AE%88%E5%8D%AB<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="5-10-0-vue-router-keep-alive属性介绍"><a href="#5-10-0-vue-router-keep-alive属性介绍" class="headerlink" title="5.10.0 vue-router-keep-alive属性介绍"></a>5.10.0 vue-router-keep-alive属性介绍</h4><p><a href="https://www.bilibili.com/video/BV15741177Eh?p=117">https://www.bilibili.com/video/BV15741177Eh?p=117</a></p><ul><li>听不懂，这里主要讲了<ul><li>1.生命周期函数</li><li>2.keep-alive-&gt; activated&#x2F;deactivated</li><li>3.首页中使用path属性记录离开时的路径，在beforeRouteLeave中记录</li></ul></li></ul><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-23_22-45-28.png"></p><h2 id="TabBar实现-可以用Mint-UI"><a href="#TabBar实现-可以用Mint-UI" class="headerlink" title="@@@@@ TabBar实现 - 可以用Mint-UI"></a>@@@@@ TabBar实现 - 可以用Mint-UI</h2><p>回来补了 -  2021年1月3号</p><h3 id="1-0-0-实现的步骤-思路"><a href="#1-0-0-实现的步骤-思路" class="headerlink" title="@-1.0.0 实现的步骤 - 思路"></a>@-1.0.0 实现的步骤 - 思路</h3><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-03_16-42-32.png"></p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-03_16-48-38.png"></p><h4 id="2-0-基本结构的搭建"><a href="#2-0-基本结构的搭建" class="headerlink" title="@-2.0 基本结构的搭建"></a>@-2.0 基本结构的搭建</h4><p>样式，布局 <img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-03_17-57-02.png"></p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;  &lt;div id&#x3D;&quot;app&quot;&gt;    &lt;div id&#x3D;&quot;tab-bar&quot;&gt;       &lt;div class&#x3D;&quot;tab-bar-item&quot;&gt;首页&lt;&#x2F;div&gt;      &lt;div class&#x3D;&quot;tab-bar-item&quot;&gt;分类&lt;&#x2F;div&gt;      &lt;div class&#x3D;&quot;tab-bar-item&quot;&gt;购物车&lt;&#x2F;div&gt;      &lt;div class&#x3D;&quot;tab-bar-item&quot;&gt;我的&lt;&#x2F;div&gt;    &lt;&#x2F;div&gt;  &lt;&#x2F;div&gt;&lt;&#x2F;template&gt;&lt;style&gt;  @import url(&#39;.&#x2F;assets&#x2F;css&#x2F;base.css&#39;); &#x2F;* 引用公共资源里的东西 *&#x2F;  #tab-bar&#123;    display: flex;    background-color:#ccc;    position: fixed;    left: 0;    right: 0;    bottom: 0;    box-shadow: 0px -3px 1px rgba(157, 236, 232, 0.5)  &#125;  .tab-bar-item&#123;    flex: 1;    text-align: center;    height: 49px; &#x2F;* tab-bar 的高度一般都是49 *&#x2F;  &#125;&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-0-tabber-TabBarItem组件封装"><a href="#3-0-tabber-TabBarItem组件封装" class="headerlink" title="@-3.0 tabber-TabBarItem组件封装"></a>@-3.0 tabber-TabBarItem组件封装</h4><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-03_21-57-50.png"></p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-03_22-01-47.png"></p><h4 id="4-0-tabbar-给TabbarItem传入active图片"><a href="#4-0-tabbar-给TabbarItem传入active图片" class="headerlink" title="@-4.0 tabbar-给TabbarItem传入active图片"></a>@-4.0 tabbar-给TabbarItem传入active图片</h4><p>结合v-if v-else v-bind:class&#x3D;”{ active:isActive }” 来设置样式</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;  &lt;div id&#x3D;&quot;app&quot;&gt;    &lt;tabbar&gt;      &lt;tabbar-item&gt;          &lt;template v-slot:item-icon&gt;          &lt;img  src&#x3D;&quot;.&#x2F;assets&#x2F;img&#x2F;tabbar&#x2F;home.svg&quot; alt&#x3D;&quot;&quot;&gt;                       &lt;&#x2F;template&gt;         &lt;template v-slot:item-icon-active&gt;          &lt;img src&#x3D;&quot;.&#x2F;assets&#x2F;img&#x2F;tabbar&#x2F;home_active.svg&quot; alt&#x3D;&quot;&quot;&gt;         &lt;&#x2F;template&gt;              &lt;template v-slot:item-text&gt;          &lt;div&gt;首页&lt;&#x2F;div&gt;         &lt;&#x2F;template&gt;        &lt;&#x2F;tabbar-item&gt;      &lt;tabbar-item&gt;         &lt;template v-slot:item-icon&gt;          &lt;img  src&#x3D;&quot;.&#x2F;assets&#x2F;img&#x2F;tabbar&#x2F;category.svg&quot; alt&#x3D;&quot;&quot;&gt;                       &lt;&#x2F;template&gt;         &lt;template v-slot:item-icon-active&gt;          &lt;img src&#x3D;&quot;.&#x2F;assets&#x2F;img&#x2F;tabbar&#x2F;category_active.svg&quot; alt&#x3D;&quot;&quot;&gt;         &lt;&#x2F;template&gt;              &lt;template v-slot:item-text&gt;          &lt;div&gt;分类&lt;&#x2F;div&gt;         &lt;&#x2F;template&gt;       &lt;&#x2F;tabbar-item&gt;      &lt;tabbar-item&gt;          &lt;template v-slot:item-icon&gt;          &lt;img  src&#x3D;&quot;.&#x2F;assets&#x2F;img&#x2F;tabbar&#x2F;cart.svg&quot; alt&#x3D;&quot;&quot;&gt;                       &lt;&#x2F;template&gt;         &lt;template v-slot:item-icon-active&gt;          &lt;img src&#x3D;&quot;.&#x2F;assets&#x2F;img&#x2F;tabbar&#x2F;cart_active.svg&quot; alt&#x3D;&quot;&quot;&gt;         &lt;&#x2F;template&gt;              &lt;template v-slot:item-text&gt;          &lt;div&gt;商城&lt;&#x2F;div&gt;         &lt;&#x2F;template&gt;       &lt;&#x2F;tabbar-item&gt;      &lt;tabbar-item&gt;          &lt;template v-slot:item-icon&gt;          &lt;img  src&#x3D;&quot;.&#x2F;assets&#x2F;img&#x2F;tabbar&#x2F;profile.svg&quot; alt&#x3D;&quot;&quot;&gt;                       &lt;&#x2F;template&gt;         &lt;template v-slot:item-icon-active&gt;          &lt;img src&#x3D;&quot;.&#x2F;assets&#x2F;img&#x2F;tabbar&#x2F;profile_active.svg&quot; alt&#x3D;&quot;&quot;&gt;         &lt;&#x2F;template&gt;              &lt;template v-slot:item-text&gt;          &lt;div&gt;我的&lt;&#x2F;div&gt;         &lt;&#x2F;template&gt;       &lt;&#x2F;tabbar-item&gt;    &lt;&#x2F;tabbar&gt;  &lt;&#x2F;div&gt;&lt;&#x2F;template&gt;&lt;script&gt;import Tabbar from &#39;.&#x2F;components&#x2F;tabbar&#x2F;Tabbar.vue&#39;import TabbarItem from &#39;.&#x2F;components&#x2F;tabbar&#x2F;TabbarItem.vue&#39;export default &#123;  name:&quot;App&quot;,  data()&#123;    return &#123;          &#125;  &#125;,  components:&#123;    Tabbar,    TabbarItem  &#125;&#125;&lt;&#x2F;script&gt;&lt;style&gt;  @import url(&#39;.&#x2F;assets&#x2F;css&#x2F;base.css&#39;); &#x2F;* 引用公共资源里的东西 *&#x2F;   .tab-bar-item img&#123;    width: 24px;    height: 24px;    margin-top: 3px;    vertical-align: middle;    margin-bottom: 3px;  &#125; &lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-0-tabbar-TabbarItem和路由结合效果"><a href="#5-0-tabbar-TabbarItem和路由结合效果" class="headerlink" title="@-5.0 tabbar-TabbarItem和路由结合效果"></a>@-5.0 tabbar-TabbarItem和路由结合效果</h4><p>父传子 ， 路由懒加载，</p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-03_23-36-44.png"></p><h4 id="6-0-像webAPI里的排他事件"><a href="#6-0-像webAPI里的排他事件" class="headerlink" title="@-6.0 像webAPI里的排他事件"></a>@-6.0 像webAPI里的排他事件</h4><p>计算属性，父传子 .indexOf()</p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-03_23-59-30.png"></p><h2 id="promise-——-掌握"><a href="#promise-——-掌握" class="headerlink" title="@@@@@ promise —— 掌握"></a>@@@@@ promise —— 掌握</h2><h4 id="1-0-0-什么是promise"><a href="#1-0-0-什么是promise" class="headerlink" title="@-1.0.0 什么是promise"></a>@-1.0.0 什么是promise</h4><ul><li>ES6中一个非常重要和好用的特性就是Promise<ul><li>但是初次接触Promise会一脸懵逼，这TM是什么东西?</li><li>看看官方或者一些文章对它的介绍和用法，也是一头雾水。</li></ul></li><li>Promise到底是做什么的呢?<ul><li><span style="color:red;">Promise是异步编程的一种解决方案。</span></li></ul></li><li>那什么时候我们会来处理异步事件呢?<ul><li>一种很常见的场景应该就是网络请求了。</li><li>我们封装一个网络请求的函数，因为不能立即拿到结果，所以不能像简单的3+4&#x3D;7一样将结果返回。</li><li>所以往往我们会传入另外一个函数，在数据请求成功时，将数据通过传入的函数回调出去。</li><li>如果只是一个简单的网络请求，那么这种方案不会给我们带来很大的麻烦。</li></ul></li><li>但是，当网络请求非常复杂时，就会出现回调地狱。<ul><li>OK，我以一个非常夸张的案例来说明。</li></ul></li></ul><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-24_10-09-13.png"></p><h6 id="1-0-1-定义器异步事件-——-掌握"><a href="#1-0-1-定义器异步事件-——-掌握" class="headerlink" title="1.0.1 定义器异步事件 —— 掌握"></a>1.0.1 定义器异步事件 —— 掌握</h6><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-24_10-11-25.png"></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"> <span class="token comment">//什么情况下会用到Promise？ </span> <span class="token comment">//一般情况下是有异步操作时，使用promise对这个异步操作进行封装</span> <span class="token comment">// new -> 构造函数(1.保存了一些状态信息 2.执行传入的函数)</span><span class="token comment">//在执行传入的回调函数时，会传入两个参数，resolve，reject，本身又是函数</span>        <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                <span class="token comment">//成功的时候调用resolve</span>                <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">'hello world'</span><span class="token punctuation">)</span>                <span class="token comment">//失败的时候调用reject</span>                <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">'error message'</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>   <span class="token comment">//成功</span>                <span class="token comment">//1.100行的处理代码</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>   <span class="token comment">//失败</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>               <span class="token comment">//就是要优雅的处理异步处理</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="1-0-2-promise三种状态-——-掌握"><a href="#1-0-2-promise三种状态-——-掌握" class="headerlink" title="1.0.2 promise三种状态 —— 掌握"></a>1.0.2 promise三种状态 —— 掌握</h6><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-24_11-31-23.png"></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">'hello vue.js'</span><span class="token punctuation">)</span>                   <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">'123'</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">321</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">//then(success,error)   //源码里会有Promise的三种状态</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="1-0-3-promise-链式调用-简写-简写-再简写-——-掌握"><a href="#1-0-3-promise-链式调用-简写-简写-再简写-——-掌握" class="headerlink" title="1.0.3 promise 链式调用-简写-简写-再简写 —— 掌握"></a>1.0.3 promise 链式调用-简写-简写-再简写 —— 掌握</h6><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// wrapped into</span>        <span class="token comment">// 网络请求： aaa -> 自己处理（10行）</span>        <span class="token comment">// 处理: aaa 111 -> 自己处理（10行）</span>        <span class="token comment">// 处理：aaa111222 -> 自己处理</span>        <span class="token comment">//new Promise(resolve => resolve(结果))&#123;&#125; 简写</span>        <span class="token comment">/* new Promise((resolve,reject) => &#123;            setTimeout(() => &#123;                resolve('aaa');            &#125;,1000)        &#125;).then(res => &#123;            //1.自己处理10行代码            console.log(res,'第一层的10行处理代码');            //2.对结果进行第一次处理            return new Promise((resolve) => &#123;                resolve(res+'111')            &#125;)        &#125;).then(res => &#123;            console.log(res,'第二层的10行处理代码');            return new Promise((resolve) => &#123;                resolve(res+'222')            &#125;)        &#125;).then(res => &#123;            console.log(res,"第三层的10行处理代码");        &#125;) */</span>        <span class="token comment">//简写return new Promise((resolve) => &#123;&#125;</span>        <span class="token comment">/* new Promise((resolve,reject) => &#123;            setTimeout(() => &#123;                resolve('aaa');            &#125;,1000)        &#125;).then(res => &#123;            //1.自己处理10行代码            console.log(res,'第一层的10行处理代码');            //2.对结果进行第一次处理            return Promise.resolve(res+'111')        &#125;).then(res => &#123;            console.log(res,'第二层的10行处理代码');            return Promise.resolve(res+'222')        &#125;).then(res => &#123;            console.log(res,"第三层的10行处理代码");        &#125;) */</span>        <span class="token comment">//3.省略到new Promise </span>        <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">'aaa'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token comment">//1.自己处理10行代码</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span><span class="token string">'第一层的10行处理代码'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//2.对结果进行第一次处理</span>            <span class="token comment">//return res+'111' //success</span>            <span class="token keyword">throw</span> <span class="token string">'message'</span>     <span class="token comment">//error</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span><span class="token string">'第二层的10行处理代码'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> res<span class="token operator">+</span><span class="token string">'222'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span><span class="token string">"第三层的10行处理代码"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=></span><span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-25_09-28-21.png"></p><h6 id="1-0-4-promise的all方法的使用"><a href="#1-0-4-promise的all方法的使用" class="headerlink" title="1.0.4  promise的all方法的使用"></a>1.0.4  promise的all方法的使用</h6><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>script<span class="token operator">></span>       <span class="token comment">//[]迭代器</span>       Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>           <span class="token comment">//内部自动判断两个</span>           <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>              <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                   <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">'aaa'</span><span class="token punctuation">)</span>              <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">)</span>      <span class="token comment">//这个执行的时候</span>           <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>           <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>              <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                   <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">'bbb'</span><span class="token punctuation">)</span>              <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>       <span class="token comment">//这个执行的时候</span>           <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>       <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token comment">//都为true的时候执行</span>           console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>           console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>           console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>   <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="六、Vuex详解-像全局静态变量（单例模式）"><a href="#六、Vuex详解-像全局静态变量（单例模式）" class="headerlink" title="六、Vuex详解 - 像全局静态变量（单例模式）"></a>六、Vuex详解 - 像全局静态变量（单例模式）</h2><p><a href="https://vuex.vuejs.org/zh/">https://vuex.vuejs.org/zh/</a> </p><h4 id="6-0-0-什么是Vuex呢？——-理解"><a href="#6-0-0-什么是Vuex呢？——-理解" class="headerlink" title="6.0.0 什么是Vuex呢？—— 理解"></a>6.0.0 什么是Vuex呢？—— 理解</h4><ul><li>官方解释: Vuex是一个专为Vue.js 应用程序开发的状态管理模式。<ul><li>它采用<span style="color:red;">集中式存储管理</span>应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。</li><li>Vuex也集成到Vue的官方调试工具 <a href="https://github.com/vuejs/vue-devtools">devtools extension</a>，提供了诸如零配置的 time-travel调试、状态快照导入导出等高级调试功能。</li></ul></li><li>状态管理到底是什么？<ul><li>状态管理模式、集中式存储管理这些名词听起来就非常高大上，让人捉摸不透。</li><li>其实，你可以简单的将其看成把需要多个组件共享的变量全部存储在一个对象里面。</li><li>然后，将这个对象放在顶层的Vue实例中，让其他组件可以使用。</li><li>那么，多个组件是不是就可以共享这个对象中的所有变量属性了呢?</li></ul></li><li>等等，如果是这样的话，为什么官方还要专门出一个插件Vuex呢?<ul><li>难道我们不能自己封装一个对象来管理吗?当然可以，只是我们要先想想VueJS带给我们最大的便利是什么呢?没错，就是响应式。</li><li>如果你自己封装实现一个对象能不能保证它里面所有的属性做到响应式呢﹖当然也可以，只是自己封装可能稍微麻烦一些。</li><li>不用怀疑，Vuex就是为了提供这样一个在多个组件间共享状态的插件，用它就可以了。</li></ul></li></ul><h6 id="6-0-1管理什么状态呢？——-理解"><a href="#6-0-1管理什么状态呢？——-理解" class="headerlink" title="6.0.1管理什么状态呢？—— 理解"></a>6.0.1管理什么状态呢？—— 理解</h6><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-25_10-55-06.png"></p><p>Flux 架构就像眼镜：您自会知道什么时候需要它。    </p><h5 id="6-1-0-Vuex-单界面到多界面状态管理切换"><a href="#6-1-0-Vuex-单界面到多界面状态管理切换" class="headerlink" title="6.1.0 Vuex-单界面到多界面状态管理切换"></a>6.1.0 Vuex-单界面到多界面状态管理切换</h5><h6 id="6-1-1-单界面的状态管理"><a href="#6-1-1-单界面的状态管理" class="headerlink" title="6.1.1 单界面的状态管理"></a>6.1.1 单界面的状态管理</h6><ul><li>我们知道，要在单个组件中进行状态管理是一件非常简单的事情<ul><li>什么意思呢？我们来看下面的图片</li></ul></li></ul><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-25_14-26-37.png"></p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-25_15-19-22.png"></p><h6 id="6-1-2-多界面的状态管理"><a href="#6-1-2-多界面的状态管理" class="headerlink" title="6.1.2 多界面的状态管理"></a>6.1.2 多界面的状态管理</h6><ul><li>可以通过父子组件来传输，但是这里会有直接关系，没有直接关系的话这么办呢？</li></ul><pre class="line-numbers language-npm" data-language="npm"><code class="language-npm">npm install vuex --save   脚手架<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-25_15-20-31.png"></p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-25_15-32-21.png"></p><h6 id="6-1-3-vuex的devtools和mutations"><a href="#6-1-3-vuex的devtools和mutations" class="headerlink" title="6.1.3 vuex的devtools和mutations"></a>6.1.3 vuex的devtools和mutations</h6><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-25_16-14-55.png"></p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-25_16-17-13.png"></p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-25_16-16-44.png"></p><h4 id="6-2-0-Vuex核心概念"><a href="#6-2-0-Vuex核心概念" class="headerlink" title="6.2.0 Vuex核心概念"></a>6.2.0 Vuex核心概念</h4><ul><li>Vuex有几个比较核心的概念:<ul><li>state        状态</li><li>Getter</li><li>Mutation </li><li>Action</li><li>Module</li></ul></li></ul><h6 id="6-2-1-State单一状态树-——-就是官方最好只使用一次Store对象"><a href="#6-2-1-State单一状态树-——-就是官方最好只使用一次Store对象" class="headerlink" title="6.2.1 State单一状态树  —— 就是官方最好只使用一次Store对象"></a>6.2.1 State单一状态树  —— 就是官方最好只使用一次Store对象</h6><ul><li>vuex提出使用单—状态树,什么是单—状态树呢?<ul><li>英文名称是Single Source of Truth，也可以翻译成单一数据源。</li></ul></li><li>但是，它是什么呢?我们来看—个生活中的例子。<ul><li>OK，我用一个生活中的例了做一个简单的类比。</li><li>我们知道，在国内我们有很多的信息需要被记录，比如上学时的个人档案，工作后的社保记录，公积金记录，结婚后的婚姻信息，以及其他相关的户口、医疗、文凭、房产记录等等(还有很多信息）。</li><li>这些信息被分散在很多地方进行管理，有一天你需要办某个业务时(比如入户某个城市)，你会发现你需要到各个对应的工作地点去打印、盖章各种资料信息，最后到一个地方提交证明你的信息无误。</li><li>这种保存信息的方案，不仅仅低效，而且不方便管理，以及日后的维护也是一个庞大的工作(需要大量的各个部门的人力来维护，当然国家目前已经在完善我们的这个系统了)。</li></ul></li><li>这个和我们在应用开发中比较类似∶<ul><li>如果你的状态信息是保存到多个Store对象中的，那么之后的管理和维护等等都会变得特别困难。</li><li>所以Vuex也使用了单—状态树来管理应用层级的全部状态。</li><li>单一状态树能够让我们最直接的方式找到某个状态的片段，而且在之后的维护和调试过程中，也可以非常方便的管理和维护。</li></ul></li></ul><h6 id="6-2-2-Getters基本使用-有点像java里的entity包里的set"><a href="#6-2-2-Getters基本使用-有点像java里的entity包里的set" class="headerlink" title="6.2.2 Getters基本使用   -    有点像java里的entity包里的set"></a>6.2.2 Getters基本使用   -    有点像java里的entity包里的set</h6><ul><li><p>直接上代码</p><ul><li>~~~Vue<h2>-----App:getters内容相关信息-----</h2>{}上传不了。。。。。   <h2>{$store.getters.powerCounter}</h2>     <h2>年龄大于10：{$store.getters.more20stu}</h2>    <h2>传参获取：{$store.getters.moreAgestu(1)}</h2><pre class="line-numbers language-none"><code class="language-none">  * ~~~js  import &#123; createStore &#125; from &#39;vuex&#39;    export default createStore(&#123;    state: &#123;      count:1000,      students:[        &#123;id:1,name:&#39;where&#39;,age:18&#125;,        &#123;id:2,name:&#39;wher&#39;,age:8&#125;,        &#123;id:3,name:&#39;whee&#39;,age:1&#125;,        &#123;id:4,name:&#39;whre&#39;,age:15&#125;,      ]    &#125;,    mutations: &#123;      &#x2F;&#x2F;方法      increment(state)&#123;        state.count++;      &#125;,      decrement(state)&#123;        state.count--;      &#125;    &#125;,    actions: &#123;    &#125;,    modules: &#123;    &#125;,    getters:&#123;  &#x2F;&#x2F;有点像java里的entity包里的set      powerCounter(state)&#123;        return state.count * state.count      &#125;,      more20stu(state)&#123;        return state.students.filter(s &#x3D;&gt; s.age &gt; 10)      &#125;,      more20stuLength(state,getters)&#123;        return getters.more20stu.length;      &#125;,      moreAgestu(state)&#123;       &#x2F;*  return function(age)&#123;            return state.students.filter((s) &#x3D;&gt;  &#123; return s.age &gt; age &#125;)        &#125; *&#x2F;        return age &#x3D;&gt;&#123;          return state.students.filter(s &#x3D;&gt; &#123; return s.age&gt;age &#125; )        &#125;      &#125;    &#125;  &#125;)  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h6 id="6-2-3-Mutation状态更新"><a href="#6-2-3-Mutation状态更新" class="headerlink" title="6.2.3 Mutation状态更新"></a>6.2.3 Mutation状态更新</h6><ul><li><p>Vuex的store状态的更新唯一方式：提交Mutation</p></li><li><p>Mutation主要包括两部分：</p><ul><li>字符串的事件类型（type）</li><li>一个回调函数（handler），该回调函数的第一个参数就是state</li></ul></li><li><p>mutation的定义方式：</p><ul><li>~~~index.js<br>mutations: {<br>  increment(state){<br>state.count++;<br>  }<br>}<pre class="line-numbers language-none"><code class="language-none">* 通过mutation更新  * ~~~App.vue    methods: &#123;          addtion()&#123;            this.$store.commit(&#39;increment&#39;)          &#125;,index.js          subtraction()&#123;            this.$store.commit(&#39;decrement&#39;)          &#125;        &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><p>传入参数：</p><p>定义：自己理解，就是它代参数传递的方式  专业名词负载（payload）</p><pre class="line-numbers language-none"><code class="language-none">mutations: &#123;    &#x2F;&#x2F;方法    increment(state)&#123;      state.count++;    &#125;,    decrement(state)&#123;      state.count--;    &#125;,    incrementCount(state,count)&#123;      state.count+&#x3D;count    &#125;,    &#x2F;&#x2F;  传入多个参数 - 用对象    addStudent(state,stu)&#123;      state.students.push(stu)    &#125;  &#125;,<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>更新：</p><pre class="line-numbers language-none"><code class="language-none">&lt;button @click&#x3D;&quot;add(5)&quot;&gt;+5&lt;&#x2F;button&gt;&lt;button @click&#x3D;&quot;add(10)&quot;&gt;+10&lt;&#x2F;button&gt;add(count)&#123;        this.$store.commit(&#39;incrementCount&#39;,count)&#125;,addStudent()&#123;        const stu&#x3D;&#123;id:5,name:&#39;1&#39;,age:12&#125;        this.$store.commit(&#39;addStudent&#39;,stu)&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="6-2-4-Mutation提交风格-type"><a href="#6-2-4-Mutation提交风格-type" class="headerlink" title="6.2.4 Mutation提交风格 - type"></a>6.2.4 Mutation提交风格 - type</h6><p>定义：</p><pre class="line-numbers language-mutation" data-language="mutation"><code class="language-mutation">incrementCount(state,payload)&#123;     state.count+&#x3D;payload.count&#125;,<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>更新：</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">add(count)&#123;        this.$store.commit(&#123;          type:&#39;incrementCount&#39;,          count, &#x2F;&#x2F;ES6语法-这种风格写法传入的是个对象         &#125;)      &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="6-2-5-Mutation响应规则"><a href="#6-2-5-Mutation响应规则" class="headerlink" title="6.2.5 Mutation响应规则"></a>6.2.5 Mutation响应规则</h6><ul><li><p><a href="https://www.bilibili.com/video/BV15741177Eh?p=137">https://www.bilibili.com/video/BV15741177Eh?p=137</a>  讲一些底层</p></li><li><p>Vuex的store中的state是响应式的，当state中的数据发生改变时，Vue组件会自动更新。</p></li><li><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-26_11-30-03.png"></p></li></ul><h6 id="6-2-6-Mutation-定义类型常量"><a href="#6-2-6-Mutation-定义类型常量" class="headerlink" title="6.2.6 Mutation 定义类型常量"></a>6.2.6 Mutation 定义类型常量</h6><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">INCREMENT</span> <span class="token operator">=</span> <span class="token string">'increment'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-index.js" data-language="index.js"><code class="language-index.js">import &#123; INCREMENT &#125; from &#39;.&#x2F;mutation&#39; mutations: &#123;    &#x2F;&#x2F;方法    [INCREMENT](state)&#123;      state.count++;    &#125;  &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">methods: &#123;      addtion()&#123;        this.$store.commit(INCREMENT)      &#125;    &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="6-2-7-Mutation同步函数"><a href="#6-2-7-Mutation同步函数" class="headerlink" title="6.2.7 Mutation同步函数"></a>6.2.7 Mutation同步函数</h6><ul><li><p>通常情况下，Vuex要求我们Mutation中的方法必须是同步的</p><p><span style="color:red;"></span></p><ul><li>主要的原因是当我们使用devtools时，可以devtools可以帮助我们捕捉mutation快照</li><li>但是如果是异步请求，那么devtools将不能很好的跟踪这个操作什么时候会被完成。</li></ul></li><li><p>比如我们之前的代码，当执行更新时，devtools中会有如下信息：图1</p></li></ul><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-26_14-25-46.png"></p><p>但是，又有特例，见下 - 官方推荐在这里</p><h6 id="※6-2-8-Action的基本定义"><a href="#※6-2-8-Action的基本定义" class="headerlink" title="※6.2.8 Action的基本定义"></a>※6.2.8 Action的基本定义</h6><p>跳 - 实现异步操作，有点绕，运用promise</p><p><a href="https://www.bilibili.com/video/BV15741177Eh?p=139">https://www.bilibili.com/video/BV15741177Eh?p=139</a></p><h6 id="6-2-9-Module的基本定义"><a href="#6-2-9-Module的基本定义" class="headerlink" title="6.2.9 Module的基本定义"></a>6.2.9 Module的基本定义</h6><ul><li>官网-文档 <a href="https://vuex.vuejs.org/zh/guide/modules.html">https://vuex.vuejs.org/zh/guide/modules.html</a></li><li>跳-感觉到可以自己看官方文档</li></ul><p>由于使用单一状态树，应用的所有状态会集中到一个比较大的对象。当应用变得非常复杂时，store 对象就有可能变得相当臃肿</p><ul><li>为了解决以上问题，Vuex 允许我们将 store 分割成<strong>模块（module）</strong>。每个模块拥有自己的 state、mutation、action、getter、甚至是嵌套子模块——从上至下进行同样方式的分割：</li></ul><h2 id="七、网络模块封装-网易云API"><a href="#七、网络模块封装-网易云API" class="headerlink" title="七、网络模块封装 - 网易云API"></a>七、网络模块封装 - 网易云API</h2><ul><li>主要内容<ul><li><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-27_15-00-17.png"></li></ul></li><li>选择什么网络模块？<ul><li><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-27_15-05-03.png"></li><li><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-27_15-08-13.png"></li><li><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-27_15-09-39.png"></li></ul></li></ul><h6 id="7-1-0-axiox请求方式"><a href="#7-1-0-axiox请求方式" class="headerlink" title="7.1.0 axiox请求方式"></a>7.1.0 axiox请求方式</h6><p>百度上找的：<a href="http://axios-js.com/zh-cn/docs/">http://axios-js.com/zh-cn/docs/</a></p><ol><li><a href="http://axios-js.com/zh-cn/docs/#axios-request-config">axios.request(config)</a></li><li>[axios.get(url<a href="http://axios-js.com/zh-cn/docs/#axios-get-url-config">, config])</a></li><li>[axios.delete(url<a href="http://axios-js.com/zh-cn/docs/#axios-delete-url-config">, config])</a></li><li>[axios.head(url<a href="http://axios-js.com/zh-cn/docs/#axios-head-url-config">, config])</a></li><li>[axios.options(url<a href="http://axios-js.com/zh-cn/docs/#axios-options-url-config">, config])</a></li><li>[axios.post(url<a href="http://axios-js.com/zh-cn/docs/#axios-post-url-data-config">, data[, config]])</a></li><li>[axios.put(url<a href="http://axios-js.com/zh-cn/docs/#axios-put-url-data-config">, data[, config]])</a></li><li>[axios.patch(url[, data<a href="http://axios-js.com/zh-cn/docs/#axios-patch-url-data-config">, confi</a></li></ol><h6 id="7-2-0-axios框架的基本使用"><a href="#7-2-0-axios框架的基本使用" class="headerlink" title="7.2.0 axios框架的基本使用"></a>7.2.0 axios框架的基本使用</h6><pre class="line-numbers language-npm" data-language="npm"><code class="language-npm">npm install axios --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-axios" data-language="axios"><code class="language-axios">axios(&#123;  url:&#39;https:&#x2F;&#x2F;httpbin.org&#x2F;headers&#39;,  &#x2F;&#x2F; 专门针对get请求的参数拼接  params :&#123;      type:&#39;pop&#39;,      page:1  &#125;&#125;).then(res &#x3D;&gt; &#123;  console.log(res)&#125;).catch(error &#x3D;&gt; &#123;  console.log(&quot;失败&quot;)&#125;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="7-3-0-axios发送并发请求"><a href="#7-3-0-axios发送并发请求" class="headerlink" title="7.3.0 axios发送并发请求"></a>7.3.0 axios发送并发请求</h6><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-27_16-50-16.png"></p><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;3.axios 发送并发请求axios.all([axios(&#123;  url:&#39;https:&#x2F;&#x2F;httpbin.org&#x2F;headers&#39;,&#125;),axios(&#123;  url:&#39;http:&#x2F;&#x2F;httpbin.org&#39;,&#125;)]).then(res &#x3D;&gt; &#123;   console.log(res)&#125;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="7-4-0-全局配置"><a href="#7-4-0-全局配置" class="headerlink" title="7.4.0 全局配置"></a>7.4.0 全局配置</h6><pre class="line-numbers language-none"><code class="language-none">axios.defaults.baseURL &#x3D; &#39;https:&#x2F;&#x2F;api.imjad.cn&#x2F;cloudmusic&#39;axios.defaults.timeout &#x3D; 5000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-27_20-58-42.png"></li></ul><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-27_20-59-21.png"></p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-27_21-07-49.png"></p><h6 id="7-5-0-axios的实例"><a href="#7-5-0-axios的实例" class="headerlink" title="7.5.0 axios的实例"></a>7.5.0 axios的实例</h6><ul><li>为什么要创建axios的实例呢？<ul><li>当我们从axios模块中导入对象时，使用的实例是默认的实例.</li><li>当给该实例设置一些默认配置时，这些配置就被固定下来</li><li>但是后续开发中，某些配置可能会不太一样。</li><li>比如某些请求需要使用特定的baseURL或者timeout或者content-Type等。</li><li>这个时候，我们就可以创建新的实例，并且传入属于该实例的配置信息。</li></ul></li></ul><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;4.创建对应的axios的实例const instancel &#x3D; axios.create(&#123;  baseURL: &#39;https:&#x2F;&#x2F;api.imjad.cn&#x2F;cloudmusic&#39;,  timeout: 5000&#125;)instancel(&#123;  url:&#39;&#x2F;&#39;,  params:&#123;    type:&#39;song&#39;,    id:1436910202,  &#125;&#125;).then(res &#x3D;&gt; &#123;  console.log(res);&#125;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="7-6-0-axios模块封装"><a href="#7-6-0-axios模块封装" class="headerlink" title="7.6.0 axios模块封装"></a>7.6.0 axios模块封装</h6><p>只能说妙啊：<a href="https://www.bilibili.com/video/BV15741177Eh?p=146">https://www.bilibili.com/video/BV15741177Eh?p=146</a></p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2020-12-27_22-30-40.png"></p><h6 id="7-7-0-如何使用拦截器"><a href="#7-7-0-如何使用拦截器" class="headerlink" title="7.7.0 如何使用拦截器"></a>7.7.0 如何使用拦截器</h6><p>请求拦截的作用</p><ul><li>1.比如config中的一些信息不符合服务器的要求</li><li>2.比如每次发送网络请求的时候，都希望在界面中显示一个请求图标</li><li>3.某些网络请求(比如登录（token）)，必须携带一些特殊的信息</li></ul><p><a href="https://www.bilibili.com/video/BV15741177Eh?p=147">https://www.bilibili.com/video/BV15741177Eh?p=147</a></p><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;2.axios的拦截器 - 请求拦截    instancel.interceptors.request.use(aaa &#x3D;&gt; &#123;        &#x2F;&#x2F;拦截了        &#x2F;&#x2F;作用： 1.比如config中的一些信息不符合服务器的要求        &#x2F;&#x2F;2.比如每次发送网络请求的时候，都希望在界面中显示一个请求图标        &#x2F;&#x2F;3.某些网络请求(比如登录（token）)，必须携带一些特殊的信息        &#x2F;&#x2F;console.log(aaa);        &#x2F;&#x2F;要返回        return aaa;    &#125;,err &#x3D;&gt; &#123;        &#x2F;&#x2F;console.log(err);    &#125;)    &#x2F;&#x2F;2.2 响应拦截    instancel.interceptors.response.use(aaa &#x3D;&gt; &#123;        console.log(aaa);        return aaa.data;    &#125;,err &#x3D;&gt; &#123;        console.log(err);    &#125;)    &#x2F;&#x2F;返回一个promise    return instancel(config)   &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="—————–基础知识完结—————-记得补完组件化处的代码和笔记"><a href="#—————–基础知识完结—————-记得补完组件化处的代码和笔记" class="headerlink" title="—————–基础知识完结—————- 记得补完组件化处的代码和笔记"></a>—————–基础知识完结—————- 记得补完组件化处的代码和笔记</h1><h2 id="八、项目实战"><a href="#八、项目实战" class="headerlink" title="八、项目实战"></a>八、项目实战</h2><p>全栈的话先建立数据库填数据，简单只写接口，简单只写接口，不考虑其他，然后前端，最后完善后端</p><p>新项目：</p><h4 id="1-划分目录结构"><a href="#1-划分目录结构" class="headerlink" title="1.划分目录结构"></a>1.划分目录结构</h4><p>无限细分：src</p><h4 id="2-引入两个css文件"><a href="#2-引入两个css文件" class="headerlink" title="2.引入两个css文件"></a>2.引入两个css文件</h4><pre class="line-numbers language-目录" data-language="目录"><code class="language-目录">-src --assets  —— 静态资源---img---css-----normalize.css   https:&#x2F;&#x2F;github.com&#x2F;necolas&#x2F;normalize.css   github 第三方的css样式-----base.css  自定义样式--common  —— 公共js代码--components —— 公共组件---common  —— 可以抽离到别的项目的组件---content —— 只能在当前项目使用的组件--network—— 公共网络封装--router—— 路由--store—— Vuex--view—— 视图界面--App.vue--main.js<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-两个配置文件"><a href="#3-两个配置文件" class="headerlink" title="3.两个配置文件"></a>3.两个配置文件</h4><pre class="line-numbers language-editorconfig" data-language="editorconfig"><code class="language-editorconfig"> 两个配置文件-.editorconfig   //这个是规定代码规范文件  -  做项目经理的时候就要用了,看的懂就行了<span class="token section selector"><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span></span><span class="token key attr-name">charset</span> <span class="token value attr-value"><span class="token punctuation">=</span> utf-8</span><span class="token key attr-name">indent_style</span> <span class="token value attr-value"><span class="token punctuation">=</span> space</span><span class="token key attr-name">indent_size</span> <span class="token value attr-value"><span class="token punctuation">=</span> 2</span><span class="token key attr-name">end_of_line</span> <span class="token value attr-value"><span class="token punctuation">=</span> lf</span><span class="token key attr-name">insert_final_newline</span> <span class="token value attr-value"><span class="token punctuation">=</span> true</span><span class="token key attr-name">trim_trailing_whiltespace</span> <span class="token value attr-value"><span class="token punctuation">=</span> true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-vue.config.js" data-language="vue.config.js"><code class="language-vue.config.js">-vue.config.js  脚手架 3 版本&#x2F;* vue.config.js 是一个可选的配置文件，如果项目的 (和 package.json 同级的) 根目录中存在这个文件，那么它会被 @vue&#x2F;cli-service 自动加载。你也可以使用 package.json 中的 vue 字段，但是注意这种写法需要你严格遵照 JSON 的格式来写。这个文件应该导出一个包含了选项的对象： *&#x2F;&#x2F;* 配置路径别名 vue.config.js *&#x2F;module.exports &#x3D; &#123;    configureWebpack: &#123;        resolve:&#123;           &#x2F;* extensions:[], 不用写默认已经配置过了 *&#x2F;           alias:&#123;              &#x2F;*  &#39;@&#39;:&#39;src&#39;    这个在脚手架中已经默认设置了*&#x2F;              &#39;assets&#39;:&#39;src&#x2F;assets&#39;,              &#39;common&#39;:&#39;src&#x2F;common&#39;,              &#39;components&#39;:&#39;src&#x2F;components&#39;,              &#39;network&#39;:&#39;src&#x2F;network&#39;,              &#39;views&#39;:&#39;src&#x2F;views&#39;,             &#x2F;*  &#39;network&#39;:&#39;@&#x2F;network&#39; *&#x2F;             &#x2F;* 脚手架cli_4 好像用不了 *&#x2F;           &#125;        &#125;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">--- 脚手架 4 版本&#x2F;* vue.config.js 是一个可选的配置文件，如果项目的 (和 package.json 同级的) 根目录中存在这个文件，那么它会被 @vue&#x2F;cli-service 自动加载。你也可以使用 package.json 中的 vue 字段，但是注意这种写法需要你严格遵照 JSON 的格式来写。这个文件应该导出一个包含了选项的对象： *&#x2F;&#x2F;&#x2F; vue.config.js&#x2F;* const path &#x3D;  require(&#39;path&#39;);const IS_PROD &#x3D; [&#39;production&#39;, &#39;prod&#39;].includes(process.env.NODE_ENV); *&#x2F;const resolve &#x3D; (dir) &#x3D;&gt; path.join(__dirname, dir);&#x2F;* 配置路径别名 vue.config.js *&#x2F;module.exports &#x3D; &#123;    chainWebpack: config &#x3D;&gt; &#123;        config.resolve.alias &#x2F;&#x2F; 添加别名            .set(&#39;@&#39;, resolve(&#39;src&#39;))            .set(&#39;@assets&#39;, resolve(&#39;src&#x2F;assets&#39;))            .set(&#39;@components&#39;, resolve(&#39;src&#x2F;components&#39;))            .set(&#39;@views&#39;, resolve(&#39;src&#x2F;views&#39;))            .set(&#39;@store&#39;, resolve(&#39;src&#x2F;store&#39;));    &#125;,&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="细看-cli-4的-vue-config-js"><a href="#细看-cli-4的-vue-config-js" class="headerlink" title="** 细看 cli_4的 vue.config.js"></a>** 细看 cli_4的 vue.config.js</h3><p><a href="https://maomin.blog.csdn.net/article/details/103252533?utm_medium=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.control">https://maomin.blog.csdn.net/article/details/103252533?utm_medium=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.control</a> 细看cli_4的 vue.config.js</p><h4 id="4-项目的模块划分-tabbar-gt-路由的映射关系"><a href="#4-项目的模块划分-tabbar-gt-路由的映射关系" class="headerlink" title="4.项目的模块划分:tabbar -&gt; 路由的映射关系"></a>4.项目的模块划分:tabbar -&gt; 路由的映射关系</h4><h4 id="5-写顶部导航-navigation"><a href="#5-写顶部导航-navigation" class="headerlink" title="5.写顶部导航 [navigation]"></a>5.写顶部导航 [navigation]</h4><p>封装 </p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-06_15-18-42.png"></p><h4 id="6-写轮播图，拿到数据来写-讲了一下垃圾回收机制"><a href="#6-写轮播图，拿到数据来写-讲了一下垃圾回收机制" class="headerlink" title="6.写轮播图，拿到数据来写 - 讲了一下垃圾回收机制"></a>6.写轮播图，拿到数据来写 - 讲了一下垃圾回收机制</h4><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-07_11-30-38.png"></p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-07_11-41-09.png"></p><h3 id="vue-scoped导致修改样式失效"><a href="#vue-scoped导致修改样式失效" class="headerlink" title="** vue scoped导致修改样式失效"></a>** vue scoped导致修改样式失效</h3><p><a href="https://blog.csdn.net/juse__we/article/details/80419617">https://blog.csdn.net/juse__we/article/details/80419617</a></p><p>1 scope设计的初衷就是让样式变得不可修改。所以写了scoped的样式不会影响原有样式 (导致我在scoped里写的样式无法覆盖最外面的element table样式)</p><p>2scoped原理就是在css以及html上加一个唯一标识，然后根据权重来实现目的</p><h4 id="7-后面东西就按照样式一步步来了，只挑重点的讲"><a href="#7-后面东西就按照样式一步步来了，只挑重点的讲" class="headerlink" title="7.后面东西就按照样式一步步来了，只挑重点的讲"></a>7.后面东西就按照样式一步步来了，只挑重点的讲</h4><p>position: sticky;</p><h4 id="数据结构设置"><a href="#数据结构设置" class="headerlink" title="数据结构设置"></a>数据结构设置</h4><pre class="line-numbers language-none"><code class="language-none">goods:(流行&#x2F;新款&#x2F;精选)goods:&#123; &#39;pop&#39;:&#123;page: 5,list [150条数据]&#125;, &#39;news&#39;:&#123;page: 2,list [60]&#125;, &#39;sell&#39;:&#123;page: 1,list[30]&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="将多个数组的数据保存到另一个数组中-不能被覆盖"><a href="#将多个数组的数据保存到另一个数组中-不能被覆盖" class="headerlink" title="将多个数组的数据保存到另一个数组中 - 不能被覆盖"></a>将多个数组的数据保存到另一个数组中 - 不能被覆盖</h4><pre class="line-numbers language-none"><code class="language-none">let total &#x3D; []const to &#x3D; [20,11,222]const to1 &#x3D; [20,11,222]const to2 &#x3D; [20,11,222]&#x2F;&#x2F;需求将to-num数据放入到total数组中total &#x3D; to 这样做数据就会被覆盖可以这样， 一、for(let n of to-num)&#123; total.push(n)   &#125;total.push(...nums1)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="引用BatterScroll框架"><a href="#引用BatterScroll框架" class="headerlink" title="引用BatterScroll框架"></a>引用BatterScroll框架</h4><pre class="line-numbers language-npm" data-language="npm"><code class="language-npm">npm install better-scroll --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;div class&#x3D;&quot;wrapper&quot; ref&#x3D;&quot;aaaa&quot;&gt;       &lt;ul class&#x3D;&quot;content&quot;&gt;       &lt;li&gt;1&lt;&#x2F;li&gt;     &lt;&#x2F;ul&gt;&lt;&#x2F;div&gt;&lt;script&gt;import BScroll from &#39;better-scroll&#39;export default(&#123;    name:&#39;category&#39;,    data()&#123;        return &#123;            scroll: null        &#125;    &#125;,    &#x2F;&#x2F; 组件创建完之后调用 - 组件全部创建完了 怎么拿到 .wapper标签呢？ 所以报错    created()&#123;           &#125;,    mounted()&#123;        console.log(this.$refs.aaaa)        console.log(document.querySelector(&#39;.wrapper&#39;))        this.scroll &#x3D; new BScroll(this.$refs.aaaa)    &#125;&#125;)&lt;&#x2F;script&gt;&lt;style scoped&gt;.wrapper&#123;    height: 150px;   &#x2F;&#x2F;这个宽度是必不可少的    background-color: red;    overflow: hidden; &#125;&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="复习-扩展-ref"><a href="#复习-扩展-ref" class="headerlink" title="复习 扩展 $ref"></a>复习 扩展 $ref</h4><p>ref如果是绑定在组件中，那么通过<strong>this.$refs.refname</strong>获取到的是一个组件对象</p><p>ref如果是绑定在元素中，那么通过<strong>this.$refs.refname</strong>获取到的是一个元素对象</p><pre class="line-numbers language-none"><code class="language-none">&lt;div ref&#x3D;&quot;a&quot;&gt;  元素中  避免class类重复，建议在子组件里使用 ref来拿到对象<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="解决首页中Better-Scroll可以滚动区域的问题"><a href="#解决首页中Better-Scroll可以滚动区域的问题" class="headerlink" title="解决首页中Better-Scroll可以滚动区域的问题"></a>解决首页中Better-Scroll可以滚动区域的问题</h4><ul><li><p>Better-Scroll在决定有多少区域可以滚动时，是根据scrollHeight属性决定的</p><ul><li><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-09_10-56-45.png"></li><li>但是我们首页中，刚开始在计算scrollerHeight属性时,是没有将图片计算在内的</li><li>所以，计算出来的告诉是错误的（94）</li><li>后来图片都加载进来了之后就有了新的高度，但是scrollHeight属性没有进行更新</li><li>所以产生了bug</li></ul></li><li><p>如何结局这个问题？</p><ul><li><p>监听每一张图片是否加载完成，只要有一张图片加载完成了，就执行一次refresh()</p></li><li><p>如何监听图片加载完成呢 ？</p></li><li><pre><code class="js">原生的js监听图片img.onload = function()&#123;    &#125;Vue中监听:@load=&quot;方法&quot;<pre class="line-numbers language-none"><code class="language-none">* 可以用vueX进行传值，但是在这里采用是 事件总线* ~~~  脚手架 2  bus -&gt; 总线  Vue.prototype.$bus &#x3D; new Vue()  this.$bus.emit(&#39;事件名称&#39;,参数)  this.$bus.on(&#39;事件名称&#39;，回调函数(参数))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></code></pre></li><li><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-09_11-26-26.png"></p></li><li><p><span style="color:red;">但是脚手架4 main.js里没有Vue ，所以用vueX来解决</span></p><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-10_21-54-44.png"></p></li></ul></li></ul><h4 id="防抖函数-p-175-我这样的新手不追求什么性能了，只要能显示就行"><a href="#防抖函数-p-175-我这样的新手不追求什么性能了，只要能显示就行" class="headerlink" title="防抖函数: p-175 我这样的新手不追求什么性能了，只要能显示就行"></a>防抖函数: p-175 我这样的新手不追求什么性能了，只要能显示就行</h4><h4 id="九、tabControl的吸顶效果"><a href="#九、tabControl的吸顶效果" class="headerlink" title="九、tabControl的吸顶效果"></a>九、tabControl的吸顶效果</h4><p>9.1.获取到tabControl的offsetTop</p><ul><li><p>必须知道滚到多少时，开始有吸顶效果。这个时候就需要获取tabControl的offsetTop</p></li><li><p>但是，如果直接在mounted中获取offsetTop,那么值是并不正确的。</p></li><li><p>如何获取正确的值了?</p><ul><li><p>监听HomeSwiper中img的加载完成</p></li><li><p>加载完成后，发出事件，在Home.Vue中，获取正确的值.</p></li><li><p>补充：</p><ul><li><p>为了不让HomeSwiper多次发出事件</p></li><li><p>~~~<br>imgeLoad(){<br>        if(!this.isLoad){<br>            &#x2F;&#x2F;只需要发送一次<br>            this.$emit(‘swipperImageLoad’)<br>            this.isLoad &#x3D; true<br>        }<br><br>    }</p><pre class="line-numbers language-none"><code class="language-none">* 监听，然后动态的改变样式  * 问题动态的改变tabControl的样式时，会出现两个问题  * 问题一：下面的商品内容，会突然上移  * 问题二：tabControl虽然设置了fixed,但是也随着Better-Scroll一起滚出去了* 其他方案解决停留问题  * 在最上面，多复制了一份TabControl组件对象，利用它来实现停留效果。  * 当用户滚动到一定位置时，PlaceHolderTabControl显示出来  * 当用户滚动没有达到一定位置时，PlaceHolderTabControl隐藏起来![]( http:&#x2F;&#x2F;statusproject.gitee.io&#x2F;import-small-blog&#x2F;static&#x2F;VueJs-study&#x2F;Snipaste_2021-01-11_15-48-05.png)#### 十、让Home保持原来的状态让Home不要随意销毁掉* keep-alive* 版本改了， 以后再解决 ， 这个脚手架4  真的让我无语     p-179集   主要是这个插件不要用 better-scroll **垃圾**#### 十一、跳转到详情页，并且带参(id)~~~html &#x2F;&#x2F; 跳转到详情页 this.$router.push(&#39;&#x2F;detail&#39;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul></li></ul><h4 id="十二、如果服务器的数据复杂，就需要抽离出来"><a href="#十二、如果服务器的数据复杂，就需要抽离出来" class="headerlink" title="十二、如果服务器的数据复杂，就需要抽离出来"></a>十二、如果服务器的数据复杂，就需要抽离出来</h4><p>将杂乱无章的数据整合成一个对象</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">network 里export class Desc&#123;    constructor(introduction,topicData,briefDesc)&#123;         this.introduction&#x3D;introduction        this.topicData&#x3D;topicData        this.briefDesc&#x3D;briefDesc    &#125;&#125; vue 里import &#123;Desc&#125; from &#39;@&#x2F;network&#x2F;detail&#39; created()&#123;        this.getDesc(this.id)    &#125;,getDesc(id)&#123;        getDesc(id).then(res &#x3D;&gt; &#123;        const data &#x3D; res.data      &#x2F;&#x2F; 2.new 出Desc        this.desc &#x3D; new   Desc(data.introduction,data.topicData,data.briefDesc)            &#125;)        &#125;,<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="小细节："><a href="#小细节：" class="headerlink" title="小细节："></a>小细节：</h5><pre class="line-numbers language-v-for" data-language="v-for"><code class="language-v-for">&lt;v-for&#x3D;&quot;item in 10&quot;&gt;这里 就是1，2，3，4，5，6，7，8，9，10判断一个对象是否为空对象const obj&#x3D;&#123;&#125;Object.keys(obj).length &#x3D;&#x3D;&#x3D; 0  为空  debugger; 查bug用的<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-13_11-17-58.png"></p><h4 id="二十一、补充一些细节"><a href="#二十一、补充一些细节" class="headerlink" title="二十一、补充一些细节"></a>二十一、补充一些细节</h4><p>21.1 如何解决移动端Click事件300ms延迟的问题？ —— 两年没更新了。</p><p>引用 fastClick 减少点击的延迟减少移动端的延迟</p><p><a href="https://github.com/ftlabs/fastclick">https://github.com/ftlabs/fastclick</a></p><pre class="line-numbers language-none"><code class="language-none">npm install fastclick --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装</p><p>导入</p><p>调用attach函数</p><p>22.2 什么是图片懒加载？</p><p>用到了图片才会加载出来</p><p><a href="https://github.com/hilongjw/vue-lazyload">https://github.com/hilongjw/vue-lazyload</a>   – 这个库还在更新</p><pre class="line-numbers language-none"><code class="language-none">$ npm install vue-lazyload --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>22.3 px 转成 vw 插件</p><p>postcss-px-to-viewpor  插件</p><p><a href="https://blog.csdn.net/Charissa2017/article/details/105420971">https://blog.csdn.net/Charissa2017/article/details/105420971</a></p><h4 id="二十二、"><a href="#二十二、" class="headerlink" title="二十二、"></a>二十二、</h4><p>通过nginx部署项目  windows &#x2F; linux  -&gt;  tomcat&#x2F; nginx</p><h4 id="面试题"><a href="#面试题" class="headerlink" title="面试题"></a>面试题</h4><p>1.如何理解Vue的生命周期？</p><p>2.如何进行非父子组件通信?</p><p>3.Vue的响应式原理</p><ul><li>不要认为数据发生改变,界面跟着更新,并不是理所当然的。</li></ul><p><img src="http://statusproject.gitee.io/import-small-blog/static/VueJs-study/Snipaste_2021-01-13_16-45-11.png"></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
